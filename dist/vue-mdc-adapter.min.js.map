{"version":3,"file":"vue-mdc-adapter.min.js","sources":["../components/base/base-plugin.js","../components/base/custom-element.js","../components/base/custom-link.js","../components/base/custom-event.js","../components/base/custom-button.js","../components/base/custom-icon.js","../components/base/dispatch-event-mixin.js","../components/base/dispatch-focus-mixin.js","../node_modules/@material/base/foundation.js","../node_modules/@material/ripple/constants.js","../node_modules/@material/ripple/adapter.js","../node_modules/@material/ripple/util.js","../node_modules/@material/ripple/foundation.js","../components/ripple/mdc-ripple-base.js","../components/ripple/index.js","../components/ripple/mdc-ripple.vue","../components/button/mdc-button-base.vue","../components/button/mdc-button.vue","../components/button/index.js","../components/card/index.js","../components/card/mdc-card.vue","../components/card/mdc-card-primary-action.vue","../components/card/mdc-card-media.vue","../components/card/mdc-card-header.vue","../components/card/mdc-card-title.vue","../components/card/mdc-card-subtitle.vue","../components/card/mdc-card-text.vue","../components/card/mdc-card-actions.vue","../components/card/mdc-card-action-buttons.vue","../components/card/mdc-card-action-button.vue","../components/card/mdc-card-action-icons.vue","../components/card/mdc-card-action-icon.vue","../node_modules/@material/base/component.js","../node_modules/@material/checkbox/constants.js","../node_modules/@material/ripple/index.js","../node_modules/@material/checkbox/adapter.js","../node_modules/@material/checkbox/foundation.js","../node_modules/@material/form-field/adapter.js","../node_modules/@material/form-field/constants.js","../node_modules/@material/form-field/foundation.js","../node_modules/@material/animation/index.js","../components/checkbox/mdc-checkbox.vue","../components/checkbox/index.js","../node_modules/@material/chips/chip/constants.js","../node_modules/@material/chips/chip/adapter.js","../node_modules/@material/chips/chip/foundation.js","../components/chips/mdc-chip.vue","../node_modules/@material/chips/chip-set/constants.js","../node_modules/@material/chips/chip-set/adapter.js","../node_modules/@material/chips/chip-set/foundation.js","../components/chips/index.js","../components/chips/mdc-chip-set.vue","../node_modules/@material/dialog/constants.js","../node_modules/@material/dialog/foundation.js","../node_modules/tabbable/index.js","../node_modules/focus-trap/index.js","../components/dialog/index.js","../components/dialog/mdc-dialog.vue","../node_modules/@material/dialog/util.js","../components/drawer/mdc-permanent-drawer.vue","../node_modules/@material/drawer/slidable/constants.js","../node_modules/@material/drawer/slidable/foundation.js","../node_modules/@material/drawer/persistent/constants.js","../node_modules/@material/drawer/persistent/foundation.js","../node_modules/@material/drawer/util.js","../components/drawer/mdc-persistent-drawer.vue","../node_modules/@material/drawer/temporary/constants.js","../node_modules/@material/drawer/temporary/foundation.js","../components/drawer/mdc-temporary-drawer.vue","../components/drawer/mdc-drawer.vue","../components/drawer/index.js","../components/drawer/mdc-drawer-layout.vue","../components/drawer/mdc-drawer-header.vue","../components/drawer/mdc-drawer-list.vue","../components/drawer/mdc-drawer-item.vue","../components/drawer/mdc-drawer-divider.vue","../components/elevation/index.js","../components/elevation/mdc-elevation.vue","../components/fab/index.js","../components/fab/mdc-fab.vue","../node_modules/@material/grid-list/constants.js","../node_modules/@material/grid-list/foundation.js","../components/grid-list/index.js","../components/grid-list/mdc-grid-list.vue","../components/grid-list/mdc-grid-tile.vue","../components/icon/index.js","../components/icon/mdc-icon.vue","../node_modules/@material/icon-toggle/constants.js","../node_modules/@material/icon-toggle/adapter.js","../node_modules/@material/icon-toggle/foundation.js","../components/icon-toggle/mdc-icon-toggle.vue","../components/icon-toggle/index.js","../components/layout-app/index.js","../components/layout-app/mdc-layout-app.vue","../components/layout-grid/mdc-layout-grid.vue","../components/layout-grid/mdc-layout-cell.vue","../components/layout-grid/index.js","../components/layout-grid/mdc-layout-inner-grid.vue","../node_modules/@material/linear-progress/constants.js","../node_modules/@material/linear-progress/foundation.js","../components/linear-progress/mdc-linear-progress.vue","../components/linear-progress/index.js","../components/list/index.js","../components/list/mdc-list.vue","../components/list/mdc-list-item.vue","../components/list/mdc-list-divider.vue","../components/list/mdc-list-group.vue","../components/list/mdc-list-group-header.vue","../components/list/mdc-list-group-divider.vue","../node_modules/@material/menu/constants.js","../node_modules/@material/menu/adapter.js","../node_modules/@material/menu/foundation.js","../node_modules/@material/menu/util.js","../components/menu/mdc-menu.vue","../components/menu/index.js","../components/menu/mdc-menu-item.vue","../components/menu/mdc-menu-divider.vue","../components/menu/mdc-menu-anchor.vue","../node_modules/@material/radio/constants.js","../node_modules/@material/radio/adapter.js","../node_modules/@material/radio/foundation.js","../components/radio/index.js","../components/radio/mdc-radio.vue","../components/select/mdc-native-select.vue","../node_modules/@material/select/constants.js","../node_modules/@material/select/foundation.js","../node_modules/@material/menu/index.js","../node_modules/@material/select/label/constants.js","../node_modules/@material/select/label/adapter.js","../node_modules/@material/select/label/foundation.js","../components/select/mdc-menu-select.vue","../components/select/mdc-multi-select.vue","../components/select/mdc-select.vue","../components/select/mdc-native-option.vue","../components/select/mdc-menu-option.vue","../components/select/mdc-multi-option.vue","../components/select/index.js","../components/select/mdc-option.vue","../node_modules/@material/slider/constants.js","../node_modules/@material/slider/foundation.js","../node_modules/@material/slider/adapter.js","../components/slider/index.js","../components/slider/mdc-slider.vue","../node_modules/@material/snackbar/constants.js","../node_modules/@material/snackbar/foundation.js","../components/snackbar/index.js","../components/snackbar/mdc-snackbar.vue","../components/switch/index.js","../components/switch/mdc-switch.vue","../node_modules/@material/tabs/tab/constants.js","../node_modules/@material/tabs/tab/foundation.js","../components/tabs/mdc-tab.vue","../node_modules/@material/tabs/tab-bar/constants.js","../node_modules/@material/tabs/tab-bar/foundation.js","../components/tabs/index.js","../components/tabs/mdc-tab-bar.vue","../node_modules/@material/line-ripple/constants.js","../node_modules/@material/line-ripple/adapter.js","../node_modules/@material/line-ripple/foundation.js","../node_modules/@material/textfield/helper-text/constants.js","../node_modules/@material/textfield/helper-text/adapter.js","../node_modules/@material/textfield/helper-text/foundation.js","../node_modules/@material/textfield/icon/constants.js","../node_modules/@material/textfield/icon/adapter.js","../node_modules/@material/textfield/icon/foundation.js","../node_modules/@material/textfield/label/constants.js","../node_modules/@material/textfield/label/adapter.js","../node_modules/@material/textfield/label/foundation.js","../node_modules/@material/textfield/outline/constants.js","../node_modules/@material/textfield/outline/adapter.js","../node_modules/@material/textfield/outline/foundation.js","../node_modules/@material/textfield/constants.js","../node_modules/@material/textfield/adapter.js","../node_modules/@material/textfield/foundation.js","../components/textfield/index.js","../components/textfield/mdc-textfield.vue","../components/theme/mdc-theme.vue","../components/theme/index.js","../node_modules/@material/toolbar/constants.js","../node_modules/@material/toolbar/foundation.js","../node_modules/@material/toolbar/util.js","../components/toolbar/index.js","../components/toolbar/mdc-toolbar.vue","../components/toolbar/mdc-toolbar-row.vue","../components/toolbar/mdc-toolbar-section.vue","../components/toolbar/mdc-toolbar-menu-icon.vue","../components/toolbar/mdc-toolbar-title.vue","../components/toolbar/mdc-toolbar-icon.vue","../components/typography/mdc-typography.js","../components/typography/index.js","../components/index.js","../components/base/auto-init.js","../components/entry.js"],"sourcesContent":["export function BasePlugin (components) { \n  return {\n    version: '__VERSION__',\n    install: (vm) => {\n      for (let key in components) {\n        let component = components[key]\n          vm.component(component.name,component)\n      }\n    },\n    components\n  } \n}\n\n","export const CustomElement = {\n  functional: true,\n  render (createElement, context) {\n    return createElement(\n      context.props.is || context.props.tag || 'div', \n      context.data,\n      context.children)\n  }\n}\n\nexport const CustomElementMixin = {\n  components: {\n    CustomElement\n  }\n}\n","export const CustomLink = {\n  name: 'custom-link',\n  functional: true,\n  props: {\n    tag: { type: String, default: 'a' },\n    link : Object,\n  },\n  render (h, context) {\n    let element \n    let data = Object.assign({}, context.data)\n\n    if (context.props.link && context.parent.$router) {\n      // router-link case\n      element = context.parent.$root.$options.components['router-link'] \n      data.props = Object.assign({tag: context.props.tag}, context.props.link)\n      if (data.on.click) {\n        data.nativeOn = {click: data.on.click }\n      }\n    } else {\n      // element fallback\n      element = context.props.tag \n    } \n\n    return h(element, data, context.children)\n  }\n}\n\nexport const CustomLinkMixin = {\n  props: {\n    to: [String, Object],\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n  },\n  computed: {\n    link () {\n      return this.to && {\n        to: this.to,\n        exact: this.exact,\n        append: this.append,\n        replace: this.replace,\n        activeClass: this.activeClass,\n        exactActiveClass: this.exactActiveClass,\n      }\n    }\n  },\n  components : { \n    CustomLink \n  }\n}","/* global CustomEvent */\n\nexport function emitCustomEvent (el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","export const CustomButton = {\n  name: 'custom-button',\n  functional: true,\n  props: {\n    link : Object,\n  },\n  render (h, context) {\n    let element \n    let data = Object.assign({}, context.data)\n\n    if (context.props.link && context.parent.$router) {\n      // router-link case\n      element = context.parent.$root.$options.components['router-link'] \n      data.props = Object.assign({tag: context.props.tag}, context.props.link)\n      data.attrs.role = 'button'\n      if (data.on.click) {\n        data.nativeOn = {click: data.on.click }\n      }\n    } else if (data.attrs && data.attrs.href) {\n      // href case\n      element = 'a' \n      data.attrs.role = 'button'\n    }  else {\n      // button fallback\n      element = 'button'\n    } \n\n    return h(element, data, context.children)\n  }\n}\n\nexport const CustomButtonMixin = {\n  props: {\n    href: String,\n    disabled: Boolean,\n    to: [String, Object],\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n  },\n  computed: {\n    link () {\n      return this.to && {\n        to: this.to,\n        exact: this.exact,\n        append: this.append,\n        replace: this.replace,\n        activeClass: this.activeClass,\n        exactActiveClass: this.exactActiveClass,\n      }\n    }\n  },\n  components : { \n    CustomButton \n  }\n}\n","export function extractIconProp (iconProp) {\n    if (typeof iconProp === 'string') {\n      return {\n        classes: { 'material-icons' : true},\n        content: iconProp \n      }\n    }\n    else if (iconProp instanceof Array){\n      return { \n        classes: iconProp.reduce(\n          (result, value) => Object.assign(result,{[value]:true}),\n          {}),\n        }\n    }\n    else if (typeof iconProp === 'object'){\n      return { \n        classes: iconProp.className.split(' ').reduce(\n          (result, value) => Object.assign(result,{[value]:true}),\n          {}),\n        content: iconProp.textContent \n      }\n    }\n  }\n","export const DispatchEventMixin = {\n  props: {\n    'event': String,\n    'event-target': Object,\n    'event-args': Array,\n  },\n  methods: {\n    dispatchEvent (evt) {\n      this.$emit(evt.type)\n      if (this.event) {\n        let target = this.eventTarget || this.$root\n        let args = this.eventArgs || []\n        target.$emit(this.event, ...args)\n      }\n    }\n  }\n}\n","export const DispatchFocusMixin = {\n  data () {\n    return  {hasFocus: false}\n  },\n  methods: {\n    onMouseDown() {\n      this._active = true\n    },\n    onMouseUp () {\n      this._active = false\n    },\n    onFocusEvent () {\n      // dispatch async to let time to other focus event to propagate\n      setTimeout(() => this.dispatchFocusEvent(),0)\n    },\n    onBlurEvent () {\n      // dispatch async to let time to other focus event to propagate\n      // also filtur blur if mousedown\n      this._active || setTimeout(() => this.dispatchFocusEvent(),0)\n    },\n    dispatchFocusEvent() {\n      let hasFocus = this.$el === document.activeElement || this.$el.contains(document.activeElement);\n      if (hasFocus != this.hasFocus) {\n        this.$emit(hasFocus ? 'focus' : 'blur')\n        this.hasFocus = hasFocus\n      }\n    }\n  },\n  mounted () {\n    this.$el.addEventListener('focusin', this.onFocusEvent)\n    this.$el.addEventListener('focusout', this.onBlurEvent)\n    this.$el.addEventListener('mousedown', this.onMouseDown)\n    this.$el.addEventListener('mouseup', this.onMouseUp)\n  },\n  beforeDestroy () {\n    this.$el.removeEventListener('focusin', this.onFocusEvent)\n    this.$el.removeEventListener('focusout', this.onBlurEvent)\n    this.$el.removeEventListener('mousedown', this.onMouseDown)\n    this.$el.removeEventListener('mouseup', this.onMouseUp)\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables_;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables_ = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables_ = false;\n  }\n  return supportsCssVariables_;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'webkitMatchesSelector', 'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\n/**\n * @param {!Event} ev\n * @param {!{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {!{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {!{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: Event,\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {!{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {!{\n *   activate: function(!Event),\n *   deactivate: function(!Event),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {!{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event)} */\n    this.deactivateHandler_ = (e) => this.deactivate_(e);\n\n    /** @private {function(?Event=)} */\n    this.focusHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {function(?Event=)} */\n    this.blurHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {!{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {?Event} */\n    this.previousActivationEvent_ = null;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  isSupported_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: null,\n      isProgrammatic: false,\n    };\n  }\n\n  init() {\n    if (!this.isSupported_()) {\n      return;\n    }\n    this.registerRootHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(ROOT);\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.addClass(UNBOUNDED);\n      }\n      this.layoutInternal_();\n    });\n  }\n\n  destroy() {\n    if (!this.isSupported_()) {\n      return;\n    }\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(ROOT);\n      this.adapter_.removeClass(UNBOUNDED);\n      this.removeCssVars_();\n    });\n  }\n\n  /** @private */\n  registerRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === null;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild =\n      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    requestAnimationFrame(() => {\n      // This needs to be wrapped in an rAF call b/c web browsers\n      // report active states inconsistently when they're called within\n      // event handling code:\n      // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n      // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n      activationState.wasElementMadeActive = (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n      if (activationState.wasElementMadeActive) {\n        this.animateActivation_();\n      } else {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n    });\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  activate(event = null) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  deactivate_(e) {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      const evtObject = null;\n      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(e, state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  deactivate(event = null) {\n    this.deactivate_(event);\n  }\n\n  /**\n   * @param {Event} e\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n}\n\nexport default MDCRippleFoundation;\n","import MDCRippleFoundation from '@material/ripple/foundation.js'\nimport {supportsCssVariables, getMatchesProperty, applyPassive} from '@material/ripple/util'\n\nexport class RippleBase extends MDCRippleFoundation {\n\n  static get MATCHES () {\n    /* global HTMLElement */\n    return RippleBase._matches ||\n      ( RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\n  }\n\n  static isSurfaceActive (ref) {\n    return ref[RippleBase.MATCHES](':active')\n  }\n\n  constructor (vm, options) {\n    super(Object.assign({\n      browserSupportsCssVars: () => {\n        return supportsCssVariables(window)\n      },\n      isUnbounded: () => {\n        return false\n      },\n      isSurfaceActive: () => {\n        return vm.$el[RippleBase.MATCHES](':active')\n      },\n      isSurfaceDisabled: () => {\n        return vm.disabled\n      },\n      addClass (className) {\n        vm.$set(vm.classes, className, true)\n      },\n      removeClass (className) {\n        vm.$delete(vm.classes, className)\n      },\n      containsEventTarget: (target) => vm.$el.contains(target),\n      registerInteractionHandler: (evt, handler) => {\n        vm.$el.addEventListener(evt, handler)\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        vm.$el.removeEventListener(evt, handler)\n      },\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, applyPassive()),\n      registerResizeHandler: (handler) => {\n        return window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: (handler) => {\n        return window.removeEventListener('resize', handler)\n      },\n      updateCssVariable: (varName, value) => {\n        vm.$set(vm.styles, varName, value)\n      },\n      computeBoundingRect: () => {\n        return vm.$el.getBoundingClientRect()\n      },\n      getWindowPageOffset: () => {\n        return ({x: window.pageXOffset, y: window.pageYOffset})\n      },\n    }, options))\n  }\n}\n\nexport const RippleMixin = {\n  data () {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  mounted () {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy () {\n    this.ripple.destroy()\n  }\n}  ","import {BasePlugin} from '../base'\nimport mdcRipple from './mdc-ripple.vue'\n\nexport * from './mdc-ripple-base.js'\n\nexport {\n  mdcRipple\n}\n\nexport default BasePlugin({\n  mdcRipple\n})\n","<template>\n  <custom-element :tag=\"tag\" class=\"mdc-ripple\"\n    :classes=\"classes\" :styles=\"styles\">\n    <slot />\n  </custom-element>\n</template>\n\n<script>\nimport {CustomElementMixin} from '../base'\nimport {RippleMixin} from './mdc-ripple-base'\n\nexport default {\n  name: 'mdc-ripple',\n  mixins:[CustomElementMixin, RippleMixin],\n  props: {\n    tag: String\n  },\n}\n</script>\n","<template>\n  <custom-button ref=\"root\"\n    :class=\"classes\" :style=\"styles\" \n    :href=\"href\" :link=\"link\" :disabled=\"disabled\" \n    @click=\"dispatchEvent\">\n    <slot />\n  </custom-button>\n</template>\n\n<script>\nimport {DispatchEventMixin, CustomButtonMixin} from '../base'\nimport {RippleMixin} from '../ripple'\n\nexport default {\n  name: 'mdc-button-base',\n  mixins: [DispatchEventMixin, CustomButtonMixin, RippleMixin],\n  data () {\n    return {\n      classes: {},\n      styles: {}\n    }\n  }\n}\n</script>\n","<script>\nimport mdcButtonBase from './mdc-button-base.vue'\n\nexport default {\n  name: 'mdc-button',\n  extends: mdcButtonBase,\n  props: {\n    raised: Boolean,\n    unelevated: Boolean,\n    stroked: Boolean,\n    dense: Boolean,\n    compact: Boolean, \n    accent: Boolean\n  },\n  data () {\n    return {\n      classes: {\n        'mdc-button': true,\n        'mdc-button--raised': this.raised,\n        'mdc-button--unelevated': this.unelevated,\n        'mdc-button--stroked': this.stroked,\n        'mdc-button--dense': this.dense,\n        'mdc-button--compact': this.compact,\n        'mdc-button--accent': this.accent\n      }\n    }\n  },\n  watch: {\n    raised () {\n      this.$set(this.classes, 'mdc-button--raised', this.raised )\n    },\n    unelevated () {\n      this.$set(this.classes, 'mdc-button--unelevated', this.unelevated )\n    },\n    stroked () {\n      this.$set(this.classes, 'mdc-button--stroked', this.stroked )\n    },\n    dense () {\n      this.$set(this.classes, 'mdc-button--dense', this.dense )\n    },\n    compact () {\n      this.$set(this.classes, 'mdc-button--compact', this.compact )\n    },\n    accent () {\n      this.$set(this.classes, 'mdc-button--accent', this.accent )\n    },\n  }\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcButton from './mdc-button.vue'\nimport mdcButtonBase from './mdc-button-base.vue'\n\nexport {mdcButtonBase, mdcButton}\n\nexport default BasePlugin({\n  mdcButton\n})\n","import {BasePlugin} from '../base'\r\nimport mdcCard from './mdc-card.vue'\r\nimport mdcCardPrimaryAction from './mdc-card-primary-action.vue'\r\nimport mdcCardMedia from './mdc-card-media.vue'\r\nimport mdcCardHeader from './mdc-card-header.vue'\r\nimport mdcCardTitle from './mdc-card-title.vue'\r\nimport mdcCardSubtitle from './mdc-card-subtitle.vue'\r\nimport mdcCardText from './mdc-card-text.vue'\r\nimport mdcCardActions from './mdc-card-actions.vue'\r\nimport mdcCardActionButtons from './mdc-card-action-buttons.vue'\r\nimport mdcCardActionButton from './mdc-card-action-button.vue'\r\nimport mdcCardActionIcons from './mdc-card-action-icons.vue'\r\nimport mdcCardActionIcon from './mdc-card-action-icon.vue'\r\n\r\nexport {\r\n  mdcCard,\r\n  mdcCardPrimaryAction, \r\n  mdcCardMedia,\r\n  mdcCardHeader,\r\n  mdcCardTitle,\r\n  mdcCardSubtitle,\r\n  mdcCardText,\r\n  mdcCardActions,\r\n  mdcCardActionButtons,\r\n  mdcCardActionButton,\r\n  mdcCardActionIcons,\r\n  mdcCardActionIcon \r\n}\r\n\r\nexport default BasePlugin({\r\n  mdcCard, \r\n  mdcCardPrimaryAction,\r\n  mdcCardMedia,\r\n  mdcCardHeader,\r\n  mdcCardTitle,\r\n  mdcCardSubtitle,\r\n  mdcCardText,\r\n  mdcCardActions,\r\n  mdcCardActionButtons,\r\n  mdcCardActionButton,\r\n  mdcCardActionIcons,\r\n  mdcCardActionIcon\r\n})\r\n","<template>\r\n  <div class=\"mdc-card\" :class=\"{'mdc-card--stroked': stroked}\">\r\n    <slot>\r\n    </slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"mdc-card\",\r\n  props: {\r\n    stroked: Boolean\r\n  }\r\n};\r\n</script>\r\n","<template>\r\n  <custom-link \r\n    class=\"mdc-card-primary-action mdc-card__primary-action\"\r\n    :class=\"classes\" :style=\"styles\" \r\n    :link=\"link\" \r\n    @click=\"dispatchEvent\">\r\n    <slot />\r\n  </custom-link>\r\n</template>\r\n\r\n<script>\r\nimport {DispatchEventMixin, CustomLinkMixin} from '../base'\r\nimport { RippleMixin } from '../ripple/index';\r\nexport default {\r\n  name: 'mdc-card-primary-action',\r\n  mixins: [DispatchEventMixin, CustomLinkMixin, RippleMixin],\r\n  data () {\r\n    return {\r\n      classes: {},\r\n      styles: {}\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <section class=\"mdc-card-media mdc-card__media\" \r\n    :class=\"classes\" :style=\"styles\">\r\n    <div class=\"mdc-card__media-content\" v-if=\"$slots.default\">\r\n      <slot>\r\n      </slot>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"mdc-card-media\",\r\n  props: {\r\n    src: String,\r\n    'square': Boolean\r\n  },\r\n  computed: {\r\n    styles() {\r\n      var styles = {\r\n        backgroundImage: `url(${this.src})`\r\n      };\r\n\r\n      return styles;\r\n    }, \r\n    classes() {\r\n      return this.square ? 'mdc-card__media--square': 'mdc-card__media--16-9'\r\n    }\r\n  }\r\n}\r\n</script>\r\n","<template>\n  <section class=\"mdc-card-header mdc-card__primary\">\n    <slot>\n      <h1 class=\"mdc-card__title\"\n        :class=\"{'mdc-card__title--large': largeTitle}\"\n        v-if=\"title\"\n        >\n        {{ title }}\n      </h1>\n      <h2 class=\"mdc-card__subtitle\"\n        v-if=\"subtitle\"\n      >\n       {{ subtitle }} \n      </h2>\n    </slot>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-card-header',\n  props: {\n    'title': String,\n    'subtitle': String,\n    'large-title': { type: Boolean, default: true }\n  }\n}\n</script>\n","<template>\n  <h1 class=\"mdc-card-title mdc-card__title\"\n      :class=\"{'mdc-card__title--large': large}\">\n    <slot></slot>\n  </h1>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-card-title',\n  props: {\n    'large': Boolean\n  }\n}\n</script>\n","<template>\n  <h2 class=\"mdc-card-subtitle mdc-card__subtitle\">\n    <slot>\n    </slot>\n  </h2>\n</template>\n\n\n\n<script>\nexport default {\n  name: 'mdc-card-subtitle'\n}\n</script>\n","<template>\n  <section class=\"mdc-card-text mdc-card__supporting-text\">\n    <slot>\n    </slot>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-card-text'\n}\n</script>\n","<template>\r\n  <section class=\"mdc-card-actions mdc-card__actions\" \r\n          :class=\"classes\">\r\n    <slot>\r\n    </slot>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'mdc-card-actions',\r\n  props: {\r\n    fullBleed: Boolean\r\n  },\r\n  computed: {\r\n    classes () {\r\n      return {\r\n          'mdc-card__actions--full-bleed': this.fullBleed,\r\n      }\r\n    }\r\n  },\r\n}\r\n</script>\r\n","<template>\r\n  <div class=\"mdc-card-action-buttons mdc-card__action-buttons\">\r\n    <slot>\r\n    </slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"mdc-card-action-buttons\"\r\n};\r\n</script>\r\n","<script>\r\nimport {mdcButtonBase} from '../button'\r\n\r\nexport default {\r\n  name: 'mdc-card-action-button',\r\n  extends: mdcButtonBase,\r\n  props: {\r\n    compact: Boolean,\r\n    accent: Boolean\r\n  },\r\n  data () {\r\n    return {\r\n      classes: {\r\n        'mdc-button': true,\r\n        'mdc-card__action': true,\r\n        'mdc-card-action-button': true,\r\n        'mdc-button--compact': this.compact,\r\n        'mdc-button--accent': this.accent,\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    compact () {\r\n      this.$set(this.classes, 'mdc-button--compact', this.compact )\r\n    },\r\n    accent () {\r\n      this.$set(this.classes, 'mdc-button--accent', this.accent )\r\n    },\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <div class=\"mdc-card-action-icons mdc-card__action-icons\">\r\n    <slot>\r\n    </slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"mdc-card-action-icons\"\r\n};\r\n</script>\r\n","<template>\r\n  <span :class=\"classes\" :style=\"styles\" \r\n    @click=\"dispatchEvent\">\r\n    <slot>{{ icon }}</slot>\r\n  </span>\r\n</template>\r\n\r\n<script>\r\nimport {DispatchEventMixin} from '../base'\r\nimport {RippleBase} from '../ripple'\r\n\r\nexport default {\r\n  name: 'mdc-card-action-icon',\r\n  mixins: [DispatchEventMixin],\r\n  props: {\r\n    icon: String\r\n  },\r\n  data () {\r\n    return {\r\n      classes: {\r\n        'mdc-card-action-icon': true, \r\n        'material-icons':!!this.icon,\r\n        'mdc-card__action': true,\r\n        'mdc-card__action--icon': true,\r\n        'mdc-icon-toggle': true\r\n      },\r\n      styles: {}\r\n    }\r\n  },\r\n  watch: {\r\n    icon () {\r\n      this.$set(this.classes, 'material-icons', !!this.icon)\r\n    }\r\n  },\r\n  mounted () {\r\n    this.ripple = new RippleBase(this,{\r\n      isUnbounded: () => true,\r\n    })\r\n    this.ripple.init()\r\n  },\r\n  beforeDestroy () {\r\n    this.ripple.destroy()\r\n  }\r\n}\r\n</script>\r\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @const {string} */\nconst ROOT = 'mdc-checkbox';\n\n/** @enum {string} */\nconst cssClasses = {\n  UPGRADED: 'mdc-checkbox--upgraded',\n  CHECKED: 'mdc-checkbox--checked',\n  INDETERMINATE: 'mdc-checkbox--indeterminate',\n  DISABLED: 'mdc-checkbox--disabled',\n  ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',\n  ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',\n  ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',\n  ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',\n  ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',\n  ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked',\n};\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: `.${ROOT}__native-control`,\n  TRANSITION_STATE_INIT: 'init',\n  TRANSITION_STATE_CHECKED: 'checked',\n  TRANSITION_STATE_UNCHECKED: 'unchecked',\n  TRANSITION_STATE_INDETERMINATE: 'indeterminate',\n};\n\n/** @enum {number} */\nconst numbers = {\n  ANIM_END_LATCH_MS: 250,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCComponent from '@material/base/component';\nimport MDCRippleAdapter from './adapter';\nimport MDCRippleFoundation from './foundation';\nimport * as util from './util';\n\n/**\n * @extends MDCComponent<!MDCRippleFoundation>\n */\nclass MDCRipple extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n\n    /** @type {boolean} */\n    this.disabled = false;\n\n    /** @private {boolean} */\n    this.unbounded_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {{isUnbounded: (boolean|undefined)}=} options\n   * @return {!MDCRipple}\n   */\n  static attachTo(root, {isUnbounded = undefined} = {}) {\n    const ripple = new MDCRipple(root);\n    // Only override unbounded behavior if option is explicitly specified\n    if (isUnbounded !== undefined) {\n      ripple.unbounded = /** @type {boolean} */ (isUnbounded);\n    }\n    return ripple;\n  }\n\n  /**\n   * @param {!RippleCapableSurface} instance\n   * @return {!MDCRippleAdapter}\n   */\n  static createAdapter(instance) {\n    const MATCHES = util.getMatchesProperty(HTMLElement.prototype);\n\n    return {\n      browserSupportsCssVars: () => util.supportsCssVariables(window),\n      isUnbounded: () => instance.unbounded,\n      isSurfaceActive: () => instance.root_[MATCHES](':active'),\n      isSurfaceDisabled: () => instance.disabled,\n      addClass: (className) => instance.root_.classList.add(className),\n      removeClass: (className) => instance.root_.classList.remove(className),\n      containsEventTarget: (target) => instance.root_.contains(target),\n      registerInteractionHandler: (evtType, handler) =>\n        instance.root_.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterInteractionHandler: (evtType, handler) =>\n        instance.root_.removeEventListener(evtType, handler, util.applyPassive()),\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, util.applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, util.applyPassive()),\n      registerResizeHandler: (handler) => window.addEventListener('resize', handler),\n      deregisterResizeHandler: (handler) => window.removeEventListener('resize', handler),\n      updateCssVariable: (varName, value) => instance.root_.style.setProperty(varName, value),\n      computeBoundingRect: () => instance.root_.getBoundingClientRect(),\n      getWindowPageOffset: () => ({x: window.pageXOffset, y: window.pageYOffset}),\n    };\n  }\n\n  /** @return {boolean} */\n  get unbounded() {\n    return this.unbounded_;\n  }\n\n  /** @param {boolean} unbounded */\n  set unbounded(unbounded) {\n    this.unbounded_ = Boolean(unbounded);\n    this.setUnbounded_();\n  }\n\n  /**\n   * Closure Compiler throws an access control error when directly accessing a\n   * protected or private property inside a getter/setter, like unbounded above.\n   * By accessing the protected property inside a method, we solve that problem.\n   * That's why this function exists.\n   * @private\n   */\n  setUnbounded_() {\n    this.foundation_.setUnbounded(this.unbounded_);\n  }\n\n  activate() {\n    this.foundation_.activate();\n  }\n\n  deactivate() {\n    this.foundation_.deactivate();\n  }\n\n  layout() {\n    this.foundation_.layout();\n  }\n\n  /** @return {!MDCRippleFoundation} */\n  getDefaultFoundation() {\n    return new MDCRippleFoundation(MDCRipple.createAdapter(this));\n  }\n\n  initialSyncWithDOM() {\n    this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;\n  }\n}\n\n/**\n * See Material Design spec for more details on when to use ripples.\n * https://material.io/guidelines/motion/choreography.html#choreography-creation\n * @record\n */\nclass RippleCapableSurface {}\n\n/** @protected {!Element} */\nRippleCapableSurface.prototype.root_;\n\n/**\n * Whether or not the ripple bleeds out of the bounds of the element.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.unbounded;\n\n/**\n * Whether or not the ripple is attached to a disabled component.\n * @type {boolean|undefined}\n */\nRippleCapableSurface.prototype.disabled;\n\nexport {MDCRipple, MDCRippleFoundation, RippleCapableSurface, util};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Checkbox. Provides an interface for managing\n * - classes\n * - dom\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCCheckboxAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventListener} handler */\n  registerAnimationEndHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  deregisterAnimationEndHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  registerChangeHandler(handler) {}\n\n  /** @param {!EventListener} handler */\n  deregisterChangeHandler(handler) {}\n\n  /** @return {!MDCSelectionControlState} */\n  getNativeControl() {}\n\n  forceLayout() {}\n\n  /** @return {boolean} */\n  isAttachedToDOM() {}\n}\n\nexport default MDCCheckboxAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\nimport MDCCheckboxAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n/** @const {!Array<string>} */\nconst CB_PROTO_PROPS = ['checked', 'indeterminate'];\n\n/**\n * @extends {MDCFoundation<!MDCCheckboxAdapter>}\n */\nclass MDCCheckboxFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {!MDCCheckboxAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCCheckboxAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerAnimationEndHandler: (/* handler: EventListener */) => {},\n      deregisterAnimationEndHandler: (/* handler: EventListener */) => {},\n      registerChangeHandler: (/* handler: EventListener */) => {},\n      deregisterChangeHandler: (/* handler: EventListener */) => {},\n      getNativeControl: () => /* !MDCSelectionControlState */ {},\n      forceLayout: () => {},\n      isAttachedToDOM: () => /* boolean */ {},\n    });\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCCheckboxFoundation.defaultAdapter, adapter));\n\n    /** @private {string} */\n    this.currentCheckState_ = strings.TRANSITION_STATE_INIT;\n\n    /** @private {string} */\n    this.currentAnimationClass_ = '';\n\n    /** @private {number} */\n    this.animEndLatchTimer_ = 0;\n\n    this.animEndHandler_ = /** @private {!EventListener} */ (\n      () => this.handleAnimationEnd());\n\n    this.changeHandler_ = /** @private {!EventListener} */ (\n      () => this.handleChange());\n  }\n\n  init() {\n    this.currentCheckState_ = this.determineCheckState_(this.getNativeControl_());\n    this.adapter_.addClass(cssClasses.UPGRADED);\n    this.adapter_.registerChangeHandler(this.changeHandler_);\n    this.installPropertyChangeHooks_();\n  }\n\n  destroy() {\n    this.adapter_.deregisterChangeHandler(this.changeHandler_);\n    this.uninstallPropertyChangeHooks_();\n  }\n\n  /** @return {boolean} */\n  isChecked() {\n    return this.getNativeControl_().checked;\n  }\n\n  /** @param {boolean} checked */\n  setChecked(checked) {\n    this.getNativeControl_().checked = checked;\n  }\n\n  /** @return {boolean} */\n  isIndeterminate() {\n    return this.getNativeControl_().indeterminate;\n  }\n\n  /** @param {boolean} indeterminate */\n  setIndeterminate(indeterminate) {\n    this.getNativeControl_().indeterminate = indeterminate;\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.getNativeControl_().disabled;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.getNativeControl_().disabled = disabled;\n    if (disabled) {\n      this.adapter_.addClass(cssClasses.DISABLED);\n    } else {\n      this.adapter_.removeClass(cssClasses.DISABLED);\n    }\n  }\n\n  /** @return {?string} */\n  getValue() {\n    return this.getNativeControl_().value;\n  }\n\n  /** @param {?string} value */\n  setValue(value) {\n    this.getNativeControl_().value = value;\n  }\n\n  /**\n   * Handles the animationend event for the checkbox\n   */\n  handleAnimationEnd() {\n    clearTimeout(this.animEndLatchTimer_);\n    this.animEndLatchTimer_ = setTimeout(() => {\n      this.adapter_.removeClass(this.currentAnimationClass_);\n      this.adapter_.deregisterAnimationEndHandler(this.animEndHandler_);\n    }, numbers.ANIM_END_LATCH_MS);\n  }\n\n  /**\n   * Handles the change event for the checkbox\n   */\n  handleChange() {\n    this.transitionCheckState_();\n  }\n\n  /** @private */\n  installPropertyChangeHooks_() {\n    const nativeCb = this.getNativeControl_();\n    const cbProto = Object.getPrototypeOf(nativeCb);\n\n    CB_PROTO_PROPS.forEach((controlState) => {\n      const desc = Object.getOwnPropertyDescriptor(cbProto, controlState);\n      // We have to check for this descriptor, since some browsers (Safari) don't support its return.\n      // See: https://bugs.webkit.org/show_bug.cgi?id=49739\n      if (validDescriptor(desc)) {\n        const nativeCbDesc = /** @type {!ObjectPropertyDescriptor} */ ({\n          get: desc.get,\n          set: (state) => {\n            desc.set.call(nativeCb, state);\n            this.transitionCheckState_();\n          },\n          configurable: desc.configurable,\n          enumerable: desc.enumerable,\n        });\n        Object.defineProperty(nativeCb, controlState, nativeCbDesc);\n      }\n    });\n  }\n\n  /** @private */\n  uninstallPropertyChangeHooks_() {\n    const nativeCb = this.getNativeControl_();\n    const cbProto = Object.getPrototypeOf(nativeCb);\n\n    CB_PROTO_PROPS.forEach((controlState) => {\n      const desc = /** @type {!ObjectPropertyDescriptor} */ (\n        Object.getOwnPropertyDescriptor(cbProto, controlState));\n      if (validDescriptor(desc)) {\n        Object.defineProperty(nativeCb, controlState, desc);\n      }\n    });\n  }\n\n  /** @private */\n  transitionCheckState_() {\n    const nativeCb = this.adapter_.getNativeControl();\n    if (!nativeCb) {\n      return;\n    }\n    const oldState = this.currentCheckState_;\n    const newState = this.determineCheckState_(nativeCb);\n    if (oldState === newState) {\n      return;\n    }\n\n    // Check to ensure that there isn't a previously existing animation class, in case for example\n    // the user interacted with the checkbox before the animation was finished.\n    if (this.currentAnimationClass_.length > 0) {\n      clearTimeout(this.animEndLatchTimer_);\n      this.adapter_.forceLayout();\n      this.adapter_.removeClass(this.currentAnimationClass_);\n    }\n\n    this.currentAnimationClass_ = this.getTransitionAnimationClass_(oldState, newState);\n    this.currentCheckState_ = newState;\n\n    // Check for parentNode so that animations are only run when the element is attached\n    // to the DOM.\n    if (this.adapter_.isAttachedToDOM() && this.currentAnimationClass_.length > 0) {\n      this.adapter_.addClass(this.currentAnimationClass_);\n      this.adapter_.registerAnimationEndHandler(this.animEndHandler_);\n    }\n  }\n\n  /**\n   * @param {!MDCSelectionControlState} nativeCb\n   * @return {string}\n   * @private\n   */\n  determineCheckState_(nativeCb) {\n    const {\n      TRANSITION_STATE_INDETERMINATE,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    if (nativeCb.indeterminate) {\n      return TRANSITION_STATE_INDETERMINATE;\n    }\n    return nativeCb.checked ? TRANSITION_STATE_CHECKED : TRANSITION_STATE_UNCHECKED;\n  }\n\n  /**\n   * @param {string} oldState\n   * @param {string} newState\n   * @return {string}\n   */\n  getTransitionAnimationClass_(oldState, newState) {\n    const {\n      TRANSITION_STATE_INIT,\n      TRANSITION_STATE_CHECKED,\n      TRANSITION_STATE_UNCHECKED,\n    } = strings;\n\n    const {\n      ANIM_UNCHECKED_CHECKED,\n      ANIM_UNCHECKED_INDETERMINATE,\n      ANIM_CHECKED_UNCHECKED,\n      ANIM_CHECKED_INDETERMINATE,\n      ANIM_INDETERMINATE_CHECKED,\n      ANIM_INDETERMINATE_UNCHECKED,\n    } = MDCCheckboxFoundation.cssClasses;\n\n    switch (oldState) {\n    case TRANSITION_STATE_INIT:\n      if (newState === TRANSITION_STATE_UNCHECKED) {\n        return '';\n      }\n    // fallthrough\n    case TRANSITION_STATE_UNCHECKED:\n      return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;\n    case TRANSITION_STATE_CHECKED:\n      return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;\n    // TRANSITION_STATE_INDETERMINATE\n    default:\n      return newState === TRANSITION_STATE_CHECKED ?\n        ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;\n    }\n  }\n\n  /**\n   * @return {!MDCSelectionControlState}\n   * @private\n   */\n  getNativeControl_() {\n    return this.adapter_.getNativeControl() || {\n      checked: false,\n      indeterminate: false,\n      disabled: false,\n      value: null,\n    };\n  }\n}\n\n/**\n * @param {ObjectPropertyDescriptor|undefined} inputPropDesc\n * @return {boolean}\n */\nfunction validDescriptor(inputPropDesc) {\n  return !!inputPropDesc && typeof inputPropDesc.set === 'function';\n}\n\nexport default MDCCheckboxFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Form Field. Provides an interface for managing\n * - event handlers\n * - ripple activation\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCFormFieldAdapter {\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  activateInputRipple() {}\n\n  deactivateInputRipple() {}\n}\n\nexport default MDCFormFieldAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-form-field',\n};\n\n/** @enum {string} */\nconst strings = {\n  LABEL_SELECTOR: '.mdc-form-field > label',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCFormFieldAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCFormFieldAdapter>}\n */\nclass MDCFormFieldFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return {!MDCFormFieldAdapter} */\n  static get defaultAdapter() {\n    return {\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      activateInputRipple: () => {},\n      deactivateInputRipple: () => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCFormFieldFoundation.defaultAdapter, adapter));\n\n    /** @private {!EventListener} */\n    this.clickHandler_ = /** @type {!EventListener} */ (\n      () => this.handleClick_());\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n  }\n\n  /** @private */\n  handleClick_() {\n    this.adapter_.activateInputRipple();\n    requestAnimationFrame(() => this.adapter_.deactivateInputRipple());\n  }\n}\n\nexport default MDCFormFieldFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   noPrefix: string,\n *   webkitPrefix: string,\n *   styleProperty: string\n * }}\n */\nlet VendorPropertyMapType;\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst eventTypeMap = {\n  'animationstart': {\n    noPrefix: 'animationstart',\n    webkitPrefix: 'webkitAnimationStart',\n    styleProperty: 'animation',\n  },\n  'animationend': {\n    noPrefix: 'animationend',\n    webkitPrefix: 'webkitAnimationEnd',\n    styleProperty: 'animation',\n  },\n  'animationiteration': {\n    noPrefix: 'animationiteration',\n    webkitPrefix: 'webkitAnimationIteration',\n    styleProperty: 'animation',\n  },\n  'transitionend': {\n    noPrefix: 'transitionend',\n    webkitPrefix: 'webkitTransitionEnd',\n    styleProperty: 'transition',\n  },\n};\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nconst cssPropertyMap = {\n  'animation': {\n    noPrefix: 'animation',\n    webkitPrefix: '-webkit-animation',\n  },\n  'transform': {\n    noPrefix: 'transform',\n    webkitPrefix: '-webkit-transform',\n  },\n  'transition': {\n    noPrefix: 'transition',\n    webkitPrefix: '-webkit-transition',\n  },\n};\n\n/**\n * @param {!Object} windowObj\n * @return {boolean}\n */\nfunction hasProperShape(windowObj) {\n  return (windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function');\n}\n\n/**\n * @param {string} eventType\n * @return {boolean}\n */\nfunction eventFoundInMaps(eventType) {\n  return (eventType in eventTypeMap || eventType in cssPropertyMap);\n}\n\n/**\n * @param {string} eventType\n * @param {!Object<string, !VendorPropertyMapType>} map\n * @param {!Element} el\n * @return {string}\n */\nfunction getJavaScriptEventName(eventType, map, el) {\n  return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n}\n\n/**\n * Helper function to determine browser prefix for CSS3 animation events\n * and property names.\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getAnimationName(windowObj, eventType) {\n  if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {\n    return eventType;\n  }\n\n  const map = /** @type {!Object<string, !VendorPropertyMapType>} */ (\n    eventType in eventTypeMap ? eventTypeMap : cssPropertyMap\n  );\n  const el = windowObj['document']['createElement']('div');\n  let eventName = '';\n\n  if (map === eventTypeMap) {\n    eventName = getJavaScriptEventName(eventType, map, el);\n  } else {\n    eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n  }\n\n  return eventName;\n}\n\n// Public functions to access getAnimationName() for JavaScript events or CSS\n// property names.\n\nconst transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectEventName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectPropertyName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\nexport {transformStyleProperties, getCorrectEventName, getCorrectPropertyName};\n","<template>\n  <div :class=formFieldClasses class=\"mdc-checkbox-wrapper\">\n    <div ref=\"root\" class=\"mdc-checkbox\"\n    :class=\"classes\" :style=\"styles\">\n      <input ref=\"control\" :id=\"_uid\" type=\"checkbox\" :name=\"name\"\n        class=\"mdc-checkbox__native-control\" :value=\"value\"\n        @change=\"onChange\"/>\n      <div class=\"mdc-checkbox__background\">\n        <svg class=\"mdc-checkbox__checkmark\"\n            viewBox=\"0 0 24 24\">\n          <path class=\"checkbox__checkmark-path\"\n                fill=\"none\"\n                stroke=\"white\"\n                d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"/>\n        </svg>\n        <div class=\"mdc-checkbox__mixedmark\"></div>\n      </div>\n    </div>\n    <label ref=\"label\"  :for=\"_uid\"\n    ><slot>{{label}}</slot></label>\n  </div>\n</template>\n\n<script>\n\n/* global HTMLElement */\nimport MDCCheckboxFoundation from '@material/checkbox/foundation'\nimport MDCFormFieldFoundation from '@material/form-field/foundation'\nimport {getCorrectEventName} from '@material/animation'\nimport {DispatchFocusMixin} from '../base'\nimport {RippleBase} from '../ripple'\n\nexport default {\n  name: 'mdc-checkbox',\n  mixins: [DispatchFocusMixin],\n  model: {\n    prop: 'checked',\n    event: 'change'\n  },\n  props: {\n    'checked': Boolean,\n    'indeterminate': Boolean,\n    'disabled': Boolean,\n    'label': String,\n    'align-end': Boolean,\n    'value': { type: String, default () { return 'on' } },\n    'name': String\n  },\n  data () {\n    return {\n      styles: {},\n      classes: {}\n    }\n  },\n  computed: {\n    hasLabel () {\n      return this.label || this.$slots.default\n    },\n    formFieldClasses () {\n      return {\n        'mdc-form-field': this.hasLabel,\n        'mdc-form-field--align-end': this.hasLabel && this.alignEnd\n      }\n    }\n  },\n  watch: {\n    'checked' (value) {\n      this.foundation.setChecked(value)\n    },\n    'disabled' (value) {\n      this.foundation.setDisabled(value)\n    },\n    'indeterminate' (value) {\n      this.foundation.setIndeterminate(value)\n    }\n  },\n  mounted () {\n    this.foundation = new MDCCheckboxFoundation({\n      addClass: (className) => this.$set(this.classes, className, true),\n      removeClass: (className) => this.$delete(this.classes, className),\n      registerAnimationEndHandler: (handler) =>\n        this.$refs.root.addEventListener(\n          getCorrectEventName(window, 'animationend'), handler),\n      deregisterAnimationEndHandler: (handler) =>\n        this.$refs.root.removeEventListener(\n          getCorrectEventName(window, 'animationend'), handler),\n      registerChangeHandler: (handler) => this.$refs.control.addEventListener('change', handler),\n      deregisterChangeHandler: (handler) => this.$refs.control.removeEventListener('change', handler),\n      getNativeControl: () => this.$refs.control,\n      forceLayout: () => this.$refs.root.offsetWidth,\n      isAttachedToDOM: () => Boolean(this.$el.parentNode)\n    })\n\n    this.ripple = new RippleBase(this, {\n      isUnbounded: () => true,\n      isSurfaceActive: () => RippleBase.isSurfaceActive(this.$refs.control),\n      registerInteractionHandler: (evt, handler) => {\t\t\n        this.$refs.control.addEventListener(evt, handler)\t\t\n      },\t\t\n      deregisterInteractionHandler: (evt, handler) => {\t\t\n        this.$refs.control.addEventListener(evt, handler)\t\t\n      },\n      computeBoundingRect: () => {\n        return this.$refs.root.getBoundingClientRect()\n      }\n    })\n\n    this.formField = new MDCFormFieldFoundation({\n      registerInteractionHandler: (type, handler) => {\n        this.$refs.label.addEventListener(type, handler)\n      },\n      deregisterInteractionHandler: (type, handler) => {\n        this.$refs.label.removeEventListener(type, handler)\n      },\n      activateInputRipple: () => {\n        this.ripple && this.ripple.activate()\n      },\n      deactivateInputRipple: () => {\n        this.ripple && this.ripple.deactivate()\n      },\n    });\n\n    this.foundation.init()\n    this.ripple.init()\n    this.formField.init()\n    this.foundation.setChecked(this.checked)\n    this.foundation.setDisabled(this.disabled)\n    this.foundation.setIndeterminate(this.indeterminate)\n\n  },\n  beforeDestroy () {\n    this.formField.destroy()\n    this.ripple.destroy()\n    this.foundation.destroy()\n  },\n  methods: {\n    onChange () {\n      this.$emit('update:indeterminate', this.foundation.isIndeterminate())\n      this.$emit('change', this.foundation.isChecked())\n    }\n  }\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcCheckbox from './mdc-checkbox.vue'\n\nexport {\n  mdcCheckbox\n}\n\nexport default BasePlugin({\n  mdcCheckbox\n})\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  INTERACTION_EVENT: 'MDCChip:interaction',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Chip.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Chip into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCChipAdapter {\n  /**\n   * Registers an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the root element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * Emits a custom \"MDCChip:interaction\" event denoting the chip has been\n   * interacted with (typically on click or keydown).\n   */\n  notifyInteraction() {}\n}\n\nexport default MDCChipAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCChipAdapter from './adapter';\nimport {strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCChipAdapter>}\n * @final\n */\nclass MDCChipFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCChipAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCChipAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCChipAdapter} */ ({\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      notifyInteraction: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCChipAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCChipFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction_(evt);\n  }\n\n  init() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  /**\n   * Handles an interaction event on the root element.\n   * @param {!Event} evt\n   */\n  handleInteraction_(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyInteraction();\n    }\n  }\n}\n\nexport default MDCChipFoundation;\n","<template>\n<div class=\"mdc-chip\" :class=\"classes\" :style=\"styles\" tabindex=\"0\" >\n  <i class=\"mdc-chip__icon mdc-chip__icon--leading\" \n    :class=\"leadingClasses\" v-if=\"haveleadingIcon\"\n  >{{leadingIcon}}</i>\n  <div classes=\"mdc-chip__text\">\n    <slot></slot>\n  </div>\n  <i class=\"mdc-chip__icon mdc-chip__icon--trailing\" tabindex=\"0\" role=\"button\" \n    :class=\"trailingClasses\" v-if=\"havetrailingIcon\"\n  >{{trailingIcon}}</i>\n</div>\n</template>\n\n<script>\nimport MDCChipFoundation from \"@material/chips/chip/foundation\";\nimport { CustomLinkMixin, DispatchEventMixin } from \"../base\";\nimport { RippleBase } from \"../ripple\";\n\nexport default {\n  name: \"mdc-chip\",\n  mixins: [CustomLinkMixin, DispatchEventMixin],\n  props: {\n    leadingIcon: [String],\n    trailingIcon: [String],\n    leadingIconClasses: [Object],\n    trailingIconClasses: [Object]\n  },\n  data() {\n    return {\n      classes: {},\n      styles: {}\n    };\n  },\n  methods: {},\n  mounted() {\n    this.foundation = new MDCChipFoundation({\n      registerInteractionHandler: (type, handler) =>\n        this.$el.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) =>\n        this.$el.removeEventListener(type, handler),\n      notifyInteraction: () => {\n        this.dispatchEvent({ type: 'click' })\n      }\n    });\n\n    this.foundation.init();\n\n    this.ripple = new RippleBase(this);\n    this.ripple.init();\n  },\n  computed: {\n    haveleadingIcon() {\n      return !!this.leadingIcon || this.leadingIconClasses;\n    },\n    havetrailingIcon() {\n      return !!this.trailingIcon || this.trailingIconClasses;\n    },\n    leadingClasses() {\n      return Object.assign(\n        {},\n        {\n          \"material-icons\": !!this.leadingIcon\n        },\n        this.leadingIconClasses\n      );\n    },\n    trailingClasses() {\n      return Object.assign(\n        {},\n        {\n          \"material-icons\": !!this.trailingIcon\n        },\n        this.trailingIconClasses\n      );\n    }\n  },\n  beforeDestroy() {\n    this.ripple.destroy();\n    this.foundation.destroy();\n  }\n};\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  CHIP_SELECTOR: '.mdc-chip',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Chip Set.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Chip Set into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCChipSetAdapter {\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   */\n  hasClass(className) {}\n}\n\nexport default MDCChipSetAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCChipSetAdapter from './adapter';\nimport {strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCChipSetAdapter>}\n * @final\n */\nclass MDCChipSetFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCChipSetAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCChipSetAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCChipSetAdapter} */ ({\n      hasClass: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCChipSetAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCChipSetFoundation.defaultAdapter, adapter));\n  }\n}\n\nexport default MDCChipSetFoundation;\n","import {BasePlugin} from '../base'\nimport mdcChip from './mdc-chip.vue'\nimport mdcChipSet from './mdc-chip-set.vue'\n\nexport { \n  mdcChip, \n  mdcChipSet \n}\n\nexport default BasePlugin({\n  mdcChip, \n  mdcChipSet \n})\n","<template>\n  <div ref=\"root\" class=\"mdc-chip-set\" :class=\"classes\">\n    <slot></slot>\n  </div>  \n</template>\n\n<script>\nimport MDCChipSetFoundation from '@material/chips/chip-set/foundation';\n\nexport default {\n  name: 'mdc-chip-set',\n  props: {},\n  data() {\n    return {\n      classes: {},\n    };\n  },\n  methods: {},\n  mounted() {\n    this.foundation = new MDCChipSetFoundation({\n      hasClass: className => this.$refs.root.classList.contains(className),\n    });\n\n    this.foundation.init();\n  },\n  beforeDestroy() {\n    this.foundation.destroy();\n  },\n};\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  ROOT: 'mdc-dialog',\n  OPEN: 'mdc-dialog--open',\n  ANIMATING: 'mdc-dialog--animating',\n  BACKDROP: 'mdc-dialog__backdrop',\n  SCROLL_LOCK: 'mdc-dialog-scroll-lock',\n  ACCEPT_BTN: 'mdc-dialog__footer__button--accept',\n  CANCEL_BTN: 'mdc-dialog__footer__button--cancel',\n};\n\nexport const strings = {\n  OPEN_DIALOG_SELECTOR: '.mdc-dialog--open',\n  DIALOG_SURFACE_SELECTOR: '.mdc-dialog__surface',\n  ACCEPT_SELECTOR: '.mdc-dialog__footer__button--accept',\n  ACCEPT_EVENT: 'MDCDialog:accept',\n  CANCEL_EVENT: 'MDCDialog:cancel',\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCDialogFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      addBodyClass: (/* className: string */) => {},\n      removeBodyClass: (/* className: string */) => {},\n      eventTargetHasClass: (/* target: EventTarget, className: string */) => /* boolean */ false,\n      registerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerSurfaceInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterSurfaceInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      deregisterDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      registerTransitionEndHandler: (/* handler: EventListener */) => {},\n      deregisterTransitionEndHandler: (/* handler: EventListener */) => {},\n      notifyAccept: () => {},\n      notifyCancel: () => {},\n      trapFocusOnSurface: () => {},\n      untrapFocusOnSurface: () => {},\n      isDialog: (/* el: Element */) => /* boolean */ false,\n      layoutFooterRipples: () => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCDialogFoundation.defaultAdapter, adapter));\n    this.isOpen_ = false;\n    this.componentClickHandler_ = (evt) => {\n      if (this.adapter_.eventTargetHasClass(evt.target, cssClasses.BACKDROP)) {\n        this.cancel(true);\n      }\n    };\n    this.dialogClickHandler_ = (evt) => this.handleDialogClick_(evt);\n    this.documentKeydownHandler_ = (evt) => {\n      if (evt.key && evt.key === 'Escape' || evt.keyCode === 27) {\n        this.cancel(true);\n      }\n    };\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd_(evt);\n  };\n\n  destroy() {\n    // Ensure that dialog is cleaned up when destroyed\n    if (this.isOpen_) {\n      this.adapter_.deregisterSurfaceInteractionHandler('click', this.dialogClickHandler_);\n      this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n      this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);\n      this.adapter_.untrapFocusOnSurface();\n      this.adapter_.deregisterTransitionEndHandler(this.transitionEndHandler_);\n      this.adapter_.removeClass(MDCDialogFoundation.cssClasses.ANIMATING);\n      this.adapter_.removeClass(MDCDialogFoundation.cssClasses.OPEN);\n      this.enableScroll_();\n    }\n  }\n\n  open() {\n    this.isOpen_ = true;\n    this.disableScroll_();\n    this.adapter_.registerDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.registerSurfaceInteractionHandler('click', this.dialogClickHandler_);\n    this.adapter_.registerInteractionHandler('click', this.componentClickHandler_);\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.addClass(MDCDialogFoundation.cssClasses.ANIMATING);\n    this.adapter_.addClass(MDCDialogFoundation.cssClasses.OPEN);\n  }\n\n  close() {\n    this.isOpen_ = false;\n    this.adapter_.deregisterSurfaceInteractionHandler('click', this.dialogClickHandler_);\n    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);\n    this.adapter_.untrapFocusOnSurface();\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.addClass(MDCDialogFoundation.cssClasses.ANIMATING);\n    this.adapter_.removeClass(MDCDialogFoundation.cssClasses.OPEN);\n  }\n\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  accept(shouldNotify) {\n    if (shouldNotify) {\n      this.adapter_.notifyAccept();\n    }\n\n    this.close();\n  }\n\n  cancel(shouldNotify) {\n    if (shouldNotify) {\n      this.adapter_.notifyCancel();\n    }\n\n    this.close();\n  }\n\n  handleDialogClick_(evt) {\n    const {target} = evt;\n    if (this.adapter_.eventTargetHasClass(target, cssClasses.ACCEPT_BTN)) {\n      this.accept(true);\n    } else if (this.adapter_.eventTargetHasClass(target, cssClasses.CANCEL_BTN)) {\n      this.cancel(true);\n    }\n  }\n\n  handleTransitionEnd_(evt) {\n    if (this.adapter_.isDialog(evt.target)) {\n      this.adapter_.deregisterTransitionEndHandler(this.transitionEndHandler_);\n      this.adapter_.removeClass(MDCDialogFoundation.cssClasses.ANIMATING);\n      if (this.isOpen_) {\n        this.adapter_.trapFocusOnSurface();\n        this.adapter_.layoutFooterRipples();\n      } else {\n        this.enableScroll_();\n      };\n    };\n  };\n\n  disableScroll_() {\n    this.adapter_.addBodyClass(cssClasses.SCROLL_LOCK);\n  }\n\n  enableScroll_() {\n    this.adapter_.removeBodyClass(cssClasses.SCROLL_LOCK);\n  }\n}\n","module.exports = function(el, options) {\n  options = options || {};\n\n  var elementDocument = el.ownerDocument || el;\n  var basicTabbables = [];\n  var orderedTabbables = [];\n\n  // A node is \"available\" if\n  // - it's computed style\n  var isUnavailable = createIsUnavailable(elementDocument);\n\n  var candidateSelectors = [\n    'input',\n    'select',\n    'a[href]',\n    'textarea',\n    'button',\n    '[tabindex]',\n  ];\n\n  var candidates = el.querySelectorAll(candidateSelectors.join(','));\n\n  if (options.includeContainer) {\n    var matches = Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\n    if (\n      candidateSelectors.some(function(candidateSelector) {\n        return matches.call(el, candidateSelector);\n      })\n    ) {\n      candidates = Array.prototype.slice.apply(candidates);\n      candidates.unshift(el);\n    }\n  }\n\n  var candidate, candidateIndex;\n  for (var i = 0, l = candidates.length; i < l; i++) {\n    candidate = candidates[i];\n    candidateIndex = parseInt(candidate.getAttribute('tabindex'), 10) || candidate.tabIndex;\n\n    if (\n      candidateIndex < 0\n      || (candidate.tagName === 'INPUT' && candidate.type === 'hidden')\n      || candidate.disabled\n      || isUnavailable(candidate, elementDocument)\n    ) {\n      continue;\n    }\n\n    if (candidateIndex === 0) {\n      basicTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        index: i,\n        tabIndex: candidateIndex,\n        node: candidate,\n      });\n    }\n  }\n\n  var tabbableNodes = orderedTabbables\n    .sort(function(a, b) {\n      return a.tabIndex === b.tabIndex ? a.index - b.index : a.tabIndex - b.tabIndex;\n    })\n    .map(function(a) {\n      return a.node\n    });\n\n  Array.prototype.push.apply(tabbableNodes, basicTabbables);\n\n  return tabbableNodes;\n}\n\nfunction createIsUnavailable(elementDocument) {\n  // Node cache must be refreshed on every check, in case\n  // the content of the element has changed\n  var isOffCache = [];\n\n  // \"off\" means `display: none;`, as opposed to \"hidden\",\n  // which means `visibility: hidden;`. getComputedStyle\n  // accurately reflects visiblity in context but not\n  // \"off\" state, so we need to recursively check parents.\n\n  function isOff(node, nodeComputedStyle) {\n    if (node === elementDocument.documentElement) return false;\n\n    // Find the cached node (Array.prototype.find not available in IE9)\n    for (var i = 0, length = isOffCache.length; i < length; i++) {\n      if (isOffCache[i][0] === node) return isOffCache[i][1];\n    }\n\n    nodeComputedStyle = nodeComputedStyle || elementDocument.defaultView.getComputedStyle(node);\n\n    var result = false;\n\n    if (nodeComputedStyle.display === 'none') {\n      result = true;\n    } else if (node.parentNode) {\n      result = isOff(node.parentNode);\n    }\n\n    isOffCache.push([node, result]);\n\n    return result;\n  }\n\n  return function isUnavailable(node) {\n    if (node === elementDocument.documentElement) return false;\n\n    var computedStyle = elementDocument.defaultView.getComputedStyle(node);\n\n    if (isOff(node, computedStyle)) return true;\n\n    return computedStyle.visibility === 'hidden';\n  }\n}\n","var tabbable = require('tabbable');\n\nvar listeningFocusTrap = null;\n\nfunction focusTrap(element, userOptions) {\n  var tabbableNodes = [];\n  var firstTabbableNode = null;\n  var lastTabbableNode = null;\n  var nodeFocusedBeforeActivation = null;\n  var active = false;\n  var paused = false;\n  var tabEvent = null;\n\n  var container = (typeof element === 'string')\n    ? document.querySelector(element)\n    : element;\n\n  var config = userOptions || {};\n  config.returnFocusOnDeactivate = (userOptions && userOptions.returnFocusOnDeactivate !== undefined)\n    ? userOptions.returnFocusOnDeactivate\n    : true;\n  config.escapeDeactivates = (userOptions && userOptions.escapeDeactivates !== undefined)\n    ? userOptions.escapeDeactivates\n    : true;\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause,\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (active) return;\n\n    var defaultedActivateOptions = {\n      onActivate: (activateOptions && activateOptions.onActivate !== undefined)\n        ? activateOptions.onActivate\n        : config.onActivate,\n    };\n\n    active = true;\n    paused = false;\n    nodeFocusedBeforeActivation = document.activeElement;\n\n    if (defaultedActivateOptions.onActivate) {\n      defaultedActivateOptions.onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!active) return;\n\n    var defaultedDeactivateOptions = {\n      returnFocus: (deactivateOptions && deactivateOptions.returnFocus !== undefined)\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate,\n      onDeactivate: (deactivateOptions && deactivateOptions.onDeactivate !== undefined)\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate,\n    };\n\n    removeListeners();\n\n    if (defaultedDeactivateOptions.onDeactivate) {\n      defaultedDeactivateOptions.onDeactivate();\n    }\n\n    if (defaultedDeactivateOptions.returnFocus) {\n      setTimeout(function () {\n        tryFocus(nodeFocusedBeforeActivation);\n      }, 0);\n    }\n\n    active = false;\n    paused = false;\n    return this;\n  }\n\n  function pause() {\n    if (paused || !active) return;\n    paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!paused || !active) return;\n    paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!active) return;\n\n    // There can be only one listening focus trap at a time\n    if (listeningFocusTrap) {\n      listeningFocusTrap.pause();\n    }\n    listeningFocusTrap = trap;\n\n    updateTabbableNodes();\n    tryFocus(firstFocusNode());\n    document.addEventListener('focus', checkFocus, true);\n    document.addEventListener('click', checkClick, true);\n    document.addEventListener('mousedown', checkPointerDown, true);\n    document.addEventListener('touchstart', checkPointerDown, true);\n    document.addEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!active || listeningFocusTrap !== trap) return;\n\n    document.removeEventListener('focus', checkFocus, true);\n    document.removeEventListener('click', checkClick, true);\n    document.removeEventListener('mousedown', checkPointerDown, true);\n    document.removeEventListener('touchstart', checkPointerDown, true);\n    document.removeEventListener('keydown', checkKey, true);\n\n    listeningFocusTrap = null;\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = document.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function firstFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(document.activeElement)) {\n      node = document.activeElement;\n    } else {\n      node = tabbableNodes[0] || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error('You can\\'t have a focus-trap without at least one focusable element');\n    }\n\n    return node;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event\n  function checkPointerDown(e) {\n    if (config.clickOutsideDeactivates && !container.contains(e.target)) {\n      deactivate({ returnFocus: false });\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function checkFocus(e) {\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n    // Checking for a blur method here resolves a Firefox issue (#15)\n    if (typeof e.target.blur === 'function') e.target.blur();\n\n    if (tabEvent) {\n      readjustFocus(tabEvent);\n    }\n  }\n\n  function checkKey(e) {\n    if (e.key === 'Tab' || e.keyCode === 9) {\n      handleTab(e);\n    }\n\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      deactivate();\n    }\n  }\n\n  function handleTab(e) {\n    updateTabbableNodes();\n\n    if (e.target.hasAttribute('tabindex') && Number(e.target.getAttribute('tabindex')) < 0) {\n      return tabEvent = e;\n    }\n\n    e.preventDefault();\n    var currentFocusIndex = tabbableNodes.indexOf(e.target);\n\n    if (e.shiftKey) {\n      if (e.target === firstTabbableNode || tabbableNodes.indexOf(e.target) === -1) {\n        return tryFocus(lastTabbableNode);\n      }\n      return tryFocus(tabbableNodes[currentFocusIndex - 1]);\n    }\n\n    if (e.target === lastTabbableNode) return tryFocus(firstTabbableNode);\n\n    tryFocus(tabbableNodes[currentFocusIndex + 1]);\n  }\n\n  function updateTabbableNodes() {\n    tabbableNodes = tabbable(container);\n    firstTabbableNode = tabbableNodes[0];\n    lastTabbableNode = tabbableNodes[tabbableNodes.length - 1];\n  }\n\n  function readjustFocus(e) {\n    if (e.shiftKey) return tryFocus(lastTabbableNode);\n\n    tryFocus(firstTabbableNode);\n  }\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction tryFocus(node) {\n  if (!node || !node.focus) return;\n  if (node === document.activeElement)  return;\n\n  node.focus();\n  if (node.tagName.toLowerCase() === 'input') {\n    node.select();\n  }\n}\n\nmodule.exports = focusTrap;\n","import {BasePlugin} from '../base'\nimport mdcDialog from './mdc-dialog.vue'\n\nexport {\n  mdcDialog\n}\n\nexport default BasePlugin({\n  mdcDialog\n})\n","<template>\n  <aside class=\"mdc-dialog\" ref=\"root\" :class=\"classes\" :style=\"styles\"\n    role=\"alertdialog\"\n    :aria-labelledby=\"'label' + _uid\"\n    :aria-describedby=\"'desc' + _uid\"\n  >\n    <div  ref=\"surface\" class=\"mdc-dialog__surface\" :class=\"surfaceClasses\">\n      <header class=\"mdc-dialog__header\">\n        <h2 :id=\"'label' + _uid\" class=\"mdc-dialog__header__title\">\n          {{ title }}\n        </h2>\n      </header>\n      <section :id=\"'desc' + _uid\"\n        class=\"mdc-dialog__body\" :class=\"bodyClasses\">\n        <slot />\n      </section>\n      <footer class=\"mdc-dialog__footer\">\n        <mdcButton ref=\"cancel\" v-if=\"cancel\"\n          class=\"mdc-dialog__footer__button\"\n          :class=\"{'mdc-dialog__action':accent}\"\n          @click=\"onCancel\"\n          >{{ cancel }}</mdcButton>\n        <mdcButton  ref=\"accept\"\n          class=\"mdc-dialog__footer__button\"\n          :class=\"{'mdc-dialog__action':accent}\"\n          :disabled=\"acceptDisabled\"\n          @click=\"onAccept\"\n        >{{ accept }}</mdcButton>\n      </footer>\n    </div>\n    <div class=\"mdc-dialog__backdrop\"></div>\n  </aside>\n</template>\n\n<script>\nimport MDCDialogFoundation from '@material/dialog/foundation'\nimport { createFocusTrapInstance } from '@material/dialog/util'\nimport {mdcButton} from '../button'\n\nexport default {\n  name: 'mdc-dialog',\n  props: {\n    title: { type: String, required: true },\n    accept: { type: String, default: 'Ok' },\n    acceptDisabled: Boolean,\n    cancel: { type: String, default: 'Cancel' },\n    accent: Boolean,\n    scrollable: Boolean\n  },\n  components: {\n    mdcButton : mdcButton\n  },\n  data () {\n    return {\n      classes: {\n        'mdc-theme--dark': this.dark\n      },\n      styles: {},\n      surfaceClasses: {},\n      bodyClasses: {\n        'mdc-dialog__body--scrollable': this.scrollable\n      }\n    }\n  },\n  mounted () {\n    this.focusTrap = createFocusTrapInstance(\n      this.$refs.surface, this.$refs.accept)\n\n    this.foundation = new MDCDialogFoundation({\n      addClass: (className) => this.$set(this.classes, className, true),\n      removeClass: (className) => this.$delete(this.classes, className),\n      addBodyClass: (className) => document.body.classList.add(className),\n      removeBodyClass: (className) => document.body.classList.remove(className),\n      eventTargetHasClass: (target, className) =>\n        target.classList.contains(className),\n      registerInteractionHandler: (evt, handler) =>\n        this.$refs.root.addEventListener(evt, handler),\n      deregisterInteractionHandler: (evt, handler) =>\n        this.$refs.root.removeEventListener(evt, handler),\n      registerSurfaceInteractionHandler: (/*evt, handler*/) => {\n        // VMA_HACK: handle button clicks ourselves\n        // this.$refs.surface.addEventListener(evt, handler)\n      },\n      deregisterSurfaceInteractionHandler: (/*evt, handler*/) => {\n        // VMA_HACK: handle button clicks ourselves\n        // this.$refs.surface.removeEventListener(evt, handler)\n      },\n      registerDocumentKeydownHandler: (handler) =>\n        document.addEventListener('keydown', handler),\n      deregisterDocumentKeydownHandler: (handler) =>\n        document.removeEventListener('keydown', handler),\n      registerTransitionEndHandler: (handler) =>\n        this.$refs.surface.addEventListener('transitionend', handler),\n      deregisterTransitionEndHandler: (handler) =>\n        this.$refs.surface.removeEventListener('transitionend', handler),\n      notifyAccept: () => this.$emit('accept'),\n      notifyCancel: () => this.$emit('cancel'),\n      trapFocusOnSurface: () => this.focusTrap.activate(),\n      untrapFocusOnSurface: () => this.focusTrap.deactivate(),\n      isDialog: (el) => (this.$refs.surface === el),\n      layoutFooterRipples: () => {\n        this.$refs.accept.ripple.layout()\n        this.cancel && this.$refs.cancel.ripple.layout()\n      }\n    })\n\n    this.foundation.init()\n  },\n  beforeDestroy () {\n    this.foundation.destroy()\n  },\n  methods: {\n    onCancel() {\n      this.foundation.cancel(true);\n    },\n    onAccept() {\n      if (this.$listeners['validate']) {\n        this.$emit('validate', {\n          accept: (notify = true) => this.foundation.accept(notify)\n        })\n      }\n      else {\n        this.foundation.accept(true)\n      }\n    },\n    show () {\n      this.foundation.open()\n    },\n    close () {\n      this.foundation.close()\n    }\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport createFocusTrap from 'focus-trap';\n\nexport function createFocusTrapInstance(surfaceEl, acceptButtonEl, focusTrapFactory = createFocusTrap) {\n  return focusTrapFactory(surfaceEl, {\n    initialFocus: acceptButtonEl,\n    clickOutsideDeactivates: true,\n  });\n}\n","<template>\n  <nav class=\"mdc-permanent-drawer mdc-drawer--permanent mdc-typography\">\n    <nav class=\"mdc-drawer__content\">\n      <div class=\"mdc-drawer__toolbar-spacer\" \n        v-if=\"toolbarSpacer\"></div>\n      <slot />\n    </nav>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-permanent-drawer',\n  props: {\n    'toolbar-spacer': Boolean,\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const FOCUSABLE_ELEMENTS =\n  'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), ' +\n  'button:not([disabled]), iframe, object, embed, [tabindex], [contenteditable]';\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\n\nexport class MDCSlidableDrawerFoundation extends MDCFoundation {\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      hasClass: (/* className: string */) => {},\n      hasNecessaryDom: () => /* boolean */ false,\n      registerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerDrawerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      deregisterDrawerInteractionHandler: (/* evt: string, handler: EventListener */) => {},\n      registerTransitionEndHandler: (/* handler: EventListener */) => {},\n      deregisterTransitionEndHandler: (/* handler: EventListener */) => {},\n      registerDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      deregisterDocumentKeydownHandler: (/* handler: EventListener */) => {},\n      setTranslateX: (/* value: number | null */) => {},\n      getFocusableElements: () => /* NodeList */ {},\n      saveElementTabState: (/* el: Element */) => {},\n      restoreElementTabState: (/* el: Element */) => {},\n      makeElementUntabbable: (/* el: Element */) => {},\n      notifyOpen: () => {},\n      notifyClose: () => {},\n      isRtl: () => /* boolean */ false,\n      getDrawerWidth: () => /* number */ 0,\n    };\n  }\n\n  constructor(adapter, rootCssClass, animatingCssClass, openCssClass) {\n    super(Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, adapter));\n\n    this.rootCssClass_ = rootCssClass;\n    this.animatingCssClass_ = animatingCssClass;\n    this.openCssClass_ = openCssClass;\n\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd_(evt);\n\n    this.inert_ = false;\n\n    this.componentTouchStartHandler_ = (evt) => this.handleTouchStart_(evt);\n    this.componentTouchMoveHandler_ = (evt) => this.handleTouchMove_(evt);\n    this.componentTouchEndHandler_ = (evt) => this.handleTouchEnd_(evt);\n    this.documentKeydownHandler_ = (evt) => {\n      if (evt.key && evt.key === 'Escape' || evt.keyCode === 27) {\n        this.close();\n      }\n    };\n  }\n\n  init() {\n    const ROOT = this.rootCssClass_;\n    const OPEN = this.openCssClass_;\n\n    if (!this.adapter_.hasClass(ROOT)) {\n      throw new Error(`${ROOT} class required in root element.`);\n    }\n\n    if (!this.adapter_.hasNecessaryDom()) {\n      throw new Error(`Required DOM nodes missing in ${ROOT} component.`);\n    }\n\n    if (this.adapter_.hasClass(OPEN)) {\n      this.isOpen_ = true;\n    } else {\n      this.detabinate_();\n      this.isOpen_ = false;\n    }\n\n    this.adapter_.registerDrawerInteractionHandler('touchstart', this.componentTouchStartHandler_);\n    this.adapter_.registerInteractionHandler('touchmove', this.componentTouchMoveHandler_);\n    this.adapter_.registerInteractionHandler('touchend', this.componentTouchEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterDrawerInteractionHandler('touchstart', this.componentTouchStartHandler_);\n    this.adapter_.deregisterInteractionHandler('touchmove', this.componentTouchMoveHandler_);\n    this.adapter_.deregisterInteractionHandler('touchend', this.componentTouchEndHandler_);\n    // Deregister the document keydown handler just in case the component is destroyed while the menu is open.\n    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n  }\n\n  open() {\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.registerDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.addClass(this.animatingCssClass_);\n    this.adapter_.addClass(this.openCssClass_);\n    this.retabinate_();\n    // Debounce multiple calls\n    if (!this.isOpen_) {\n      this.adapter_.notifyOpen();\n    }\n    this.isOpen_ = true;\n  }\n\n  close() {\n    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);\n    this.adapter_.registerTransitionEndHandler(this.transitionEndHandler_);\n    this.adapter_.addClass(this.animatingCssClass_);\n    this.adapter_.removeClass(this.openCssClass_);\n    this.detabinate_();\n    // Debounce multiple calls\n    if (this.isOpen_) {\n      this.adapter_.notifyClose();\n    }\n    this.isOpen_ = false;\n  }\n\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /**\n   *  Render all children of the drawer inert when it's closed.\n   */\n  detabinate_() {\n    if (this.inert_) {\n      return;\n    }\n\n    const elements = this.adapter_.getFocusableElements();\n    if (elements) {\n      for (let i = 0; i < elements.length; i++) {\n        this.adapter_.saveElementTabState(elements[i]);\n        this.adapter_.makeElementUntabbable(elements[i]);\n      }\n    }\n\n    this.inert_ = true;\n  }\n\n  /**\n   *  Make all children of the drawer tabbable again when it's open.\n   */\n  retabinate_() {\n    if (!this.inert_) {\n      return;\n    }\n\n    const elements = this.adapter_.getFocusableElements();\n    if (elements) {\n      for (let i = 0; i < elements.length; i++) {\n        this.adapter_.restoreElementTabState(elements[i]);\n      }\n    }\n\n    this.inert_ = false;\n  }\n\n  handleTouchStart_(evt) {\n    if (!this.adapter_.hasClass(this.openCssClass_)) {\n      return;\n    }\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.direction_ = this.adapter_.isRtl() ? -1 : 1;\n    this.drawerWidth_ = this.adapter_.getDrawerWidth();\n    this.startX_ = evt.touches ? evt.touches[0].pageX : evt.pageX;\n    this.currentX_ = this.startX_;\n\n    this.updateRaf_ = requestAnimationFrame(this.updateDrawer_.bind(this));\n  }\n\n  handleTouchMove_(evt) {\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.currentX_ = evt.touches ? evt.touches[0].pageX : evt.pageX;\n  }\n\n  handleTouchEnd_(evt) {\n    if (evt.pointerType && evt.pointerType !== 'touch') {\n      return;\n    }\n\n    this.prepareForTouchEnd_();\n\n    // Did the user close the drawer by more than 50%?\n    if (Math.abs(this.newPosition_ / this.drawerWidth_) >= 0.5) {\n      this.close();\n    } else {\n      // Triggering an open here means we'll get a nice animation back to the fully open state.\n      this.open();\n    }\n  }\n\n  prepareForTouchEnd_() {\n    cancelAnimationFrame(this.updateRaf_);\n    this.adapter_.setTranslateX(null);\n  }\n\n  updateDrawer_() {\n    this.updateRaf_ = requestAnimationFrame(this.updateDrawer_.bind(this));\n    this.adapter_.setTranslateX(this.newPosition_);\n  }\n\n  get newPosition_() {\n    let newPos = null;\n\n    if (this.direction_ === 1) {\n      newPos = Math.min(0, this.currentX_ - this.startX_);\n    } else {\n      newPos = Math.max(0, this.currentX_ - this.startX_);\n    }\n\n    return newPos;\n  }\n\n  isRootTransitioningEventTarget_() {\n    // Classes extending MDCSlidableDrawerFoundation should implement this method to return true or false\n    // if the event target is the root event target currently transitioning.\n    return false;\n  }\n\n  handleTransitionEnd_(evt) {\n    if (this.isRootTransitioningEventTarget_(evt.target)) {\n      this.adapter_.removeClass(this.animatingCssClass_);\n      this.adapter_.deregisterTransitionEndHandler(this.transitionEndHandler_);\n    }\n  };\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {FOCUSABLE_ELEMENTS} from '../slidable/index';\n\nexport const cssClasses = {\n  ROOT: 'mdc-drawer--persistent',\n  OPEN: 'mdc-drawer--open',\n  ANIMATING: 'mdc-drawer--animating',\n};\n\nexport const strings = {\n  DRAWER_SELECTOR: '.mdc-drawer--persistent .mdc-drawer__drawer',\n  FOCUSABLE_ELEMENTS,\n  OPEN_EVENT: 'MDCPersistentDrawer:open',\n  CLOSE_EVENT: 'MDCPersistentDrawer:close',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCSlidableDrawerFoundation} from '../slidable/index';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCPersistentDrawerFoundation extends MDCSlidableDrawerFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, {\n      isDrawer: () => false,\n    });\n  }\n\n  constructor(adapter) {\n    super(\n      Object.assign(MDCPersistentDrawerFoundation.defaultAdapter, adapter),\n      MDCPersistentDrawerFoundation.cssClasses.ROOT,\n      MDCPersistentDrawerFoundation.cssClasses.ANIMATING,\n      MDCPersistentDrawerFoundation.cssClasses.OPEN);\n  }\n\n  isRootTransitioningEventTarget_(el) {\n    return this.adapter_.isDrawer(el);\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst TAB_DATA = 'data-mdc-tabindex';\nconst TAB_DATA_HANDLED = 'data-mdc-tabindex-handled';\n\nlet storedTransformPropertyName_;\nlet supportsPassive_;\n\n// Remap touch events to pointer events, if the browser doesn't support touch events.\nexport function remapEvent(eventName, globalObj = window) {\n  if (!('ontouchstart' in globalObj.document)) {\n    switch (eventName) {\n    case 'touchstart':\n      return 'pointerdown';\n    case 'touchmove':\n      return 'pointermove';\n    case 'touchend':\n      return 'pointerup';\n    default:\n      return eventName;\n    }\n  }\n\n  return eventName;\n}\n\n// Choose the correct transform property to use on the current browser.\nexport function getTransformPropertyName(globalObj = window, forceRefresh = false) {\n  if (storedTransformPropertyName_ === undefined || forceRefresh) {\n    const el = globalObj.document.createElement('div');\n    const transformPropertyName = ('transform' in el.style ? 'transform' : '-webkit-transform');\n    storedTransformPropertyName_ = transformPropertyName;\n  }\n\n  return storedTransformPropertyName_;\n}\n\n// Determine whether the current browser supports CSS properties.\nexport function supportsCssCustomProperties(globalObj = window) {\n  if ('CSS' in globalObj) {\n    return globalObj.CSS.supports('(--color: red)');\n  }\n  return false;\n}\n\n// Determine whether the current browser supports passive event listeners, and if so, use them.\nexport function applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n// Save the tab state for an element.\nexport function saveElementTabState(el) {\n  if (el.hasAttribute('tabindex')) {\n    el.setAttribute(TAB_DATA, el.getAttribute('tabindex'));\n  }\n  el.setAttribute(TAB_DATA_HANDLED, true);\n}\n\n// Restore the tab state for an element, if it was saved.\nexport function restoreElementTabState(el) {\n  // Only modify elements we've already handled, in case anything was dynamically added since we saved state.\n  if (el.hasAttribute(TAB_DATA_HANDLED)) {\n    if (el.hasAttribute(TAB_DATA)) {\n      el.setAttribute('tabindex', el.getAttribute(TAB_DATA));\n      el.removeAttribute(TAB_DATA);\n    } else {\n      el.removeAttribute('tabindex');\n    }\n    el.removeAttribute(TAB_DATA_HANDLED);\n  }\n}\n","<template>\n  <aside class=\"mdc-persistent-drawer mdc-drawer--persistent mdc-typography\" :class=\"classes\">\n    <nav ref=\"drawer\" class=\"mdc-drawer__drawer\">\n      <div class=\"mdc-drawer__toolbar-spacer\" \n        v-if=\"toolbarSpacer\"></div>\n      <slot />\n    </nav>\n  </aside>\n</template>\n\n<script>\nimport MDCPersistentDrawerFoundation from '@material/drawer/persistent/foundation'\nimport * as util from '@material/drawer/util'\n\nexport default {\n  name: 'mdc-persistent-drawer',\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    'toolbar-spacer': Boolean,\n    'open':Boolean\n  },\n  data () {\n    return {\n      classes: {},\n    }\n  },\n  watch: {\n    open() {\n      this._refresh()\n    }\n  },\n  methods: {\n    _refresh() {\n      if (this.open) {\n        this.foundation && this.foundation.open()          \n      }\n      else {\n        this.foundation && this.foundation.close()          \n      }\n    }\n  },\n  mounted () {\n    const {FOCUSABLE_ELEMENTS} = MDCPersistentDrawerFoundation.strings\n\n    this.foundation = new MDCPersistentDrawerFoundation({\n      addClass: (className) => {\n        this.$set(this.classes, className, true)\n      },\n      removeClass: (className) => {\n        this.$delete(this.classes, className)\n      },\n      hasClass: (className) => {\n        return this.$el.classList.contains(className)\n      },\n      hasNecessaryDom: () => {\n        return !!this.$refs.drawer\n      },\n      registerInteractionHandler: (evt, handler) => {\n        this.$el.addEventListener(util.remapEvent(evt), handler, util.applyPassive())\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        this.$el.removeEventListener(util.remapEvent(evt), handler, util.applyPassive())\n      },\n      registerDrawerInteractionHandler: (evt, handler) => {\n        this.$refs.drawer.addEventListener(util.remapEvent(evt), handler)\n      },\n      deregisterDrawerInteractionHandler: (evt, handler) => {\n        this.$refs.drawer.removeEventListener(util.remapEvent(evt), handler)\n      },\n      registerTransitionEndHandler: (handler) => {\n        this.$refs.drawer.addEventListener('transitionend', handler)\n      },\n      deregisterTransitionEndHandler: (handler) => {\n        this.$refs.drawer.removeEventListener('transitionend', handler)\n      },\n      registerDocumentKeydownHandler: (handler) => {\n        document.addEventListener('keydown', handler)\n      },\n      deregisterDocumentKeydownHandler: (handler) => {\n        document.removeEventListener('keydown', handler)\n      },\n      getDrawerWidth: () => {\n        return this.$refs.drawer.offsetWidth\n      },\n      setTranslateX: (value) => {\n        this.$refs.drawer.style.setProperty(\n          util.getTransformPropertyName(),\n          value === null ? null : `translateX(${value}px)`\n        )\n      },\n      getFocusableElements: () => {\n        return this.$refs.drawer.querySelectorAll(FOCUSABLE_ELEMENTS)\n      },\n      saveElementTabState: (el) => {\n        util.saveElementTabState(el)\n      },\n      restoreElementTabState: (el) => {\n        util.restoreElementTabState(el)\n      },\n      makeElementUntabbable: (el) => {\n        el.setAttribute('tabindex', -1)\n      },\n      notifyOpen: () => {\n        this.$emit('change',true)\n        this.$emit('open')\n      },\n      notifyClose: () => {\n        this.$emit('change',false)\n        this.$emit('close')\n      },\n      isRtl: () => {\n        /* global getComputedStyle */\n        return getComputedStyle(this.$el).getPropertyValue('direction') === 'rtl'\n      },\n      isDrawer: (el) => {\n        return el === this.$refs.drawer\n      }\n    })\n    this.foundation && this.foundation.init()  \n    this._refresh()\n  },\n  beforeDestroy () {\n    this.foundation && this.foundation.destroy()\n    this.foundation = null\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {FOCUSABLE_ELEMENTS} from '../slidable/index';\n\nexport const cssClasses = {\n  ROOT: 'mdc-drawer--temporary',\n  OPEN: 'mdc-drawer--open',\n  ANIMATING: 'mdc-drawer--animating',\n  SCROLL_LOCK: 'mdc-drawer-scroll-lock',\n};\n\nexport const strings = {\n  DRAWER_SELECTOR: '.mdc-drawer--temporary .mdc-drawer__drawer',\n  OPACITY_VAR_NAME: '--mdc-temporary-drawer-opacity',\n  FOCUSABLE_ELEMENTS,\n  OPEN_EVENT: 'MDCTemporaryDrawer:open',\n  CLOSE_EVENT: 'MDCTemporaryDrawer:close',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCSlidableDrawerFoundation} from '../slidable/index';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCTemporaryDrawerFoundation extends MDCSlidableDrawerFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return Object.assign(MDCSlidableDrawerFoundation.defaultAdapter, {\n      addBodyClass: (/* className: string */) => {},\n      removeBodyClass: (/* className: string */) => {},\n      isDrawer: () => false,\n      updateCssVariable: (/* value: string */) => {},\n      eventTargetHasClass: (/* target: EventTarget, className: string */) => /* boolean */ false,\n    });\n  }\n\n  constructor(adapter) {\n    super(\n      Object.assign(MDCTemporaryDrawerFoundation.defaultAdapter, adapter),\n      MDCTemporaryDrawerFoundation.cssClasses.ROOT,\n      MDCTemporaryDrawerFoundation.cssClasses.ANIMATING,\n      MDCTemporaryDrawerFoundation.cssClasses.OPEN);\n\n    this.componentClickHandler_ = (evt) => {\n      if (this.adapter_.eventTargetHasClass(evt.target, cssClasses.ROOT)) {\n        this.close(true);\n      }\n    };\n  }\n\n  init() {\n    super.init();\n\n    // Make browser aware of custom property being used in this element.\n    // Workaround for certain types of hard-to-reproduce heisenbugs.\n    this.adapter_.updateCssVariable(0);\n    this.adapter_.registerInteractionHandler('click', this.componentClickHandler_);\n  }\n\n  destroy() {\n    super.destroy();\n\n    this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);\n    this.enableScroll_();\n  }\n\n  open() {\n    this.disableScroll_();\n    // Make sure custom property values are cleared before starting.\n    this.adapter_.updateCssVariable('');\n\n    super.open();\n  }\n\n  close() {\n    // Make sure custom property values are cleared before making any changes.\n    this.adapter_.updateCssVariable('');\n\n    super.close();\n  }\n\n  prepareForTouchEnd_() {\n    super.prepareForTouchEnd_();\n\n    this.adapter_.updateCssVariable('');\n  }\n\n  updateDrawer_() {\n    super.updateDrawer_();\n\n    const newOpacity = Math.max(0, 1 + this.direction_ * (this.newPosition_ / this.drawerWidth_));\n    this.adapter_.updateCssVariable(newOpacity);\n  }\n\n  isRootTransitioningEventTarget_(el) {\n    return this.adapter_.isDrawer(el);\n  }\n\n  handleTransitionEnd_(evt) {\n    super.handleTransitionEnd_(evt);\n    if (!this.isOpen_) {\n      this.enableScroll_();\n    }\n  };\n\n  disableScroll_() {\n    this.adapter_.addBodyClass(cssClasses.SCROLL_LOCK);\n  }\n\n  enableScroll_() {\n    this.adapter_.removeBodyClass(cssClasses.SCROLL_LOCK);\n  }\n}\n","<template>\n  <aside class=\"mdc-temporary-drawer mdc-drawer--temporary mdc-typography\" :class=\"classes\">\n    <nav ref=\"drawer\" class=\"mdc-drawer__drawer\">\n      <div class=\"mdc-drawer__toolbar-spacer\" v-if=\"toolbarSpacer\"></div>\n      <slot />\n    </nav>\n  </aside>\n</template>\n\n<script>\nimport MDCTemporaryDrawerFoundation from '@material/drawer/temporary/foundation'\nimport * as util from '@material/drawer/util'\n\nexport default {\n  name: 'mdc-temporary-drawer',\n  model: {\n    prop: 'open',\n    event: 'change'\n  },\n  props: {\n    'open': Boolean,\n    'toolbar-spacer': Boolean,\n  },\n  data () {\n    return {\n      classes: {},\n    }\n  },\n  watch: {\n    open() {\n      this._refresh()\n    }\n  },\n  methods: {\n    _refresh() {\n      if (this.open) {\n        this.foundation && this.foundation.open()          \n      }\n      else {\n        this.foundation && this.foundation.close()          \n      }\n    }\n  },\n  mounted () {\n    const {FOCUSABLE_ELEMENTS, OPACITY_VAR_NAME} = \n      MDCTemporaryDrawerFoundation.strings\n    \n    this.foundation = new MDCTemporaryDrawerFoundation({\n      addClass: (className) => {\n        this.$set(this.classes, className, true)\n      },\n      removeClass: (className) => {\n        this.$delete(this.classes, className)\n      },\n      hasClass: (className) => {\n        return this.$el.classList.contains(className)\n      },\n      addBodyClass: (className) => document.body.classList.add(className),\n      removeBodyClass: (className) => document.body.classList.remove(className),\n      eventTargetHasClass: (target, className) => target.classList.contains(className),\n      hasNecessaryDom: () => {\n        return !!this.$refs.drawer\n      },\n      registerInteractionHandler: (evt, handler) => {\n        this.$el.addEventListener(util.remapEvent(evt), handler, util.applyPassive())\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        this.$el.removeEventListener(util.remapEvent(evt), handler, util.applyPassive())\n      },\n      registerDrawerInteractionHandler: (evt, handler) => {\n        this.$refs.drawer.addEventListener(util.remapEvent(evt), handler)\n      },\n      deregisterDrawerInteractionHandler: (evt, handler) => {\n        this.$refs.drawer.removeEventListener(util.remapEvent(evt), handler)\n      },\n      registerTransitionEndHandler: (handler) => {\n        this.$refs.drawer.addEventListener('transitionend', handler)\n      },\n      deregisterTransitionEndHandler: (handler) => {\n        this.$refs.drawer.removeEventListener('transitionend', handler)\n      },\n      registerDocumentKeydownHandler: (handler) => {\n        document.addEventListener('keydown', handler)\n      },\n      deregisterDocumentKeydownHandler: (handler) => {\n        document.removeEventListener('keydown', handler)\n      },\n      getDrawerWidth: () => {\n        return this.$refs.drawer.offsetWidth\n      },\n      setTranslateX: (value) => {\n        this.$refs.drawer.style.setProperty(\n          util.getTransformPropertyName(),\n          value === null ? null : `translateX(${value}px)`\n        )\n      },\n      updateCssVariable: (value) => {\n        if (util.supportsCssCustomProperties()) {\n          this.$el.style.setProperty(OPACITY_VAR_NAME, value)\n        }\n      },\n      getFocusableElements: () => {\n        return this.$refs.drawer.querySelectorAll(FOCUSABLE_ELEMENTS)\n      },\n      saveElementTabState: (el) => {\n        util.saveElementTabState(el)\n      },\n      restoreElementTabState: (el) => {\n        util.restoreElementTabState(el)\n      },\n      makeElementUntabbable: (el) => {\n        el.setAttribute('tabindex', -1)\n      },\n      notifyOpen: () => {\n        this.$emit('change',true)\n        this.$emit('open')\n      },\n      notifyClose: () => {\n        this.$emit('change',false)\n        this.$emit('close')\n      },\n      isRtl: () => {\n        /* global getComputedStyle */\n        return getComputedStyle(this.$el).getPropertyValue('direction') === 'rtl'\n      },\n      isDrawer: (el) => el === this.$refs.drawer,\n    })\n    this.foundation && this.foundation.init()  \n    this._refresh()\n  },\n  beforeDestroy () {\n    this.foundation && this.foundation.destroy()\n    this.foundation = null\n  }\n}\n</script>\n","<template>\r\n  <component  ref=\"drawer\" class=\"mdc-drawer\"\r\n      :is=\"type\" v-model=\"open_\"\r\n      :toolbar-spacer=\"toolbarSpacer\"\r\n      @change=\"$root.$emit('mdc:layout')\" \r\n      @open=\"$emit('open')\" \r\n      @close=\"$emit('close')\" >\r\n    <slot />\r\n  </component>\r\n</template>\r\n\r\n<script>\r\nimport mdcPermanentDrawer from './mdc-permanent-drawer.vue'\r\nimport mdcPersistentDrawer from './mdc-persistent-drawer.vue'\r\nimport mdcTemporaryDrawer from './mdc-temporary-drawer.vue'\r\n\r\nconst media = new class {\r\n  get small () {\r\n    return this._small || (this._small =\r\n      window.matchMedia('(max-width: 839px)'))\r\n  }\r\n\r\n  get large () {\r\n    return this._large || (this._large =\r\n      window.matchMedia('(min-width: 1200px)'))\r\n  }\r\n}()\r\n\r\nexport default {\r\n  name: 'mdc-drawer',\r\n  props: {\r\n    permanent: Boolean,\r\n    persistent: Boolean,\r\n    temporary: Boolean,\r\n    drawerType: {\r\n      type: String,\r\n      validator: (val) => {\r\n        return val in ['temporary', 'persistent', 'permanent']\r\n      }\r\n    },\r\n    toolbarSpacer: Boolean,\r\n    toggleOn: String,\r\n    toggleOnSource: {type: Object, required: false},\r\n    openOn: String,\r\n    openOnSource: {type: Object, required: false},\r\n    closeOn: String,\r\n    closeOnSource: {type: Object, required: false},\r\n  },\r\n  provide () {\r\n    return { mdcDrawer: this }\r\n  },\r\n  data () {\r\n    return {\r\n      small: false,\r\n      large: false,\r\n      open_: false,\r\n    }\r\n  },\r\n  components: {\r\n    'mdc-permanent-drawer': mdcPermanentDrawer,\r\n    'mdc-persistent-drawer': mdcPersistentDrawer,\r\n    'mdc-temporary-drawer': mdcTemporaryDrawer\r\n  },\r\n  computed: {\r\n    type () {\r\n      if (this.permanent) {\r\n        return 'mdc-permanent-drawer'\r\n      } else if (this.persistent) {\r\n        return 'mdc-persistent-drawer'\r\n      } else if (this.temporary) {\r\n        return 'mdc-temporary-drawer'\r\n      } else {\r\n        switch (this.drawerType) {\r\n          case 'permanent':\r\n            return 'mdc-permanent-drawer';\r\n          case 'persistent':\r\n            return 'mdc-persistent-drawer';\r\n          case 'temporary':\r\n            return 'mdc-temporary-drawer';\r\n          default:\r\n            return this.small ? 'mdc-temporary-drawer' : 'mdc-persistent-drawer'\r\n        }\r\n      }  \r\n    },\r\n    isPermanent () {\r\n      return this.permanent || this.type === 'mdc-permanent-drawer'\r\n    },\r\n    isPersistent () {\r\n      return this.persistent || this.type === 'mdc-persistent-drawer'\r\n    },\r\n    isTemporary () {\r\n      return this.temporary || this.type === 'mdc-temporary-drawer'\r\n    },\r\n    isResponsive () {\r\n      return !(this.permanent || this.persistent || this.temporary || this.drawerType)\r\n    }\r\n  },\r\n  methods: {\r\n    open () {\r\n      this.open_ = true\r\n    },\r\n    close () {\r\n      this.isPermanent || (this.open_ = false)\r\n    },\r\n    toggle () {\r\n      this.isPermanent || (this.isOpen() ? this.close() : this.open())\r\n    },\r\n    isOpen () {\r\n      return this.isPermanent|| ( this.open_ )\r\n    },\r\n    refreshMedia () {\r\n      this.small = media.small.matches\r\n      this.large = media.large.matches\r\n      if (this.isResponsive) {\r\n        if (this.large) {\r\n          this.open()\r\n        }\r\n        else {\r\n          this.close()\r\n        }\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    if (window && window.matchMedia) {\r\n      this.small = media.small.matches\r\n      this.large = media.large.matches\r\n    }\r\n  },\r\n  mounted () {\r\n    if (this.toggleOn) {\r\n      let source = this.toggleOnSource || this.$root\r\n      source.$on(this.toggleOn, () => this.toggle())\r\n    }\r\n    if (this.openOn) {\r\n      let source = this.openOnSource || this.$root\r\n      source.$on(this.openOn, () => this.open())\r\n    }\r\n    if (this.closeOn) {\r\n      let source = this.closeOnSource || this.$root\r\n      source.$on(this.closeOn, () => this.close())\r\n    }\r\n    media.small.addListener(this.refreshMedia)\r\n    media.large.addListener(this.refreshMedia)\r\n    this.$nextTick(() => this.refreshMedia())\r\n  },\r\n  beforeDestroy () {\r\n    media.small.removeListener(this.refreshMedia)\r\n    media.large.removeListener(this.refreshMedia)\r\n  }\r\n}\r\n</script>\r\n","import {BasePlugin} from '../base'\nimport mdcDrawer from './mdc-drawer.vue'\nimport mdcDrawerLayout from './mdc-drawer-layout.vue'\nimport mdcDrawerHeader from './mdc-drawer-header.vue'\nimport mdcDrawerList from './mdc-drawer-list.vue'\nimport mdcDrawerItem from './mdc-drawer-item.vue'\nimport mdcDrawerDivider from './mdc-drawer-divider.vue'\n\nexport {\n  mdcDrawer,\n  mdcDrawerLayout,\n  mdcDrawerHeader,\n  mdcDrawerList,\n  mdcDrawerItem,\n  mdcDrawerDivider\n}\n\nexport default BasePlugin({\n  mdcDrawer,\n  mdcDrawerLayout,\n  mdcDrawerHeader,\n  mdcDrawerList,\n  mdcDrawerItem,\n  mdcDrawerDivider\n})","<template>\n  <div class=\"mdc-drawer-layout\">\n      <slot />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-layout',\n}\n</script>\n","<template>\n  <header class=\"mdc-drawer-header mdc-drawer__header\" v-if=\"show\">\n    <div class=\"mdc-drawer__header-content\">\n      <slot />\n    </div>\n  </header>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-header',\n  props: {\n    'permanent': Boolean,\n    'persistent': Boolean,\n    'temporary': Boolean\n  },\n  inject: ['mdcDrawer'],\n  computed: {\n    show () {\n      if (this.temporary || this.persistent || this.permanent) {\n        return (this.temporary && this.mdcDrawer.isTemporary) ||\n          (this.persistent && this.mdcDrawer.isPersistent) ||\n            (this.permanent && this.mdcDrawer.isPermanent)\n      } else {\n        return true\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <nav class=\"mdc-drawer-list mdc-list\" :class=\"classes\">\n    <slot></slot>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-list',\n  props: {\n    'dense': Boolean,\n  },\n  data () {\n    return {\n      classes: {\n        'mdc-list--dense': this.dense\n      }\n    }\n  }\n  \n}\n</script>","<template>\r\n  <custom-link :link=\"link\" \r\n    class=\"mdc-drawer-item mdc-list-item\" \r\n    :class=\"[classes, itemClasses]\" :style=\"styles\"\r\n    @click=\"onClick\">\r\n    <span class=\"mdc-list-item__graphic\" v-if=\"hasStartDetail\">\r\n      <slot name=\"start-detail\">\r\n        <i class=\"material-icons\" aria-hidden=\"true\">{{startIcon}}</i>\r\n      </slot>\r\n    </span>\r\n    <slot></slot>\r\n  </custom-link>\r\n</template>\r\n\r\n<script>\r\nimport {DispatchEventMixin, CustomLinkMixin} from '../base'\r\nimport {RippleBase} from '../ripple'\r\n\r\nexport default {\r\n  name: 'mdc-drawer-item',\r\n  inject: ['mdcDrawer'],\r\n  mixins: [DispatchEventMixin, CustomLinkMixin],\r\n  props: {\r\n    startIcon: String,\r\n    temporaryClose: { \r\n      type: Boolean, \r\n      default: true\r\n    },\r\n    activated: Boolean,\r\n    exactActiveClass: { \r\n      type: String, \r\n      default: 'mdc-list-item--activated' \r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      classes: {},\r\n      styles: {}\r\n    }\r\n  },\r\n  computed: {\r\n    itemClasses () {\r\n      return {\r\n        'mdc-list-item--activated': this.activated\r\n      }\r\n    },\r\n    hasStartDetail () {\r\n      return this.startIcon || this.$slots['start-detail']\r\n    }\r\n  },\r\n  methods: {\r\n    onClick (evt) {\r\n      this.mdcDrawer.isTemporary && this.temporaryClose \r\n        && this.mdcDrawer.close()\r\n      this.dispatchEvent(evt)\r\n    }\r\n  },\r\n  mounted () {\r\n    this.ripple = new RippleBase(this)\r\n    this.ripple.init()\r\n  },\r\n  beforeDestroy () {\r\n    this.ripple && this.ripple.destroy()\r\n    this.ripple = null\r\n  }\r\n}\r\n</script>\r\n","<template>\n  <hr class=\"mdc-list-divider\">\n</template>\n\n<script>\nexport default {\n  name: 'mdc-drawer-divider',\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcElevation from './mdc-elevation.vue'\n\nexport {\n  mdcElevation\n}\n\nexport default BasePlugin({\n  mdcElevation\n})\n","<template>\n  <div class=\"mdc-elevation\"></div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-elevation',\n  props: {\n  }\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcFAB from './mdc-fab.vue'\n\nexport {\n  mdcFAB\n}\n\nexport default BasePlugin({\n  mdcFAB\n})\n","<template>\n  <custom-button class=\"mdc-fab\" \n    :class=\"classes\" :style=\"styles\"\n    :href=\"href\" :link=\"link\" \n    @click=\"dispatchEvent\" >\n    <span class=\"mdc-fab__icon\">\n      <slot>{{ icon }}</slot>\n    </span>\n  </custom-button>\n</template>\n\n<script>\nimport {DispatchEventMixin, CustomButtonMixin} from '../base'\nimport {RippleMixin} from '../ripple'\n\nexport default {\n  name: 'mdc-fab',\n  mixins: [DispatchEventMixin, CustomButtonMixin, RippleMixin],\n  props: {\n    icon: String,\n    mini: Boolean,\n    absolute: Boolean,\n    fixed: Boolean\n  },\n  data () {\n    return {\n      classes: {\n        'material-icons': this.icon,\n        'mdc-fab--mini': this.mini,\n        'mdc-fab--absolute': this.absolute,\n        'mdc-fab--fixed': this.fixed\n      },\n      styles: {}\n    }\n  },\n  watch: {\n    icon () {\n      this.$set(this.classes, 'material-icons', this.icon )\n    },\n    mini () {\n      this.$set(this.classes, 'mdc-fab--mini', this.mini )\n    }\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const strings = {\n  TILES_SELECTOR: '.mdc-grid-list__tiles',\n  TILE_SELECTOR: '.mdc-grid-tile',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {strings} from './constants';\n\nexport default class MDCGridListFoundation extends MDCFoundation {\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      getOffsetWidth: () => /* number */ 0,\n      getNumberOfTiles: () => /* number */ 0,\n      getOffsetWidthForTileAtIndex: (/* index: number */) => /* number */ 0,\n      setStyleForTilesElement: (/* property: string, value: string */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n    };\n  }\n  constructor(adapter) {\n    super(Object.assign(MDCGridListFoundation.defaultAdapter, adapter));\n    this.resizeHandler_ = () => this.alignCenter();\n    this.resizeFrame_ = 0;\n  }\n  init() {\n    this.alignCenter();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n  destroy() {\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n  alignCenter() {\n    if (this.resizeFrame_ !== 0) {\n      cancelAnimationFrame(this.resizeFrame_);\n    }\n    this.resizeFrame_ = requestAnimationFrame(() => {\n      this.alignCenter_();\n      this.resizeFrame_ = 0;\n    });\n  }\n  alignCenter_() {\n    if (this.adapter_.getNumberOfTiles() == 0) {\n      return;\n    }\n    const gridWidth = this.adapter_.getOffsetWidth();\n    const itemWidth = this.adapter_.getOffsetWidthForTileAtIndex(0);\n    const tilesWidth = itemWidth * Math.floor(gridWidth / itemWidth);\n    this.adapter_.setStyleForTilesElement('width', `${tilesWidth}px`);\n  }\n}\n","import {BasePlugin} from '../base'\nimport mdcGridList from './mdc-grid-list.vue'\nimport mdcGridTile from './mdc-grid-tile.vue'\n\nexport {\n  mdcGridList,\n  mdcGridTile\n}\n\nexport default BasePlugin({\n  mdcGridList,\n  mdcGridTile\n})\n","<template>\n  <div class=\"mdc-grid-list\">\n    <ul class=\"mdc-grid-list__tiles\" :class=\"classes\" :style=styles>\n        <slot></slot>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport MDCGridListFoundation from '@material/grid-list/foundation'\n\nexport default {\n  name: 'mdc-grid-list',\n  props: {\n    'width': [String, Number],\n    'ratio': String,\n    'narrow-gutter': Boolean,\n    'header-caption': Boolean,\n    'icon-align-start': Boolean,\n    'icon-align-end': Boolean,\n    'with-support-text': Boolean,\n    'interactive': Boolean\n  },\n  provide () {\n    return { mdcGrid: this }\n  },\n  computed: {\n    classes () {\n      let classes = {}\n\n      classes['mdc-grid-list--tile-gutter-1'] = this.narrowGutter\n      classes['mdc-grid-list--header-caption'] = this.headerCaption\n      classes[`mdc-grid-list--tile-aspect-${this.ratio}`] = this.ratio\n      classes['mdc-grid-list--with-icon-align-start'] = this.iconAlignStart\n      classes['mdc-grid-list--with-icon-align-end'] = this.iconAlignEnd\n      classes['mdc-grid-list--twoline-caption'] = this.withSupportText\n      classes['mdc-grid-list--non-interactive'] = !this.interactive\n\n      return classes\n    },\n    styles () {\n      return {\n        '--mdc-grid-list-tile-width': `${this.width}px`\n      }\n    }\n  },\n  mounted () {\n    this.foundation = new MDCGridListFoundation({\n      getOffsetWidth: () => {\n        return this.$el.offsetWidth\n      },\n      getNumberOfTiles: () => {\n        return this.$el.querySelectorAll(\n          MDCGridListFoundation.strings.TILE_SELECTOR).length\n      },\n      getOffsetWidthForTileAtIndex: (index) => {\n        return this.$el.querySelectorAll(\n          MDCGridListFoundation.strings.TILE_SELECTOR)[index].offsetWidth\n      },\n      setStyleForTilesElement: (property, value) => {\n        this.$el.querySelector(\n          MDCGridListFoundation.strings.TILES_SELECTOR).style[property] = value\n      },\n      registerResizeHandler: (handler) => {\n        window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: (handler) => {\n        window.removeEventListener('resize', handler)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy () {\n    this.foundation.destroy()\n  }\n}\n</script>\n","<template>\n  <li class=\"mdc-grid-tile\" @click=\"onClick\"\n    :class=\"[classes, itemClasses]\" :style=\"styles\"\n    :tabindex=\"isInteractive ? '0' : undefined\"\n    v-on=\"isInteractive ? $listeners : {}\">\n    <div class=\"mdc-grid-tile__primary\" v-if=\"cover\">\n      <div class=\"mdc-grid-tile__primary-content\"\n        :style=\"{ backgroundImage: 'url(' + src + ')' }\">\n      </div>\n    </div>\n    <div class=\"mdc-grid-tile__primary\" v-else>\n        <img class=\"mdc-grid-tile__primary-content\" :src=\"src\" />\n    </div>\n    <span class=\"mdc-grid-tile__secondary\" v-if=\"title || supportText\">\n      <i class=\"mdc-grid-tile__icon material-icons\" v-if=\"icon\">{{ icon }}</i>\n      <span class=\"mdc-grid-tile__title\" v-if=\"title\">{{ title }}</span>\n      <span class=\"mdc-grid-tile__support-text\" v-if=\"supportText\">{{ supportText }}</span>\n    </span>\n  </li>\n</template>\n\n\n<script>\nimport {DispatchEventMixin} from '../base'\nimport {RippleBase} from '../ripple'\n\nexport default {\n  name: 'mdc-grid-tile',\n  inject: ['mdcGrid'],\n  mixins: [DispatchEventMixin],\n  props: {\n    'src': String,\n    'cover': Boolean,\n    'icon': String,\n    'title': String,\n    'support-text': String,\n    'selected': Boolean,\n    'activated': Boolean\n  },\n  data () {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  computed: {\n    itemClasses () {\n      return {\n        'mdc-grid-tile--selected': this.selected,\n        'mdc-grid-tile--activated': this.activated\n      }\n    },\n    isInteractive () {\n      return this.mdcGrid && this.mdcGrid.interactive\n    },\n    hasStartDetail () {\n      return this.startIcon || this.$slots['start-detail']\n    },\n    hasEndDetail () {\n      return this.endIcon || this.$slots['end-detail']\n    }\n  },\n  watch: {\n    isInteractive (value) {\n      if (value) {\n        this.addRipple()\n      } else {\n        this.removeRipple()\n      }\n    }\n  },\n  methods: {\n    onClick (evt) {\n      this.dispatchEvent(evt)\n    },\n    addRipple () {\n      if (!this.ripple) {\n        let ripple = new RippleBase(this)\n        ripple.init()\n        this.ripple = ripple\n      }\n    },\n    removeRipple () {\n      if (this.ripple) {\n        let ripple = this.ripple\n        this.ripple = null\n        ripple.destroy()\n      }\n    }\n  },\n  mounted () {\n    this.isInteractive && this.addRipple()\n    /* eslint-disable no-console */\n    console.log(this)\n    console.log(this.$el.getBoundingClientRect())\n    console.log(this.ripple)\n    /* eslint-enable no-console */\n  },\n  beforeDestroy () {\n    this.removeRipple()\n  }\n}\n</script>\n","import {BasePlugin} from '../base'\r\nimport mdcIcon from './mdc-icon.vue'\r\n\r\nexport {\r\n  mdcIcon\r\n}\r\n\r\nexport default BasePlugin({\r\n  mdcIcon\r\n})\r\n","<template>\n  <span class=\"mdc-icon mdc-icon--material\" :class=\"{'material-icons':!!icon}\">\n    <slot>{{ icon }}</slot>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-icon',\n  props: {\n    icon: String\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-icon-toggle',\n  DISABLED: 'mdc-icon-toggle--disabled',\n};\n\n/** @enum {string} */\nconst strings = {\n  DATA_TOGGLE_ON: 'data-toggle-on',\n  DATA_TOGGLE_OFF: 'data-toggle-off',\n  ARIA_PRESSED: 'aria-pressed',\n  ARIA_DISABLED: 'aria-disabled',\n  ARIA_LABEL: 'aria-label',\n  CHANGE_EVENT: 'MDCIconToggle:change',\n};\n\nexport {cssClasses, strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Icon Toggle. Provides an interface for managing\n * - classes\n * - dom\n * - inner text\n * - event handlers\n * - event dispatch\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\n\nclass MDCIconToggleAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {!EventListener} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /** @param {string} text */\n  setText(text) {}\n\n  /** @return {number} */\n  getTabIndex() {}\n\n  /** @param {number} tabIndex */\n  setTabIndex(tabIndex) {}\n\n  /**\n   * @param {string} name\n   * @return {string}\n   */\n  getAttr(name) {}\n\n  /**\n   * @param {string} name\n   * @param {string} value\n   */\n  setAttr(name, value) {}\n\n  /** @param {string} name */\n  rmAttr(name) {}\n\n  /** @param {!IconToggleEvent} evtData */\n  notifyChange(evtData) {}\n}\n\n/**\n * @typedef {!{\n *   isOn: boolean,\n * }}\n */\nlet IconToggleEvent;\n\nexport {MDCIconToggleAdapter, IconToggleEvent};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCIconToggleAdapter, IconToggleEvent} from './adapter';\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCIconToggleAdapter>}\n */\nclass MDCIconToggleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      setText: (/* text: string */) => {},\n      getTabIndex: () => /* number */ 0,\n      setTabIndex: (/* tabIndex: number */) => {},\n      getAttr: (/* name: string */) => /* string */ '',\n      setAttr: (/* name: string, value: string */) => {},\n      rmAttr: (/* name: string */) => {},\n      notifyChange: (/* evtData: IconToggleEvent */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCIconToggleFoundation.defaultAdapter, adapter));\n\n    /** @private {boolean} */\n    this.on_ = false;\n\n    /** @private {boolean} */\n    this.disabled_ = false;\n\n    /** @private {number} */\n    this.savedTabIndex_ = -1;\n\n    /** @private {?IconToggleState} */\n    this.toggleOnData_ = null;\n\n    /** @private {?IconToggleState} */\n    this.toggleOffData_ = null;\n\n    this.clickHandler_ = /** @private {!EventListener} */ (\n      () => this.toggleFromEvt_());\n\n    /** @private {boolean} */\n    this.isHandlingKeydown_ = false;\n\n    this.keydownHandler_ = /** @private {!EventListener} */ ((/** @type {!KeyboardKey} */ evt) => {\n      if (isSpace(evt)) {\n        this.isHandlingKeydown_ = true;\n        return evt.preventDefault();\n      }\n    });\n\n    this.keyupHandler_ = /** @private {!EventListener} */ ((/** @type {!KeyboardKey} */ evt) => {\n      if (isSpace(evt)) {\n        this.isHandlingKeydown_ = false;\n        this.toggleFromEvt_();\n      }\n    });\n  }\n\n  init() {\n    this.refreshToggleData();\n    this.savedTabIndex_ = this.adapter_.getTabIndex();\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);\n  }\n\n  refreshToggleData() {\n    const {DATA_TOGGLE_ON, DATA_TOGGLE_OFF} = MDCIconToggleFoundation.strings;\n    this.toggleOnData_ = this.parseJsonDataAttr_(DATA_TOGGLE_ON);\n    this.toggleOffData_ = this.parseJsonDataAttr_(DATA_TOGGLE_OFF);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);\n  }\n\n  /** @private */\n  toggleFromEvt_() {\n    this.toggle();\n    const {on_: isOn} = this;\n    this.adapter_.notifyChange(/** @type {!IconToggleEvent} */ ({isOn}));\n  }\n\n  /** @return {boolean} */\n  isOn() {\n    return this.on_;\n  }\n\n  /** @param {boolean=} isOn */\n  toggle(isOn = !this.on_) {\n    this.on_ = isOn;\n\n    const {ARIA_LABEL, ARIA_PRESSED} = MDCIconToggleFoundation.strings;\n\n    if (this.on_) {\n      this.adapter_.setAttr(ARIA_PRESSED, 'true');\n    } else {\n      this.adapter_.setAttr(ARIA_PRESSED, 'false');\n    }\n\n    const {cssClass: classToRemove} =\n        this.on_ ? this.toggleOffData_ : this.toggleOnData_;\n\n    if (classToRemove) {\n      this.adapter_.removeClass(classToRemove);\n    }\n\n    const {content, label, cssClass} = this.on_ ? this.toggleOnData_ : this.toggleOffData_;\n\n    if (cssClass) {\n      this.adapter_.addClass(cssClass);\n    }\n    if (content) {\n      this.adapter_.setText(content);\n    }\n    if (label) {\n      this.adapter_.setAttr(ARIA_LABEL, label);\n    }\n  }\n\n  /**\n   * @param {string} dataAttr\n   * @return {!IconToggleState}\n   */\n  parseJsonDataAttr_(dataAttr) {\n    const val = this.adapter_.getAttr(dataAttr);\n    if (!val) {\n      return {};\n    }\n    return /** @type {!IconToggleState} */ (JSON.parse(val));\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.disabled_;\n  }\n\n  /** @param {boolean} isDisabled */\n  setDisabled(isDisabled) {\n    this.disabled_ = isDisabled;\n\n    const {DISABLED} = MDCIconToggleFoundation.cssClasses;\n    const {ARIA_DISABLED} = MDCIconToggleFoundation.strings;\n\n    if (this.disabled_) {\n      this.savedTabIndex_ = this.adapter_.getTabIndex();\n      this.adapter_.setTabIndex(-1);\n      this.adapter_.setAttr(ARIA_DISABLED, 'true');\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.setTabIndex(this.savedTabIndex_);\n      this.adapter_.rmAttr(ARIA_DISABLED);\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  /** @return {boolean} */\n  isKeyboardActivated() {\n    return this.isHandlingKeydown_;\n  }\n}\n\n/**\n * @typedef {!{\n *   key: string,\n *   keyCode: number\n * }}\n */\nlet KeyboardKey;\n\n/**\n * @param {!KeyboardKey} keyboardKey\n * @return {boolean}\n */\nfunction isSpace(keyboardKey) {\n  return keyboardKey.key === 'Space' || keyboardKey.keyCode === 32;\n}\n\n\n/** @record */\nclass IconToggleState {}\n\n/**\n * The aria-label value of the icon toggle, or undefined if there is no aria-label.\n * @export {string|undefined}\n */\nIconToggleState.prototype.label;\n\n/**\n * The text for the icon toggle, or undefined if there is no text.\n * @export {string|undefined}\n */\nIconToggleState.prototype.content;\n\n/**\n * The CSS class to add to the icon toggle, or undefined if there is no CSS class.\n * @export {string|undefined}\n */\nIconToggleState.prototype.cssClass;\n\nexport default MDCIconToggleFoundation;\n","<template>\n  <span class=\"mdc-icon-toggle\" role=\"button\" aria-pressed=\"false\"\n    :class=\"classes\" :style=\"styles\"\n    :tabindex=\"tabIndex\"\n    :data-toggle-on=\"toggleOnData\"\n    :data-toggle-off=\"toggleOffData\">\n    <i :class=\"iconClasses\" aria-hidden=\"true\">{{text}}</i>\n  </span>\n</template>\n\n<script>\nimport MDCIconToggleFoundation from '@material/icon-toggle/foundation'\nimport {RippleBase} from '../ripple'\n\nexport default {\n  name: 'mdc-icon-toggle',\n  props: {\n    toggleOn: [String, Object],\n    toggleOff: [String, Object],\n    value: Boolean,\n    disabled: Boolean,\n    accent: Boolean\n  },\n  data () {\n    return {\n      classes: {\n        'mdc-icon-toggle--accent': this.accent\n      },\n      styles: {},\n      iconClasses: {},\n      tabIndex: 0,\n      text: '',\n    }\n  },\n  watch: {\n    value (value) {\n      this.foundation && this.foundation.toggle(value)\n    },\n    disabled (disabled) {\n      this.foundation && this.foundation.setDisabled(disabled)\n    },\n    toggleOnData () {\n     this.foundation && this.foundation.refreshToggleData()\n    },\n    toggleOffData () {\n    this.foundation && this.foundation.refreshToggleData()\n    },\n    accent (value) {\n      this.$set(this.classes, 'mdc-icon-toggle--secondary', value)\n    },\n  },\n  computed: {\n    toggleOnData () {\n      let toggle = this.toggleOn\n      return toggle && JSON.stringify((typeof toggle === 'string') ? { \n        content: toggle, \n        cssClass: 'material-icons' \n      } : {\n        content: toggle.icon || toggle.content,\n        label: toggle.label,\n        cssClass: toggle.icon ? 'material-icons' : toggle.cssClass\n      })\n    } ,\n    toggleOffData () {\n      let toggle = this.toggleOff\n      return toggle && JSON.stringify((typeof toggle === 'string') ? { \n        content: toggle, \n        cssClass: 'material-icons' \n      } : {\n        content: toggle.icon || toggle.content,\n        label: toggle.label,\n        cssClass: toggle.icon ? 'material-icons' : toggle.cssClass\n      })\n    },\n  },\n  mounted () {\n    this.foundation = new MDCIconToggleFoundation({\n      addClass: (className) => this.$set(this.iconClasses, className, true),\n      removeClass: (className) => this.$delete(this.iconClasses, className),\n      registerInteractionHandler: (evt, handler) =>\n        this.$el.addEventListener(evt, handler),\n      deregisterInteractionHandler: (evt, handler) =>\n        this.$el.removeEventListener(evt, handler),\n      setText: (text) => { this.text = text },\n      getTabIndex: () => this.tabIndex,\n      setTabIndex: (tabIndex) => { this.tabIndex = tabIndex },\n      getAttr: (name, value) => this.$el.getAttribute(name, value),\n      setAttr: (name, value) => { this.$el.setAttribute(name, value) },\n      rmAttr: (name) => { this.$el.removeAttribute(name) },\n      notifyChange: (evtData) => { this.$emit('input', evtData.isOn) }\n    })\n    this.foundation.init()\n    this.foundation.toggle(this.value)\n    this.foundation.setDisabled(this.disabled)\n\n    this.ripple = new RippleBase(this, {\n      isUnbounded: () => true,\n      isSurfaceActive: () => this.foundation.isKeyboardActivated(),\n    })\n    this.ripple.init()\n  },\n  beforeDestroy () {\n    this.foundation.destroy()\n    this.ripple.destroy()\n  }\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcIConToggle from './mdc-icon-toggle.vue'\n\nexport {\n  mdcIConToggle\n}\n\nexport default BasePlugin({\n  mdcIConToggle\n})\n","import {BasePlugin} from '../base'\nimport mdcLayoutApp from './mdc-layout-app.vue'\n\nexport {\n  mdcLayoutApp\n}\n\nexport default BasePlugin({\n  mdcLayoutApp\n})\n","<template>\n  <div class=\"mdc-layout-app\">\n\n    <div class=\"mdc-layout-app--toolbar-wrapper\">\n      <slot name=\"toolbar\" />\n    </div>\n\n    <div class=\"mdc-layout-app--main-container\">\n\n      <div class=\"mdc-layout-app--drawer-wrapper\">\n        <slot name=\"drawer\" />\n      </div>\n\n      <div class=\"mdc-layout-app--content-wrapper\">\n        <slot />\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-layout-app',\n}\n</script>","<template>\n  <div class=\"mdc-layout-grid\" :class=classes>\n    <div class=\"mdc-layout-grid__inner\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  name: 'mdc-layout-grid',\n  props: {\n    'fixed-column-width': Boolean\n  },\n  data () {\n    return {\n      classes: {\n        'mdc-layout-grid--fixed-column-width': this.fixedColumnWidth\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"mdc-layout-cell mdc-layout-grid__cell\" :class=\"classes\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nconst spanOptions = {\n  type: [String, Number],\n  default: null,\n  validator: function (value) {\n    var num = Number(value)\n    return isFinite(num) && (num <= 12) && (num > 0)\n  }\n}\n\nexport default {\n  name: 'mdc-layout-cell',\n  props: {\n    span: spanOptions,\n    order: spanOptions,\n    phone: spanOptions,\n    tablet: spanOptions,\n    desktop: spanOptions,\n    align: {\n      type: String,\n      validator: function (value) {\n        return ['top', 'bottom', 'middle'].indexOf(value) !== -1\n      }\n    }\n  },\n  computed: {\n    classes () {\n      let classes = []\n\n      if (this.span) {\n        classes.push(`mdc-layout-grid__cell--span-${this.span}`)\n      }\n\n      if (this.order) {\n        classes.push(`mdc-layout-grid__cell--order-${this.order}`)\n      }\n\n      if (this.phone) {\n        classes.push(`mdc-layout-grid__cell--span-${this.phone}-phone`)\n      }\n\n      if (this.tablet) {\n        classes.push(`mdc-layout-grid__cell--span-${this.tablet}-tablet`)\n      }\n\n      if (this.desktop) {\n        classes.push(`mdc-layout-grid__cell--span-${this.desktop}-desktop`)\n      }\n\n      if (this.align) {\n        classes.push(`mdc-layout-grid__cell--align-${this.align}`)\n      }\n\n      return classes\n    }\n  }\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcLayoutGrid from './mdc-layout-grid.vue'\nimport mdcLayoutCell from './mdc-layout-cell.vue'\nimport mdcLayoutInnerGrid from './mdc-layout-inner-grid.vue'\n\nexport {\n  mdcLayoutGrid,\n  mdcLayoutCell,\n  mdcLayoutInnerGrid\n}\n\nexport default BasePlugin({\n  mdcLayoutGrid,\n  mdcLayoutCell,\n  mdcLayoutInnerGrid\n})\n","<template>\n  <div class=\"mdc-layout-inner-grid mdc-layout-grid__inner\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-layout-inner-grid',\n}\n</script>\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  CLOSED_CLASS: 'mdc-linear-progress--closed',\n  INDETERMINATE_CLASS: 'mdc-linear-progress--indeterminate',\n  REVERSED_CLASS: 'mdc-linear-progress--reversed',\n};\n\nexport const strings = {\n  PRIMARY_BAR_SELECTOR: '.mdc-linear-progress__primary-bar',\n  BUFFER_SELECTOR: '.mdc-linear-progress__buffer',\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {transformStyleProperties} from '@material/animation/index';\n\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCLinearProgressFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      getPrimaryBar: () => /* el: Element */ {},\n      getBuffer: () => /* el: Element */ {},\n      hasClass: (/* className: string */) => false,\n      removeClass: (/* className: string */) => {},\n      setStyle: (/* el: Element, styleProperty: string, value: string */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCLinearProgressFoundation.defaultAdapter, adapter));\n  }\n\n  init() {\n    this.determinate_ = !this.adapter_.hasClass(cssClasses.INDETERMINATE_CLASS);\n    this.reverse_ = this.adapter_.hasClass(cssClasses.REVERSED_CLASS);\n    this.progress_ = 0;\n  }\n\n  setDeterminate(isDeterminate) {\n    this.determinate_ = isDeterminate;\n    if (this.determinate_) {\n      this.adapter_.removeClass(cssClasses.INDETERMINATE_CLASS);\n      this.setScale_(this.adapter_.getPrimaryBar(), this.progress_);\n    } else {\n      this.adapter_.addClass(cssClasses.INDETERMINATE_CLASS);\n      this.setScale_(this.adapter_.getPrimaryBar(), 1);\n      this.setScale_(this.adapter_.getBuffer(), 1);\n    }\n  }\n\n  setProgress(value) {\n    this.progress_ = value;\n    if (this.determinate_) {\n      this.setScale_(this.adapter_.getPrimaryBar(), value);\n    }\n  }\n\n  setBuffer(value) {\n    if (this.determinate_) {\n      this.setScale_(this.adapter_.getBuffer(), value);\n    }\n  }\n\n  setReverse(isReversed) {\n    this.reverse_ = isReversed;\n    if (this.reverse_) {\n      this.adapter_.addClass(cssClasses.REVERSED_CLASS);\n    } else {\n      this.adapter_.removeClass(cssClasses.REVERSED_CLASS);\n    }\n  }\n\n  open() {\n    this.adapter_.removeClass(cssClasses.CLOSED_CLASS);\n  }\n\n  close() {\n    this.adapter_.addClass(cssClasses.CLOSED_CLASS);\n  }\n\n  setScale_(el, scaleValue) {\n    const value = 'scaleX(' + scaleValue + ')';\n    transformStyleProperties.forEach((transformStyleProperty) => {\n      this.adapter_.setStyle(el, transformStyleProperty, value);\n    });\n  }\n}\n","<template>\n  <div role=\"progressbar\" class=\"mdc-linear-progress\" \n    :class=\"classes\" :style=\"styles\">\n    <div class=\"mdc-linear-progress__buffering-dots\"></div>\n    <div ref=\"buffer\" class=\"mdc-linear-progress__buffer\"></div>\n    <div ref=\"primary\" class=\"mdc-linear-progress__bar mdc-linear-progress__primary-bar\">\n      <span class=\"mdc-linear-progress__bar-inner\"></span>\n    </div>\n    <div class=\"mdc-linear-progress__bar mdc-linear-progress__secondary-bar\">\n      <span class=\"mdc-linear-progress__bar-inner\"></span>\n    </div>\n  </div>  \n</template>\n\n<script>\nimport MDCLinearProgressFoundation from '@material/linear-progress/foundation'\n\nconst ProgressPropType = {\n  type: [Number, String],\n  validator (value) {\n    return Number(value) >= 0 && Number(value) <= 1\n  }\n}\n\nexport default {\n  name: 'mdc-linear-progress',\n  props: {\n    'open': { type: Boolean, default: true },\n    'indeterminate': Boolean,\n    'reverse': Boolean,\n    'accent': Boolean,\n    'progress': ProgressPropType,\n    'buffer': ProgressPropType\n  },\n  data () {\n    return {\n      classes: {'mdc-linear-progress--accent': this.accent},\n      styles: {}\n    }\n  },\n  watch: {\n    open () {\n      if (this.open) {\n        this.foundation.open()\n      } else {\n        this.foundation.close()\n      }\n    },\n    progress () {\n      this.foundation.setProgress(Number(this.progress))\n    },\n    buffer () {\n      this.foundation.setBuffer(Number(this.buffer))\n    },\n    indeterminate () {\n      this.foundation.setDeterminate(!this.indeterminate)\n    },\n    reverse () {\n      this.foundation.setReverse(this.reverse)\n    }\n  },\n  mounted () {\n    this.foundation = new MDCLinearProgressFoundation({\n      addClass: (className) => {\n        this.$set(this.classes, className, true)\n      },\n      getPrimaryBar: () => /* el: Element */ {\n        return this.$refs.primary\n      },\n      getBuffer: () => /* el: Element */ {\n        return this.$refs.buffer\n      },\n      hasClass: (className) => {\n        this.$el.classList.contains(className)\n      },\n      removeClass: (className) => {\n        this.$delete(this.classes, className)\n      },\n      setStyle: (el, styleProperty, value) => {\n        el.style[styleProperty] = value\n      }\n    })\n    this.foundation.init()\n\n    this.foundation.setReverse(this.reverse)\n    this.foundation.setProgress(Number(this.progress))\n    this.foundation.setBuffer(Number(this.buffer))\n    this.foundation.setDeterminate(!this.indeterminate)\n    if (this.open) {\n      this.foundation.open()\n    } else {\n      this.foundation.close()\n    }\n  },\n  beforeDestroy () {\n    this.foundation.destroy()\n  }\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcLinearProgress from './mdc-linear-progress.vue'\n\nexport {\n  mdcLinearProgress\n}\n\nexport default BasePlugin({\n  mdcLinearProgress\n})","import {BasePlugin} from '../base'\nimport mdcList from './mdc-list.vue'\nimport mdcListItem from './mdc-list-item.vue'\nimport mdcListDivider from './mdc-list-divider.vue'\nimport mdcListGroup from './mdc-list-group.vue'\nimport mdcListGroupHeader from './mdc-list-group-header.vue'\nimport mdcListGroupDivider from './mdc-list-group-divider.vue'\n\nexport {\n  mdcList,\n  mdcListItem,\n  mdcListDivider,\n  mdcListGroup,\n  mdcListGroupHeader,\n  mdcListGroupDivider\n}\n\nexport default BasePlugin({\n  mdcList,\n  mdcListItem,\n  mdcListDivider,\n  mdcListGroup,\n  mdcListGroupHeader,\n  mdcListGroupDivider\n})\n","<template>\n  <ul class=\"mdc-list\" :class=\"classes\">\n    <slot></slot>\n  </ul>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list',\n  props: {\n    dense: Boolean,\n    avatarList: Boolean,\n    twoLine: Boolean,\n    bordered: Boolean,\n    interactive: Boolean\n  },\n  provide () {\n    return { mdcList: this }\n  },\n  computed: {\n    classes () {\n      return {\n        'mdc-list--dense': this.dense,\n        'mdc-list--avatar-list': this.avatarList,\n        'mdc-list--two-line': this.twoLine,\n        'mdc-list--bordered': this.bordered,\n        'mdc-list--non-interactive': !this.interactive\n      }      \n    }\n  }\n}\n</script>\n","<template>\n  <li class=\"mdc-list-item\"\n    :class=\"[classes, itemClasses]\" :style=\"styles\"   \n    :tabindex=\"isInteractive ? '0' : undefined\"\n    v-on=\"isInteractive ? $listeners : {}\">\n\n    <span class=\"mdc-list-item__graphic\" v-if=\"hasStartDetail\">\n      <slot name=\"start-detail\"></slot>\n    </span>\n\n    <span class=\"mdc-list-item__text\" v-if=\"hasSecondary\">\n      <slot></slot>\n      <span class=\"mdc-list-item__secondary-text\">\n        <slot name=\"secondary\"></slot>\n      </span>\n    </span>\n    <slot v-else></slot>\n\n    <span class=\"mdc-list-item__meta\" v-if=\"hasEndDetail\">\n      <slot name=\"end-detail\"></slot>\n    </span>\n\n  </li>\n</template>\n\n<script>\nimport {RippleBase} from '../ripple'\n\nexport default {\n  name: 'mdc-list-item',\n  inject: ['mdcList'],\n  props: {\n    selected: Boolean,\n    activated: Boolean\n  },\n  data () {\n    return {\n      classes: {},\n      styles: {}\n    } \n  },\n  computed: {\n    itemClasses () {\n      return {\n        'mdc-list-item--selected': this.selected,\n        'mdc-list-item--activated': this.activated\n      }\n    },\n    isInteractive () {\n      return this.mdcList && this.mdcList.interactive\n    },\n    hasSecondary () {\n      return this.$slots['secondary'] && (\n        this.mdcList && this.mdcList.twoLine\n      ) \n    },\n    hasEndDetail () {\n      return !!this.$slots['end-detail']\n    },\n    hasStartDetail () {\n      return !!this.$slots['start-detail']\n    }\n  },\n  watch: {\n    isInteractive (value) {\n        if (value) {\n          this.addRipple() \n        } else {\n          this.removeRipple()\n        }\n    }\n  },\n  mounted () {\n    this.isInteractive && this.addRipple()\n  },\n  beforeDestroy () {\n    this.removeRipple()\n  },\n  methods: {\n    addRipple () {\n      if (!this.ripple) {\n        let ripple = new RippleBase(this)\n        ripple.init()\n        this.ripple = ripple                 \n      } \n    },\n    removeRipple () {\n      if (this.ripple) {\n        let ripple = this.ripple\n        this.ripple = null \n        ripple.destroy()\n      }                \n    }\n  }\n  \n}\n</script>\n  ","<template>\n  <li role=\"separator\" class=\"mdc-list-divider\" \n  :class=\"classes\"></li>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-divider',\n  props: {\n    inset: Boolean,\n    padded: Boolean\n  },\n  computed: {\n    classes () {\n      return {\n        'mdc-list-divider--inset': this.inset,\n        'mdc-list-divider--padded': this.padded\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <div class=\"mdc-list-group\"><slot></slot></div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-group',\n}\n</script>\n","<template>\n  <h3 class=\"mdc-list-group-header mdc-list-group__subheader\"><slot></slot></h3>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-group-header',\n}\n</script>\n","<template>\n  <hr class=\"mdc-list-group-divider mdc-list-divider\">\n</template>\n\n<script>\nexport default {\n  name: 'mdc-list-group-divider',\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-menu',\n  OPEN: 'mdc-menu--open',\n  ANIMATING_OPEN: 'mdc-menu--animating-open',\n  ANIMATING_CLOSED: 'mdc-menu--animating-closed',\n  SELECTED_LIST_ITEM: 'mdc-list-item--selected',\n};\n\n/** @enum {string} */\nconst strings = {\n  ITEMS_SELECTOR: '.mdc-menu__items',\n  SELECTED_EVENT: 'MDCMenu:selected',\n  CANCEL_EVENT: 'MDCMenu:cancel',\n  ARIA_DISABLED_ATTR: 'aria-disabled',\n};\n\n/** @enum {number} */\nconst numbers = {\n  // Amount of time to wait before triggering a selected event on the menu. Note that this time\n  // will most likely be bumped up once interactive lists are supported to allow for the ripple to\n  // animate before closing the menu\n  SELECTED_TRIGGER_DELAY: 50,\n  // Total duration of menu open animation.\n  TRANSITION_OPEN_DURATION: 120,\n  // Total duration of menu close animation.\n  TRANSITION_CLOSE_DURATION: 75,\n  // Margin left to the edge of the viewport when menu is at maximum possible height.\n  MARGIN_TO_EDGE: 32,\n  // Ratio of anchor width to menu width for switching from corner positioning to center positioning.\n  ANCHOR_TO_MENU_WIDTH_RATIO: 0.67,\n  // Ratio of vertical offset to menu height for switching from corner to mid-way origin positioning.\n  OFFSET_TO_MENU_HEIGHT_RATIO: 0.1,\n};\n\n/**\n * Enum for bits in the {@see Corner) bitmap.\n * @enum {number}\n */\nconst CornerBit = {\n  BOTTOM: 1,\n  CENTER: 2,\n  RIGHT: 4,\n  FLIP_RTL: 8,\n};\n\n/**\n * Enum for representing an element corner for positioning the menu.\n *\n * The START constants map to LEFT if element directionality is left\n * to right and RIGHT if the directionality is right to left.\n * Likewise END maps to RIGHT or LEFT depending on the directionality.\n *\n * @enum {number}\n */\nconst Corner = {\n  TOP_LEFT: 0,\n  TOP_RIGHT: CornerBit.RIGHT,\n  BOTTOM_LEFT: CornerBit.BOTTOM,\n  BOTTOM_RIGHT: CornerBit.BOTTOM | CornerBit.RIGHT,\n  TOP_START: CornerBit.FLIP_RTL,\n  TOP_END: CornerBit.FLIP_RTL | CornerBit.RIGHT,\n  BOTTOM_START: CornerBit.BOTTOM | CornerBit.FLIP_RTL,\n  BOTTOM_END: CornerBit.BOTTOM | CornerBit.RIGHT | CornerBit.FLIP_RTL,\n};\n\n\nexport {cssClasses, strings, numbers, CornerBit, Corner};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Menu. Provides an interface for managing\n * - classes\n * - dom\n * - focus\n * - position\n * - dimensions\n * - event handlers\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCMenuAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /** @return {boolean} */\n  hasNecessaryDom() {}\n\n  /**\n   * @param {EventTarget} target\n   * @param {string} attributeName\n   * @return {string}\n   */\n  getAttributeForEventTarget(target, attributeName) {}\n\n  /** @return {{ width: number, height: number }} */\n  getInnerDimensions() {}\n\n  /** @return {boolean} */\n  hasAnchor() {}\n\n  /** @return {{width: number, height: number, top: number, right: number, bottom: number, left: number}} */\n  getAnchorDimensions() {}\n\n  /** @return {{ width: number, height: number }} */\n  getWindowDimensions() {}\n\n  /** @return {number} */\n  getNumberOfItems() {}\n\n  /**\n   * @param {string} type\n   * @param {function(!Event)} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * @param {string} type\n   * @param {function(!Event)} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /** @param {function(!Event)} handler */\n  registerBodyClickHandler(handler) {}\n\n  /** @param {function(!Event)} handler */\n  deregisterBodyClickHandler(handler) {}\n\n  /**\n   * @param {EventTarget} target\n   * @return {number}\n   */\n  getIndexForEventTarget(target) {}\n\n  /** @param {{index: number}} evtData */\n  notifySelected(evtData) {}\n\n  notifyCancel() {}\n\n  saveFocus() {}\n\n  restoreFocus() {}\n\n  /** @return {boolean} */\n  isFocused() {}\n\n  focus() {}\n\n  /** @return {number} */\n  getFocusedItemIndex() /* number */ {}\n\n  /** @param {number} index */\n  focusItemAtIndex(index) {}\n\n  /** @return {boolean} */\n  isRtl() {}\n\n  /** @param {string} origin */\n  setTransformOrigin(origin) {}\n\n  /** @param {{\n  *   top: (string|undefined),\n  *   right: (string|undefined),\n  *   bottom: (string|undefined),\n  *   left: (string|undefined)\n  * }} position */\n  setPosition(position) {}\n\n  /** @param {string} height */\n  setMaxHeight(height) {}\n\n  /**\n   * @param {number} index\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttrForOptionAtIndex(index, attr, value) {}\n\n  /**\n   * @param {number} index\n   * @param {string} attr\n   */\n  rmAttrForOptionAtIndex(index, attr) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  addClassForOptionAtIndex(index, className) {}\n\n  /**\n   * @param {number} index\n   * @param {string} className\n   */\n  rmClassForOptionAtIndex(index, className) {}\n}\n\nexport {MDCMenuAdapter};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   top: number,\n *   right: number,\n *   bottom: number,\n *   left: number\n * }}\n */\nlet AnchorMargin;\n\n/* eslint-disable no-unused-vars */\n/**\n * @typedef {{\n *   viewport: { width: number, height: number },\n *   viewportDistance: {top: number, right: number, bottom: number, left: number},\n *   anchorHeight: number,\n *   anchorWidth: number,\n *   menuHeight: number,\n *   menuWidth: number,\n * }}\n */\nlet AutoLayoutMeasurements;\n/* eslint-enable no-unused-vars */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCMenuAdapter} from './adapter';\nimport {cssClasses, strings, numbers, Corner, CornerBit} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCMenuAdapter>}\n */\nclass MDCMenuFoundation extends MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return enum{number} */\n  static get Corner() {\n    return Corner;\n  }\n\n  /**\n   * {@see MDCMenuAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCMenuAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCMenuAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => false,\n      hasNecessaryDom: () => false,\n      getAttributeForEventTarget: () => {},\n      getInnerDimensions: () => ({}),\n      hasAnchor: () => false,\n      getAnchorDimensions: () => ({}),\n      getWindowDimensions: () => ({}),\n      getNumberOfItems: () => 0,\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      registerBodyClickHandler: () => {},\n      deregisterBodyClickHandler: () => {},\n      getIndexForEventTarget: () => 0,\n      notifySelected: () => {},\n      notifyCancel: () => {},\n      saveFocus: () => {},\n      restoreFocus: () => {},\n      isFocused: () => false,\n      focus: () => {},\n      getFocusedItemIndex: () => -1,\n      focusItemAtIndex: () => {},\n      isRtl: () => false,\n      setTransformOrigin: () => {},\n      setPosition: () => {},\n      setMaxHeight: () => {},\n      setAttrForOptionAtIndex: () => {},\n      rmAttrForOptionAtIndex: () => {},\n      addClassForOptionAtIndex: () => {},\n      rmClassForOptionAtIndex: () => {},\n    });\n  }\n\n  /** @param {!MDCMenuAdapter} adapter */\n  constructor(adapter) {\n    super(Object.assign(MDCMenuFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event)} */\n    this.clickHandler_ = (evt) => this.handlePossibleSelected_(evt);\n    /** @private {function(!Event)} */\n    this.keydownHandler_ = (evt) => this.handleKeyboardDown_(evt);\n    /** @private {function(!Event)} */\n    this.keyupHandler_ = (evt) => this.handleKeyboardUp_(evt);\n    /** @private {function(!Event)} */\n    this.documentClickHandler_ = (evt) => this.handleDocumentClick_(evt);\n    /** @private {boolean} */\n    this.isOpen_ = false;\n    /** @private {number} */\n    this.openAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.closeAnimationEndTimerId_ = 0;\n    /** @private {number} */\n    this.selectedTriggerTimerId_ = 0;\n    /** @private {number} */\n    this.animationRequestId_ = 0;\n    /** @private {!{ width: number, height: number }} */\n    this.dimensions_;\n    /** @private {number} */\n    this.itemHeight_;\n    /** @private {Corner} */\n    this.anchorCorner_ = Corner.TOP_START;\n    /** @private {AnchorMargin} */\n    this.anchorMargin_ = {top: 0, right: 0, bottom: 0, left: 0};\n    /** @private {?AutoLayoutMeasurements} */\n    this.measures_ = null;\n    /** @private {number} */\n    this.selectedIndex_ = -1;\n    /** @private {boolean} */\n    this.rememberSelection_ = false;\n    /** @private {boolean} */\n    this.quickOpen_ = false;\n\n    // A keyup event on the menu needs to have a corresponding keydown\n    // event on the menu. If the user opens the menu with a keydown event on a\n    // button, the menu will only get the key up event causing buggy behavior with selected elements.\n    /** @private {boolean} */\n    this.keyDownWithinMenu_ = false;\n  }\n\n  init() {\n    const {ROOT, OPEN} = MDCMenuFoundation.cssClasses;\n\n    if (!this.adapter_.hasClass(ROOT)) {\n      throw new Error(`${ROOT} class required in root element.`);\n    }\n\n    if (!this.adapter_.hasNecessaryDom()) {\n      throw new Error(`Required DOM nodes missing in ${ROOT} component.`);\n    }\n\n    if (this.adapter_.hasClass(OPEN)) {\n      this.isOpen_ = true;\n    }\n\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.keyupHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n  }\n\n  destroy() {\n    clearTimeout(this.selectedTriggerTimerId_);\n    clearTimeout(this.openAnimationEndTimerId_);\n    clearTimeout(this.closeAnimationEndTimerId_);\n    // Cancel any currently running animations.\n    cancelAnimationFrame(this.animationRequestId_);\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.keyupHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterBodyClickHandler(this.documentClickHandler_);\n  }\n\n  /**\n   * @param {!Corner} corner Default anchor corner alignment of top-left menu corner.\n   */\n  setAnchorCorner(corner) {\n    this.anchorCorner_ = corner;\n  }\n\n  /**\n   * @param {!AnchorMargin} margin 4-plet of margins from anchor.\n   */\n  setAnchorMargin(margin) {\n    this.anchorMargin_.top = typeof margin.top === 'number' ? margin.top : 0;\n    this.anchorMargin_.right = typeof margin.right === 'number' ? margin.right : 0;\n    this.anchorMargin_.bottom = typeof margin.bottom === 'number' ? margin.bottom : 0;\n    this.anchorMargin_.left = typeof margin.left === 'number' ? margin.left : 0;\n  }\n\n  /** @param {boolean} rememberSelection */\n  setRememberSelection(rememberSelection) {\n    this.rememberSelection_ = rememberSelection;\n    this.setSelectedIndex(-1);\n  }\n\n  /** @param {boolean} quickOpen */\n  setQuickOpen(quickOpen) {\n    this.quickOpen_ = quickOpen;\n  }\n\n  /**\n   * @param {?number} focusIndex\n   * @private\n   */\n  focusOnOpen_(focusIndex) {\n    if (focusIndex === null) {\n      // If this instance of MDCMenu remembers selections, and the user has\n      // made a selection, then focus the last selected item\n      if (this.rememberSelection_ && this.selectedIndex_ >= 0) {\n        this.adapter_.focusItemAtIndex(this.selectedIndex_);\n        return;\n      }\n\n      this.adapter_.focus();\n      // If that doesn't work, focus first item instead.\n      if (!this.adapter_.isFocused()) {\n        this.adapter_.focusItemAtIndex(0);\n      }\n    } else {\n      this.adapter_.focusItemAtIndex(focusIndex);\n    }\n  }\n\n  /**\n   * Handle clicks and cancel the menu if not a child list-item\n   * @param {!Event} evt\n   * @private\n   */\n  handleDocumentClick_(evt) {\n    let el = evt.target;\n\n    while (el && el !== document.documentElement) {\n      if (this.adapter_.getIndexForEventTarget(el) !== -1) {\n        return;\n      }\n      el = el.parentNode;\n    }\n\n    this.adapter_.notifyCancel();\n    this.close(evt);\n  };\n\n  /**\n   * Handle keys that we want to repeat on hold (tab and arrows).\n   * @param {!Event} evt\n   * @return {boolean}\n   * @private\n   */\n  handleKeyboardDown_(evt) {\n    // Do nothing if Alt, Ctrl or Meta are pressed.\n    if (evt.altKey || evt.ctrlKey || evt.metaKey) {\n      return true;\n    }\n\n    const {keyCode, key, shiftKey} = evt;\n    const isTab = key === 'Tab' || keyCode === 9;\n    const isArrowUp = key === 'ArrowUp' || keyCode === 38;\n    const isArrowDown = key === 'ArrowDown' || keyCode === 40;\n    const isSpace = key === 'Space' || keyCode === 32;\n    const isEnter = key === 'Enter' || keyCode === 13;\n    // The menu needs to know if the keydown event was triggered on the menu\n    this.keyDownWithinMenu_ = isEnter || isSpace;\n\n    const focusedItemIndex = this.adapter_.getFocusedItemIndex();\n    const lastItemIndex = this.adapter_.getNumberOfItems() - 1;\n\n    if (shiftKey && isTab && focusedItemIndex === 0) {\n      this.adapter_.focusItemAtIndex(lastItemIndex);\n      evt.preventDefault();\n      return false;\n    }\n\n    if (!shiftKey && isTab && focusedItemIndex === lastItemIndex) {\n      this.adapter_.focusItemAtIndex(0);\n      evt.preventDefault();\n      return false;\n    }\n\n    // Ensure Arrow{Up,Down} and space do not cause inadvertent scrolling\n    if (isArrowUp || isArrowDown || isSpace) {\n      evt.preventDefault();\n    }\n\n    if (isArrowUp) {\n      if (focusedItemIndex === 0 || this.adapter_.isFocused()) {\n        this.adapter_.focusItemAtIndex(lastItemIndex);\n      } else {\n        this.adapter_.focusItemAtIndex(focusedItemIndex - 1);\n      }\n    } else if (isArrowDown) {\n      if (focusedItemIndex === lastItemIndex || this.adapter_.isFocused()) {\n        this.adapter_.focusItemAtIndex(0);\n      } else {\n        this.adapter_.focusItemAtIndex(focusedItemIndex + 1);\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle keys that we don't want to repeat on hold (Enter, Space, Escape).\n   * @param {!Event} evt\n   * @return {boolean}\n   * @private\n   */\n  handleKeyboardUp_(evt) {\n    // Do nothing if Alt, Ctrl or Meta are pressed.\n    if (evt.altKey || evt.ctrlKey || evt.metaKey) {\n      return true;\n    }\n\n    const {keyCode, key} = evt;\n    const isEnter = key === 'Enter' || keyCode === 13;\n    const isSpace = key === 'Space' || keyCode === 32;\n    const isEscape = key === 'Escape' || keyCode === 27;\n\n    if (isEnter || isSpace) {\n      // If the keydown event didn't occur on the menu, then it should\n      // disregard the possible selected event.\n      if (this.keyDownWithinMenu_) {\n        this.handlePossibleSelected_(evt);\n      }\n      this.keyDownWithinMenu_ = false;\n    }\n\n    if (isEscape) {\n      this.adapter_.notifyCancel();\n      this.close();\n    }\n\n    return true;\n  }\n\n  /**\n   * @param {!Event} evt\n   * @private\n   */\n  handlePossibleSelected_(evt) {\n    if (this.adapter_.getAttributeForEventTarget(evt.target, strings.ARIA_DISABLED_ATTR) === 'true') {\n      return;\n    }\n    const targetIndex = this.adapter_.getIndexForEventTarget(evt.target);\n    if (targetIndex < 0) {\n      return;\n    }\n    // Debounce multiple selections\n    if (this.selectedTriggerTimerId_) {\n      return;\n    }\n    this.selectedTriggerTimerId_ = setTimeout(() => {\n      this.selectedTriggerTimerId_ = 0;\n      this.close();\n      if (this.rememberSelection_) {\n        this.setSelectedIndex(targetIndex);\n      }\n      this.adapter_.notifySelected({index: targetIndex});\n    }, numbers.SELECTED_TRIGGER_DELAY);\n  }\n\n  /**\n   * @return {AutoLayoutMeasurements} Measurements used to position menu popup.\n   */\n  getAutoLayoutMeasurements_() {\n    const anchorRect = this.adapter_.getAnchorDimensions();\n    const viewport = this.adapter_.getWindowDimensions();\n\n    return {\n      viewport: viewport,\n      viewportDistance: {\n        top: anchorRect.top,\n        right: viewport.width - anchorRect.right,\n        left: anchorRect.left,\n        bottom: viewport.height - anchorRect.bottom,\n      },\n      anchorHeight: anchorRect.height,\n      anchorWidth: anchorRect.width,\n      menuHeight: this.dimensions_.height,\n      menuWidth: this.dimensions_.width,\n    };\n  }\n\n  /**\n   * Computes the corner of the anchor from which to animate and position the menu.\n   * @return {Corner}\n   * @private\n   */\n  getOriginCorner_() {\n    // Defaults: open from the top left.\n    let corner = Corner.TOP_LEFT;\n\n    const {viewportDistance, anchorHeight, anchorWidth, menuHeight, menuWidth} = this.measures_;\n    const isBottomAligned = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    const availableTop = isBottomAligned ? viewportDistance.top + anchorHeight + this.anchorMargin_.bottom\n      : viewportDistance.top + this.anchorMargin_.top;\n    const availableBottom = isBottomAligned ? viewportDistance.bottom - this.anchorMargin_.bottom\n      : viewportDistance.bottom + anchorHeight - this.anchorMargin_.top;\n\n    const topOverflow = menuHeight - availableTop;\n    const bottomOverflow = menuHeight - availableBottom;\n    if (bottomOverflow > 0 && topOverflow < bottomOverflow) {\n      corner |= CornerBit.BOTTOM;\n    }\n\n    const isRtl = this.adapter_.isRtl();\n    const isFlipRtl = Boolean(this.anchorCorner_ & CornerBit.FLIP_RTL);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n    const isAlignedRight = (avoidHorizontalOverlap && !isRtl) ||\n      (!avoidHorizontalOverlap && isFlipRtl && isRtl);\n    const availableLeft = isAlignedRight ? viewportDistance.left + anchorWidth + this.anchorMargin_.right :\n      viewportDistance.left + this.anchorMargin_.left;\n    const availableRight = isAlignedRight ? viewportDistance.right - this.anchorMargin_.right :\n      viewportDistance.right + anchorWidth - this.anchorMargin_.left;\n\n    const leftOverflow = menuWidth - availableLeft;\n    const rightOverflow = menuWidth - availableRight;\n\n    if ((leftOverflow < 0 && isAlignedRight && isRtl) ||\n        (avoidHorizontalOverlap && !isAlignedRight && leftOverflow < 0) ||\n        (rightOverflow > 0 && leftOverflow < rightOverflow)) {\n      corner |= CornerBit.RIGHT;\n    }\n\n    return corner;\n  }\n\n  /**\n   * @param {Corner} corner Origin corner of the menu.\n   * @return {number} Horizontal offset of menu origin corner from corresponding anchor corner.\n   * @private\n   */\n  getHorizontalOriginOffset_(corner) {\n    const {anchorWidth} = this.measures_;\n    const isRightAligned = Boolean(corner & CornerBit.RIGHT);\n    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & CornerBit.RIGHT);\n    let x = 0;\n    if (isRightAligned) {\n      const rightOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.left : this.anchorMargin_.right;\n      x = rightOffset;\n    } else {\n      const leftOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.right : this.anchorMargin_.left;\n      x = leftOffset;\n    }\n    return x;\n  }\n\n  /**\n   * @param {Corner} corner Origin corner of the menu.\n   * @return {number} Vertical offset of menu origin corner from corresponding anchor corner.\n   * @private\n   */\n  getVerticalOriginOffset_(corner) {\n    const {viewport, viewportDistance, anchorHeight, menuHeight} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n    const {MARGIN_TO_EDGE} = MDCMenuFoundation.numbers;\n    const avoidVerticalOverlap = Boolean(this.anchorCorner_ & CornerBit.BOTTOM);\n    const canOverlapVertically = !avoidVerticalOverlap;\n    let y = 0;\n\n    if (isBottomAligned) {\n      y = avoidVerticalOverlap ? anchorHeight - this.anchorMargin_.top : -this.anchorMargin_.bottom;\n      // adjust for when menu can overlap anchor, but too tall to be aligned to bottom\n      // anchor corner. Bottom margin is ignored in such cases.\n      if (canOverlapVertically && menuHeight > viewportDistance.top + anchorHeight) {\n        y = -(Math.min(menuHeight, viewport.height - MARGIN_TO_EDGE) - (viewportDistance.top + anchorHeight));\n      }\n    } else {\n      y = avoidVerticalOverlap ? (anchorHeight + this.anchorMargin_.bottom) : this.anchorMargin_.top;\n      // adjust for when menu can overlap anchor, but too tall to be aligned to top\n      // anchor corners. Top margin is ignored in that case.\n      if (canOverlapVertically && menuHeight > viewportDistance.bottom + anchorHeight) {\n        y = -(Math.min(menuHeight, viewport.height - MARGIN_TO_EDGE) - (viewportDistance.bottom + anchorHeight));\n      }\n    }\n    return y;\n  }\n\n  /**\n   * @param {Corner} corner Origin corner of the menu.\n   * @return {number} Maximum height of the menu, based on available space. 0 indicates should not be set.\n   * @private\n   */\n  getMenuMaxHeight_(corner) {\n    let maxHeight = 0;\n    const {viewportDistance} = this.measures_;\n    const isBottomAligned = Boolean(corner & CornerBit.BOTTOM);\n\n    // When maximum height is not specified, it is handled from css.\n    if (this.anchorCorner_ & CornerBit.BOTTOM) {\n      if (isBottomAligned) {\n        maxHeight = viewportDistance.top + this.anchorMargin_.top;\n      } else {\n        maxHeight = viewportDistance.bottom - this.anchorMargin_.bottom;\n      }\n    }\n\n    return maxHeight;\n  }\n\n  /** @private */\n  autoPosition_() {\n    if (!this.adapter_.hasAnchor()) {\n      return;\n    }\n\n    // Compute measurements for autoposition methods reuse.\n    this.measures_ = this.getAutoLayoutMeasurements_();\n\n    const corner = this.getOriginCorner_();\n    const maxMenuHeight = this.getMenuMaxHeight_(corner);\n    let verticalAlignment = (corner & CornerBit.BOTTOM) ? 'bottom' : 'top';\n    let horizontalAlignment = (corner & CornerBit.RIGHT) ? 'right' : 'left';\n    const horizontalOffset = this.getHorizontalOriginOffset_(corner);\n    const verticalOffset = this.getVerticalOriginOffset_(corner);\n    const position = {\n      [horizontalAlignment]: horizontalOffset ? horizontalOffset + 'px' : '0',\n      [verticalAlignment]: verticalOffset ? verticalOffset + 'px' : '0',\n    };\n    const {anchorWidth, menuHeight, menuWidth} = this.measures_;\n    // Center align when anchor width is comparable or greater than menu, otherwise keep corner.\n    if (anchorWidth / menuWidth > numbers.ANCHOR_TO_MENU_WIDTH_RATIO) {\n      horizontalAlignment = 'center';\n    }\n\n    // Adjust vertical origin when menu is positioned with significant offset from anchor. This is done so that\n    // scale animation is \"anchored\" on the anchor.\n    if (!(this.anchorCorner_ & CornerBit.BOTTOM) &&\n        Math.abs(verticalOffset / menuHeight) > numbers.OFFSET_TO_MENU_HEIGHT_RATIO) {\n      const verticalOffsetPercent = Math.abs(verticalOffset / menuHeight) * 100;\n      const originPercent = (corner & CornerBit.BOTTOM) ? 100 - verticalOffsetPercent : verticalOffsetPercent;\n      verticalAlignment = Math.round(originPercent * 100) / 100 + '%';\n    }\n\n    this.adapter_.setTransformOrigin(`${horizontalAlignment} ${verticalAlignment}`);\n    this.adapter_.setPosition(position);\n    this.adapter_.setMaxHeight(maxMenuHeight ? maxMenuHeight + 'px' : '');\n\n    // Clear measures after positioning is complete.\n    this.measures_ = null;\n  }\n\n  /**\n   * Open the menu.\n   * @param {{focusIndex: ?number}=} options\n   */\n  open({focusIndex = null} = {}) {\n    this.adapter_.saveFocus();\n\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuFoundation.cssClasses.ANIMATING_OPEN);\n    }\n\n    this.animationRequestId_ = requestAnimationFrame(() => {\n      this.dimensions_ = this.adapter_.getInnerDimensions();\n      this.autoPosition_();\n      this.adapter_.addClass(MDCMenuFoundation.cssClasses.OPEN);\n      this.focusOnOpen_(focusIndex);\n      this.adapter_.registerBodyClickHandler(this.documentClickHandler_);\n      if (!this.quickOpen_) {\n        this.openAnimationEndTimerId_ = setTimeout(() => {\n          this.openAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuFoundation.cssClasses.ANIMATING_OPEN);\n        }, numbers.TRANSITION_OPEN_DURATION);\n      }\n    });\n    this.isOpen_ = true;\n  }\n\n  /**\n   * Closes the menu.\n   * @param {Event=} evt\n   */\n  close(evt = null) {\n    const targetIsDisabled = evt ?\n      this.adapter_.getAttributeForEventTarget(evt.target, strings.ARIA_DISABLED_ATTR) === 'true' :\n      false;\n\n    if (targetIsDisabled) {\n      return;\n    }\n\n    this.adapter_.deregisterBodyClickHandler(this.documentClickHandler_);\n\n    if (!this.quickOpen_) {\n      this.adapter_.addClass(MDCMenuFoundation.cssClasses.ANIMATING_CLOSED);\n    }\n\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(MDCMenuFoundation.cssClasses.OPEN);\n      if (!this.quickOpen_) {\n        this.closeAnimationEndTimerId_ = setTimeout(() => {\n          this.closeAnimationEndTimerId_ = 0;\n          this.adapter_.removeClass(MDCMenuFoundation.cssClasses.ANIMATING_CLOSED);\n        }, numbers.TRANSITION_CLOSE_DURATION);\n      }\n    });\n    this.isOpen_ = false;\n    this.adapter_.restoreFocus();\n  }\n\n  /** @return {boolean} */\n  isOpen() {\n    return this.isOpen_;\n  }\n\n  /** @return {number} */\n  getSelectedIndex() {\n    return this.selectedIndex_;\n  }\n\n  /**\n   * @param {number} index Index of the item to set as selected.\n   */\n  setSelectedIndex(index) {\n    if (index === this.selectedIndex_) {\n      return;\n    }\n\n    const prevSelectedIndex = this.selectedIndex_;\n    if (prevSelectedIndex >= 0) {\n      this.adapter_.rmAttrForOptionAtIndex(prevSelectedIndex, 'aria-selected');\n      this.adapter_.rmClassForOptionAtIndex(prevSelectedIndex, cssClasses.SELECTED_LIST_ITEM);\n    }\n\n    this.selectedIndex_ = index >= 0 && index < this.adapter_.getNumberOfItems() ? index : -1;\n    if (this.selectedIndex_ >= 0) {\n      this.adapter_.setAttrForOptionAtIndex(this.selectedIndex_, 'aria-selected', 'true');\n      this.adapter_.addClassForOptionAtIndex(this.selectedIndex_, cssClasses.SELECTED_LIST_ITEM);\n    }\n  }\n}\n\nexport {MDCMenuFoundation, AnchorMargin};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @type {string|undefined} */\nlet storedTransformPropertyName_;\n\n/**\n * Returns the name of the correct transform property to use on the current browser.\n * @param {!Window} globalObj\n * @param {boolean=} forceRefresh\n * @return {string}\n */\nfunction getTransformPropertyName(globalObj, forceRefresh = false) {\n  if (storedTransformPropertyName_ === undefined || forceRefresh) {\n    const el = globalObj.document.createElement('div');\n    const transformPropertyName = ('transform' in el.style ? 'transform' : 'webkitTransform');\n    storedTransformPropertyName_ = transformPropertyName;\n  }\n\n  return storedTransformPropertyName_;\n}\n\n/**\n * Clamps a value between the minimum and the maximum, returning the clamped value.\n * @param {number} value\n * @param {number} min\n * @param {number} max\n * @return {number}\n */\nfunction clamp(value, min = 0, max = 1) {\n  return Math.min(max, Math.max(min, value));\n}\n\n\n/**\n * Returns the easing value to apply at time t, for a given cubic bezier curve.\n * Control points P0 and P3 are assumed to be (0,0) and (1,1), respectively.\n * Parameters are as follows:\n * - time: The current time in the animation, scaled between 0 and 1.\n * - x1: The x value of control point P1.\n * - y1: The y value of control point P1.\n * - x2: The x value of control point P2.\n * - y2: The y value of control point P2.\n * @param {number} time\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @return {number}\n */\nfunction bezierProgress(time, x1, y1, x2, y2) {\n  return getBezierCoordinate_(solvePositionFromXValue_(time, x1, x2), y1, y2);\n}\n\n/**\n * Compute a single coordinate at a position point between 0 and 1.\n * c1 and c2 are the matching coordinate on control points P1 and P2, respectively.\n * Control points P0 and P3 are assumed to be (0,0) and (1,1), respectively.\n * Adapted from https://github.com/google/closure-library/blob/master/closure/goog/math/bezier.js.\n * @param {number} t\n * @param {number} c1\n * @param {number} c2\n * @return {number}\n */\nfunction getBezierCoordinate_(t, c1, c2) {\n  // Special case start and end.\n  if (t === 0 || t === 1) {\n    return t;\n  }\n\n  // Step one - from 4 points to 3\n  let ic0 = t * c1;\n  let ic1 = c1 + t * (c2 - c1);\n  const ic2 = c2 + t * (1 - c2);\n\n  // Step two - from 3 points to 2\n  ic0 += t * (ic1 - ic0);\n  ic1 += t * (ic2 - ic1);\n\n  // Final step - last point\n  return ic0 + t * (ic1 - ic0);\n}\n\n/**\n * Project a point onto the Bezier curve, from a given X. Calculates the position t along the curve.\n * Adapted from https://github.com/google/closure-library/blob/master/closure/goog/math/bezier.js.\n * @param {number} xVal\n * @param {number} x1\n * @param {number} x2\n * @return {number}\n */\nfunction solvePositionFromXValue_(xVal, x1, x2) {\n  const EPSILON = 1e-6;\n  const MAX_ITERATIONS = 8;\n\n  if (xVal <= 0) {\n    return 0;\n  } else if (xVal >= 1) {\n    return 1;\n  }\n\n  // Initial estimate of t using linear interpolation.\n  let t = xVal;\n\n  // Try gradient descent to solve for t. If it works, it is very fast.\n  let tMin = 0;\n  let tMax = 1;\n  let value = 0;\n  for (let i = 0; i < MAX_ITERATIONS; i++) {\n    value = getBezierCoordinate_(t, x1, x2);\n    const derivative = (getBezierCoordinate_(t + EPSILON, x1, x2) - value) / EPSILON;\n    if (Math.abs(value - xVal) < EPSILON) {\n      return t;\n    } else if (Math.abs(derivative) < EPSILON) {\n      break;\n    } else {\n      if (value < xVal) {\n        tMin = t;\n      } else {\n        tMax = t;\n      }\n      t -= (value - xVal) / derivative;\n    }\n  }\n\n  // If the gradient descent got stuck in a local minimum, e.g. because\n  // the derivative was close to 0, use a Dichotomy refinement instead.\n  // We limit the number of interations to 8.\n  for (let i = 0; Math.abs(value - xVal) > EPSILON && i < MAX_ITERATIONS; i++) {\n    if (value < xVal) {\n      tMin = t;\n      t = (t + tMax) / 2;\n    } else {\n      tMax = t;\n      t = (t + tMin) / 2;\n    }\n    value = getBezierCoordinate_(t, x1, x2);\n  }\n  return t;\n}\n\nexport {getTransformPropertyName, clamp, bezierProgress};\n","<template>\n  <div ref=\"root\" class=\"mdc-menu mdc-simple-menu\"\n    :class=\"classes\" :style=\"styles\" \n    tabindex=\"-1\">\n    <ul ref=\"items\" class=\"mdc-simple-menu__items mdc-list\" \n      role=\"menu\" aria-hidden=\"true\">\n      <slot></slot>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport {MDCMenuFoundation} from '@material/menu/foundation'\nimport {getTransformPropertyName} from '@material/menu/util'\nimport {emitCustomEvent} from '../base'\n\nexport default {\n  name: 'mdc-menu',\n  props: {\n    'open-from-top-left': Boolean,\n    'open-from-top-right': Boolean,\n    'open-from-bottom-left': Boolean,\n    'open-from-bottom-right': Boolean\n  },\n  data () {\n    return {\n      classes: {\n        'mdc-simple-menu--open-from-top-left': this.openFromTopLeft,\n        'mdc-simple-menu--open-from-top-right': this.openFromTopRight,\n        'mdc-simple-menu--open-from-bottom-left': this.openFromBottomLeft,\n        'mdc-simple-menu--open-from-bottom-right': this.openFromBottomRight\n      },\n      styles: {},\n      items: []\n    }\n  },\n  methods: {\n    show (options) {\n      this.foundation.open(options)\n    },\n    hide () {\n      this.foundation.close()\n    },\n    isOpen () {\n      return this.foundation ? this.foundation.isOpen() : false\n    }\n  },\n  mounted () {\n    const refreshItems = () => {\n      this.items = [].slice.call(\n        this.$refs.items.querySelectorAll('.mdc-list-item[role]'))\n      this.$emit('update')\n    }\n    this.slotObserver = new MutationObserver(() => refreshItems())\n    this.slotObserver.observe(this.$el, { childList: true, subtree: true })\n\n    this._previousFocus = undefined\n\n    this.foundation = new MDCMenuFoundation({\n      addClass: (className) => this.$set(this.classes, className, true),\n      removeClass: (className) => this.$delete(this.classes, className),\n      hasClass: (className) => this.$refs.root.classList.contains(className),\n      hasNecessaryDom: () => Boolean(this.$refs.items),\n      getAttributeForEventTarget: (target, attributeName) =>\n        target.getAttribute(attributeName),\n      getInnerDimensions: () => ({\n        width: this.$refs.items.offsetWidth,\n        height: this.$refs.items.offsetHeight\n      }),\n      hasAnchor: () => this.$refs.root.parentElement &&\n        this.$refs.root.parentElement.classList.contains('mdc-menu-anchor'),\n      getAnchorDimensions: () =>\n        this.$refs.root.parentElement.getBoundingClientRect(),\n      getWindowDimensions: () => ({\n        width: window.innerWidth,\n        height: window.innerHeight\n      }),\n      getNumberOfItems: () => this.items.length,\n      registerInteractionHandler: (type, handler) =>\n        this.$refs.root.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) =>\n        this.$refs.root.removeEventListener(type, handler),\n      registerBodyClickHandler: (handler) =>\n        document.body.addEventListener('click', handler),\n      deregisterBodyClickHandler: (handler) =>\n        document.body.removeEventListener('click', handler),\n      getIndexForEventTarget: (target) => this.items.indexOf(target),\n      notifySelected: (evtData) => {\n        const evt = {\n          index: evtData.index,\n          item: this.items[evtData.index]\n        }\n        this.$emit('select', evt)\n        emitCustomEvent(this.$el,\n          MDCMenuFoundation.strings.SELECTED_EVENT,\n          evt)\n      },\n      notifyCancel: () => {\n        this.$emit('cancel')\n        emitCustomEvent(this.$el,\n          MDCMenuFoundation.strings.CANCEL_EVENT,\n          {})\n      },\n      saveFocus: () => { this._previousFocus = document.activeElement },\n      restoreFocus: () => {\n        if (this._previousFocus) {\n          this._previousFocus.focus()\n        }\n      },\n      isFocused: () => document.activeElement === this.$refs.root,\n      focus: () => this.$refs.root.focus(),\n      getFocusedItemIndex: () => this.items.indexOf(document.activeElement),\n      focusItemAtIndex: (index) => this.items[index].focus(),\n      isRtl: () => getComputedStyle(this.$refs.root)\n        .getPropertyValue('direction') === 'rtl',\n      setTransformOrigin: (origin) => {\n        this.$set(this.styles, `${getTransformPropertyName(window)}-origin`, origin)\n      },\n      setPosition: (position) => {\n        this.$set(this.styles,'left', position.left)\n        this.$set(this.styles,'right', position.right)\n        this.$set(this.styles,'top', position.top)\n        this.$set(this.styles,'bottom', position.bottom)\n      },\n      setMaxHeight: (height) => {\n        this.$set(this.styles,'max-height', height)\n      },\n      setAttrForOptionAtIndex: (index, attr, value) => {\n        this.items[index].setAttribute(attr, value)\n      },\n      rmAttrForOptionAtIndex: (index, attr) => {\n        this.items[index].removeAttribute(attr)\n      },\n      addClassForOptionAtIndex: (index, className) => {\n        this.items[index].classList.add(className)\n      },\n      rmClassForOptionAtIndex: (index, className) => {\n        this.items[index].classList.remove(className)\n      },\n    })\n\n    refreshItems()\n    this.foundation.init()\n  },\n  beforeDestroy () {\n    this._previousFocus = null\n    this.slotObserver.disconnect()\n    this.foundation.destroy()\n  }\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcMenu from './mdc-menu.vue'\nimport mdcMenuItem from './mdc-menu-item.vue'\nimport mdcMenuDivider from './mdc-menu-divider.vue'\nimport mdcMenuAnchor from './mdc-menu-anchor.vue'\n\nexport {\n  mdcMenu,\n  mdcMenuItem,\n  mdcMenuDivider,\n  mdcMenuAnchor\n}\n\nexport default BasePlugin({\n  mdcMenu,\n  mdcMenuItem,\n  mdcMenuDivider,\n  mdcMenuAnchor\n})\n","<template>\n  <li class=\"mdc-menu-item mdc-list-item\" role=\"menuitem\" \n    :tabindex=\"disabled?'-1':'0'\"\n    :aria-disabled=\"disabled\"\n    >\n    <slot></slot>\n  </li>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-item',\n  props: {\n    disabled: Boolean\n  }\n}\n</script>\n","<template>\n  <li role=\"separator\" class=\"mdc-menu-divider mdc-list-divider\"></li>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-divider',\n}\n</script>\n","<template>\n<div class=\"mdc-menu-anchor\">\n  <slot>\n  </slot>\n</div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-anchor',\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  NATIVE_CONTROL_SELECTOR: '.mdc-radio__native-control',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-radio',\n  DISABLED: 'mdc-radio--disabled',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Radio. Provides an interface for managing\n * - classes\n * - dom\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRadioAdapter {\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @return {!MDCSelectionControlState} */\n  getNativeControl() {}\n}\n\nexport default MDCRadioAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\n/* eslint-disable no-unused-vars */\nimport {MDCSelectionControlState} from '@material/selection-control/index';\nimport MDCRadioAdapter from './adapter';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCRadioAdapter>}\n */\nclass MDCRadioFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return {!MDCRadioAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCRadioAdapter} */ ({\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      getNativeControl: () => /* !MDCSelectionControlState */ {},\n    });\n  }\n\n  /** @return {boolean} */\n  isChecked() {\n    return this.getNativeControl_().checked;\n  }\n\n  /** @param {boolean} checked */\n  setChecked(checked) {\n    this.getNativeControl_().checked = checked;\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.getNativeControl_().disabled;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    const {DISABLED} = MDCRadioFoundation.cssClasses;\n    this.getNativeControl_().disabled = disabled;\n    if (disabled) {\n      this.adapter_.addClass(DISABLED);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n  }\n\n  /** @return {?string} */\n  getValue() {\n    return this.getNativeControl_().value;\n  }\n\n  /** @param {?string} value */\n  setValue(value) {\n    this.getNativeControl_().value = value;\n  }\n\n  /**\n   * @return {!MDCSelectionControlState}\n   * @private\n   */\n  getNativeControl_() {\n    return this.adapter_.getNativeControl() || {\n      checked: false,\n      disabled: false,\n      value: null,\n    };\n  }\n}\n\nexport default MDCRadioFoundation;\n","import {BasePlugin} from '../base'\nimport mdcRadio from './mdc-radio.vue'\n\nexport {\n  mdcRadio\n}\n\nexport default BasePlugin({\n  mdcRadio\n})\n","<template>\n<div :class=\"formFieldClasses\" class=\"mdc-radio-wrapper\">\n  <div ref=\"root\" class=\"mdc-radio\" :class=\"classes\" :style=\"styles\">\n    <input type=\"radio\" ref=\"control\" :id=\"_uid\" :name=\"name\" \n      class=\"mdc-radio__native-control\" @change=\"sync\">\n  \n    <div ref=\"label\" class=\"mdc-radio__background\">\n      <div class=\"mdc-radio__outer-circle\"></div>\n      <div class=\"mdc-radio__inner-circle\"></div>\n    </div>\n  </div>\n  <label ref=\"label\" :for=\"_uid\"><slot>{{label}}</slot></label>\n</div>\n</template>\n\n<script>\nimport MDCRadioFoundation from '@material/radio/foundation'\nimport MDCFormFieldFoundation from '@material/form-field/foundation'\nimport {DispatchFocusMixin} from '../base'\nimport {RippleBase} from '../ripple'\n\n\nexport default {\n  name: 'mdc-radio',\n  mixins: [DispatchFocusMixin],\n  model: {\n    prop: 'picked',\n    event: 'change'\n  },\n  props: {\n    'name': {type: String, required: true},\n    'value': String,\n    'picked': String,\n    'checked': Boolean,\n    'label': String,\n    'align-end': Boolean,\n    'disabled': Boolean,\n  },\n  data () {\n    return {\n      classes: {},\n      styles: {},\n      formFieldClasses: {\n        'mdc-form-field': this.label,\n        'mdc-form-field--align-end': this.label && this.alignEnd\n      }\n    }\n  },\n  mounted () {\n    // add foundation\n    this.foundation = new MDCRadioFoundation({\n      addClass: (className) => this.$set(this.classes, className, true),\n      removeClass: (className) => this.$delete(this.classes, className),\n      getNativeControl: () => this.$refs.control\n    })\n\n    // add ripple\n    this.ripple = new RippleBase(this, {\n      isUnbounded: () => true,\n      isSurfaceActive: () => false,\n      registerInteractionHandler: (evt, handler) => {\n        this.$refs.control.addEventListener(evt, handler)\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        this.$refs.control.removeEventListener(evt, handler)\n      },\n      computeBoundingRect: () => {\n        return this.$refs.root.getBoundingClientRect()\n      }\n    })\n\n    this.formField = new MDCFormFieldFoundation({\n      registerInteractionHandler: (type, handler) => {\n        this.$refs.label.addEventListener(type, handler)\n      },\n      deregisterInteractionHandler: (type, handler) => {\n        this.$refs.label.removeEventListener(type, handler)\n      },\n      activateInputRipple: () => {\n        this.ripple && this.ripple.activate()\n      },\n      deactivateInputRipple: () => {\n        this.ripple && this.ripple.deactivate()\n      },\n    });\n\n    this.foundation.init()\n    this.ripple.init()\n    this.formField.init()\n\n    this.foundation.setValue(this.value ? this.value : this.label)\n    this.foundation.setDisabled(this.disabled)\n    this.foundation.setChecked(this.checked || this.picked == this.foundation.getValue())\n\n    // refresh model\n    this.checked && this.sync()\n  },\n  beforeDestroy () {\n    this.formField.destroy()\n    this.ripple.destroy()\n    this.foundation.destroy()\n  },\n  watch: {\n    disabled (value) {\n      this.foundation.setDisabled(value)\n    }\n  },\n  methods: {\n    isChecked () {\n      return this.foundation.isChecked()\n    },\n    sync () {\n      this.$emit('change', this.foundation.getValue())\n    }\n  }\n}\n</script>\n","<template>\n  <select ref=\"root\" class=\"mdc-select mdc-native-select\" \n    v-model=\"selected\" :disabled=\"disabled\"\n    @change=\"onChange\"\n  >\n    <option disabled value=\"\" v-if=\"label\">{{ label }}</option>\n    <slot></slot>\n  </select>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-native-select',\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    value: [String, Array],\n    disabled: Boolean,\n    label: String\n  },\n  data () {\n    return {\n      selected: this.value\n    }\n  },\n  methods: {\n    onChange () {\n      this.$emit('change', this.selected)\n    }\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const cssClasses = {\n  BOTTOM_LINE: 'mdc-select__bottom-line',\n  BOTTOM_LINE_ACTIVE: 'mdc-select__bottom-line--active',\n  BOX: 'mdc-select--box',\n  DISABLED: 'mdc-select--disabled',\n  OPEN: 'mdc-select--open',\n  ROOT: 'mdc-select',\n  SCROLL_LOCK: 'mdc-select-scroll-lock',\n};\n\nexport const strings = {\n  CHANGE_EVENT: 'MDCSelect:change',\n  BOTTOM_LINE_SELECTOR: '.mdc-select__bottom-line',\n  LABEL_SELECTOR: '.mdc-select__label',\n  MENU_SELECTOR: '.mdc-select__menu',\n  SURFACE_SELECTOR: '.mdc-select__surface',\n  SELECTED_TEXT_SELECTOR: '.mdc-select__selected-text',\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, strings} from './constants';\nimport {MDCMenuFoundation} from '@material/menu/index';\n\nconst OPENER_KEYS = [\n  {key: 'ArrowUp', keyCode: 38, forType: 'keydown'},\n  {key: 'ArrowDown', keyCode: 40, forType: 'keydown'},\n  {key: 'Space', keyCode: 32, forType: 'keyup'},\n];\n\nexport default class MDCSelectFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      floatLabel: (/* value: boolean */) => {},\n      addClassToBottomLine: (/* className: string */) => {},\n      removeClassFromBottomLine: (/* className: string */) => {},\n      setBottomLineAttr: (/* attr: string, value: string */) => {},\n      addBodyClass: (/* className: string */) => {},\n      removeBodyClass: (/* className: string */) => {},\n      setAttr: (/* attr: string, value: string */) => {},\n      rmAttr: (/* attr: string */) => {},\n      computeBoundingRect: () => /* {left: number, top: number} */ ({left: 0, top: 0}),\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      focus: () => {},\n      makeTabbable: () => {},\n      makeUntabbable: () => {},\n      getComputedStyleValue: (/* propertyName: string */) => /* string */ '',\n      setStyle: (/* propertyName: string, value: string */) => {},\n      create2dRenderingContext: () => /* {font: string, measureText: (string) => {width: number}} */ ({\n        font: '',\n        measureText: () => ({width: 0}),\n      }),\n      setMenuElStyle: (/* propertyName: string, value: string */) => {},\n      setMenuElAttr: (/* attr: string, value: string */) => {},\n      rmMenuElAttr: (/* attr: string */) => {},\n      getMenuElOffsetHeight: () => /* number */ 0,\n      openMenu: (/* focusIndex: number */) => {},\n      isMenuOpen: () => /* boolean */ false,\n      setSelectedTextContent: (/* textContent: string */) => {},\n      getNumberOfOptions: () => /* number */ 0,\n      getTextForOptionAtIndex: (/* index: number */) => /* string */ '',\n      getValueForOptionAtIndex: (/* index: number */) => /* string */ '',\n      setAttrForOptionAtIndex: (/* index: number, attr: string, value: string */) => {},\n      rmAttrForOptionAtIndex: (/* index: number, attr: string */) => {},\n      getOffsetTopForOptionAtIndex: (/* index: number */) => /* number */ 0,\n      registerMenuInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterMenuInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      notifyChange: () => {},\n      getWindowInnerHeight: () => /* number */ 0,\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSelectFoundation.defaultAdapter, adapter));\n    this.ctx_ = null;\n    this.selectedIndex_ = -1;\n    this.disabled_ = false;\n    this.isFocused_ = false;\n\n    /** @private {number} */\n    this.animationRequestId_ = 0;\n\n    this.displayHandler_ = (evt) => {\n      evt.preventDefault();\n      if (!this.adapter_.isMenuOpen()) {\n        this.open_();\n      }\n    };\n    this.displayViaKeyboardHandler_ = (evt) => this.handleDisplayViaKeyboard_(evt);\n    this.selectionHandler_ = ({detail}) => {\n      const {index} = detail;\n\n      if (index !== this.selectedIndex_) {\n        this.setSelectedIndex(index);\n        this.adapter_.notifyChange();\n      }\n      this.close_();\n    };\n    this.cancelHandler_ = () => {\n      this.close_();\n      if (this.selectedIndex_ === -1) {\n        this.adapter_.floatLabel(false);\n      }\n    };\n  }\n\n  init() {\n    this.ctx_ = this.adapter_.create2dRenderingContext();\n    this.adapter_.registerInteractionHandler('click', this.displayHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.displayViaKeyboardHandler_);\n    this.adapter_.registerInteractionHandler('keyup', this.displayViaKeyboardHandler_);\n    this.adapter_.registerMenuInteractionHandler(\n      MDCMenuFoundation.strings.SELECTED_EVENT, this.selectionHandler_);\n    this.adapter_.registerMenuInteractionHandler(\n      MDCMenuFoundation.strings.CANCEL_EVENT, this.cancelHandler_);\n    this.resize();\n  }\n\n  destroy() {\n    // Drop reference to context object to prevent potential leaks\n    this.ctx_ = null;\n    cancelAnimationFrame(this.animationRequestId_);\n    this.adapter_.deregisterInteractionHandler('click', this.displayHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.displayViaKeyboardHandler_);\n    this.adapter_.deregisterInteractionHandler('keyup', this.displayViaKeyboardHandler_);\n    this.adapter_.deregisterMenuInteractionHandler(\n      MDCMenuFoundation.strings.SELECTED_EVENT, this.selectionHandler_);\n    this.adapter_.deregisterMenuInteractionHandler(\n      MDCMenuFoundation.strings.CANCEL_EVENT, this.cancelHandler_);\n  }\n\n  getValue() {\n    return this.selectedIndex_ >= 0 ? this.adapter_.getValueForOptionAtIndex(this.selectedIndex_) : '';\n  }\n\n  getSelectedIndex() {\n    return this.selectedIndex_;\n  }\n\n  setSelectedIndex(index) {\n    const prevSelectedIndex = this.selectedIndex_;\n    if (prevSelectedIndex >= 0) {\n      this.adapter_.rmAttrForOptionAtIndex(this.selectedIndex_, 'aria-selected');\n    }\n\n    this.selectedIndex_ = index >= 0 && index < this.adapter_.getNumberOfOptions() ? index : -1;\n    let selectedTextContent = '';\n    if (this.selectedIndex_ >= 0) {\n      selectedTextContent = this.adapter_.getTextForOptionAtIndex(this.selectedIndex_).trim();\n      this.adapter_.setAttrForOptionAtIndex(this.selectedIndex_, 'aria-selected', 'true');\n    }\n    this.adapter_.setSelectedTextContent(selectedTextContent);\n  }\n\n  isDisabled() {\n    return this.disabled_;\n  }\n\n  setDisabled(disabled) {\n    const {DISABLED} = MDCSelectFoundation.cssClasses;\n    this.disabled_ = disabled;\n    if (this.disabled_) {\n      this.adapter_.addClass(DISABLED);\n      this.adapter_.setAttr('aria-disabled', 'true');\n      this.adapter_.makeUntabbable();\n    } else {\n      this.adapter_.removeClass(DISABLED);\n      this.adapter_.rmAttr('aria-disabled');\n      this.adapter_.makeTabbable();\n    }\n  }\n\n  resize() {\n    const font = this.adapter_.getComputedStyleValue('font');\n    const letterSpacing = parseFloat(this.adapter_.getComputedStyleValue('letter-spacing'));\n\n    if (font) {\n      this.ctx_.font = font;\n    } else {\n      const primaryFontFamily = this.adapter_.getComputedStyleValue('font-family').split(',')[0];\n      const fontSize = this.adapter_.getComputedStyleValue('font-size');\n      this.ctx_.font = `${fontSize} ${primaryFontFamily}`;\n    }\n\n    let maxTextLength = 0;\n\n    for (let i = 0, l = this.adapter_.getNumberOfOptions(); i < l; i++) {\n      const surfacePaddingRight = parseInt(this.adapter_.getComputedStyleValue('padding-right'), 10);\n      const surfacePaddingLeft = parseInt(this.adapter_.getComputedStyleValue('padding-left'), 10);\n      const selectBoxAddedPadding = surfacePaddingRight + surfacePaddingLeft;\n      const txt = this.adapter_.getTextForOptionAtIndex(i).trim();\n      const {width} = this.ctx_.measureText(txt);\n      const addedSpace = letterSpacing * txt.length;\n\n      maxTextLength =\n        Math.max(maxTextLength, Math.ceil(width + addedSpace + selectBoxAddedPadding));\n    }\n\n    this.adapter_.setStyle('width', `${maxTextLength}px`);\n  }\n\n  open_() {\n    this.disableScroll_();\n    const {OPEN} = MDCSelectFoundation.cssClasses;\n    const focusIndex = this.selectedIndex_ < 0 ? 0 : this.selectedIndex_;\n\n    this.setMenuStylesForOpenAtIndex_(focusIndex);\n    this.adapter_.floatLabel(true);\n    this.adapter_.addClassToBottomLine(cssClasses.BOTTOM_LINE_ACTIVE);\n    this.adapter_.addClass(OPEN);\n    this.animationRequestId_ = requestAnimationFrame(() => {\n      this.adapter_.openMenu(focusIndex);\n      this.isFocused_ = true;\n    });\n  }\n\n  setMenuStylesForOpenAtIndex_(index) {\n    const innerHeight = this.adapter_.getWindowInnerHeight();\n    const {left, top} = this.adapter_.computeBoundingRect();\n\n    this.adapter_.setMenuElAttr('aria-hidden', 'true');\n    this.adapter_.setMenuElStyle('display', 'block');\n    const menuHeight = this.adapter_.getMenuElOffsetHeight();\n    const itemOffsetTop = this.adapter_.getOffsetTopForOptionAtIndex(index);\n    this.adapter_.setMenuElStyle('display', '');\n    this.adapter_.rmMenuElAttr('aria-hidden');\n\n    let adjustedTop = top - itemOffsetTop;\n    const overflowsTop = adjustedTop < 0;\n    const overflowsBottom = adjustedTop + menuHeight > innerHeight;\n    if (overflowsTop) {\n      adjustedTop = 0;\n    } else if (overflowsBottom) {\n      adjustedTop = Math.max(0, innerHeight - menuHeight);\n    };\n\n    this.adapter_.setMenuElStyle('left', `${left}px`);\n    this.adapter_.setMenuElStyle('top', `${adjustedTop}px`);\n    this.adapter_.setMenuElStyle('transform-origin', `center ${itemOffsetTop}px`);\n  }\n\n  close_() {\n    const {OPEN} = MDCSelectFoundation.cssClasses;\n    this.adapter_.removeClass(OPEN);\n    this.adapter_.removeClassFromBottomLine(cssClasses.BOTTOM_LINE_ACTIVE);\n    this.adapter_.focus();\n    this.enableScroll_();\n  }\n\n  handleDisplayViaKeyboard_(evt) {\n    // We use a hard-coded 2 instead of Event.AT_TARGET to avoid having to reference a browser\n    // global.\n    const EVENT_PHASE_AT_TARGET = 2;\n    if (evt.eventPhase !== EVENT_PHASE_AT_TARGET) {\n      return;\n    }\n\n    // Prevent pressing space down from scrolling the page\n    const isSpaceDown = evt.type === 'keydown' && (evt.key === 'Space' || evt.keyCode === 32);\n    if (isSpaceDown) {\n      evt.preventDefault();\n    }\n\n    const isOpenerKey = OPENER_KEYS.some(({key, keyCode, forType}) => {\n      return evt.type === forType && (evt.key === key || evt.keyCode === keyCode);\n    });\n\n    if (isOpenerKey) {\n      this.displayHandler_(evt);\n    }\n  }\n\n  disableScroll_() {\n    this.adapter_.addBodyClass(cssClasses.SCROLL_LOCK);\n  }\n\n  enableScroll_() {\n    this.adapter_.removeBodyClass(cssClasses.SCROLL_LOCK);\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCComponent from '@material/base/component';\nimport {getTransformPropertyName} from './util';\nimport {MDCMenuFoundation, AnchorMargin} from './foundation';\nimport {Corner, CornerBit} from './constants';\n\n/**\n * @extends MDCComponent<!MDCMenuFoundation>\n */\nclass MDCMenu extends MDCComponent {\n  /** @param {...?} args */\n  constructor(...args) {\n    super(...args);\n    /** @private {!Element} */\n    this.previousFocus_;\n  }\n\n  /**\n   * @param {!Element} root\n   * @return {!MDCMenu}\n   */\n  static attachTo(root) {\n    return new MDCMenu(root);\n  }\n\n  /** @return {boolean} */\n  get open() {\n    return this.foundation_.isOpen();\n  }\n\n  /** @param {boolean} value */\n  set open(value) {\n    if (value) {\n      this.foundation_.open();\n    } else {\n      this.foundation_.close();\n    }\n  }\n\n  /** @param {{focusIndex: ?number}=} options */\n  show({focusIndex = null} = {}) {\n    this.foundation_.open({focusIndex: focusIndex});\n  }\n\n  hide() {\n    this.foundation_.close();\n  }\n\n  /**\n   * @param {Corner} corner Default anchor corner alignment of top-left\n   *     menu corner.\n   */\n  setAnchorCorner(corner) {\n    this.foundation_.setAnchorCorner(corner);\n  }\n\n  /**\n   * @param {AnchorMargin} margin\n   */\n  setAnchorMargin(margin) {\n    this.foundation_.setAnchorMargin(margin);\n  }\n\n  /**\n   * Return the item container element inside the component.\n   * @return {?Element}\n   */\n  get itemsContainer_() {\n    return this.root_.querySelector(MDCMenuFoundation.strings.ITEMS_SELECTOR);\n  }\n\n  /**\n   * Return the items within the menu. Note that this only contains the set of elements within\n   * the items container that are proper list items, and not supplemental / presentational DOM\n   * elements.\n   * @return {!Array<!Element>}\n   */\n  get items() {\n    const {itemsContainer_: itemsContainer} = this;\n    return [].slice.call(itemsContainer.querySelectorAll('.mdc-list-item[role]'));\n  }\n\n  /**\n   * Return the item within the menu that is selected.\n   * @param {number} index\n   * @return {?Element}\n   */\n  getOptionByIndex(index) {\n    const items = this.items;\n\n    if (index < items.length) {\n      return this.items[index];\n    } else {\n      return null;\n    }\n  }\n\n  /** @param {number} index */\n  set selectedItemIndex(index) {\n    this.foundation_.setSelectedIndex(index);\n  }\n\n  /** @return {number} */\n  get selectedItemIndex() {\n    return this.foundation_.getSelectedIndex();\n  }\n\n  /** @param {!boolean} rememberSelection */\n  set rememberSelection(rememberSelection) {\n    this.foundation_.setRememberSelection(rememberSelection);\n  }\n\n  /** @param {boolean} quickOpen */\n  set quickOpen(quickOpen) {\n    this.foundation_.setQuickOpen(quickOpen);\n  }\n\n  /** @return {!MDCMenuFoundation} */\n  getDefaultFoundation() {\n    return new MDCMenuFoundation({\n      addClass: (className) => this.root_.classList.add(className),\n      removeClass: (className) => this.root_.classList.remove(className),\n      hasClass: (className) => this.root_.classList.contains(className),\n      hasNecessaryDom: () => Boolean(this.itemsContainer_),\n      getAttributeForEventTarget: (target, attributeName) => target.getAttribute(attributeName),\n      getInnerDimensions: () => {\n        const {itemsContainer_: itemsContainer} = this;\n        return {width: itemsContainer.offsetWidth, height: itemsContainer.offsetHeight};\n      },\n      hasAnchor: () => this.root_.parentElement && this.root_.parentElement.classList.contains('mdc-menu-anchor'),\n      getAnchorDimensions: () => this.root_.parentElement.getBoundingClientRect(),\n      getWindowDimensions: () => {\n        return {width: window.innerWidth, height: window.innerHeight};\n      },\n      getNumberOfItems: () => this.items.length,\n      registerInteractionHandler: (type, handler) => this.root_.addEventListener(type, handler),\n      deregisterInteractionHandler: (type, handler) => this.root_.removeEventListener(type, handler),\n      registerBodyClickHandler: (handler) => document.body.addEventListener('click', handler),\n      deregisterBodyClickHandler: (handler) => document.body.removeEventListener('click', handler),\n      getIndexForEventTarget: (target) => this.items.indexOf(target),\n      notifySelected: (evtData) => this.emit(MDCMenuFoundation.strings.SELECTED_EVENT, {\n        index: evtData.index,\n        item: this.items[evtData.index],\n      }),\n      notifyCancel: () => this.emit(MDCMenuFoundation.strings.CANCEL_EVENT, {}),\n      saveFocus: () => {\n        this.previousFocus_ = document.activeElement;\n      },\n      restoreFocus: () => {\n        if (this.previousFocus_) {\n          this.previousFocus_.focus();\n        }\n      },\n      isFocused: () => document.activeElement === this.root_,\n      focus: () => this.root_.focus(),\n      getFocusedItemIndex: () => this.items.indexOf(document.activeElement),\n      focusItemAtIndex: (index) => this.items[index].focus(),\n      isRtl: () => getComputedStyle(this.root_).getPropertyValue('direction') === 'rtl',\n      setTransformOrigin: (origin) => {\n        this.root_.style[`${getTransformPropertyName(window)}-origin`] = origin;\n      },\n      setPosition: (position) => {\n        this.root_.style.left = 'left' in position ? position.left : null;\n        this.root_.style.right = 'right' in position ? position.right : null;\n        this.root_.style.top = 'top' in position ? position.top : null;\n        this.root_.style.bottom = 'bottom' in position ? position.bottom : null;\n      },\n      setMaxHeight: (height) => {\n        this.root_.style.maxHeight = height;\n      },\n      setAttrForOptionAtIndex: (index, attr, value) => this.items[index].setAttribute(attr, value),\n      rmAttrForOptionAtIndex: (index, attr) => this.items[index].removeAttribute(attr),\n      addClassForOptionAtIndex: (index, className) => this.items[index].classList.add(className),\n      rmClassForOptionAtIndex: (index, className) => this.items[index].classList.remove(className),\n    });\n  }\n}\n\nexport {MDCMenuFoundation, MDCMenu, AnchorMargin, Corner, CornerBit};\n","export const cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-select__label--float-above',\n};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Select Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Select label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCSelectLabelAdapter {\n  /**\n   * Adds a class to the label element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the label element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n}\n\nexport default MDCSelectLabelAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCSelectLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCSelectLabelAdapter>}\n * @final\n */\nclass MDCSelectLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCSelectLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCSelectLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCSelectLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCSelectLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSelectLabelFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Styles the label to float or defloat as necessary.\n   * @param {string} value The value of the input.\n   * @param {boolean} isFocused Whether the input is focused.\n   * @param {boolean} isBadInput The input's `validity.badInput` value.\n   */\n  styleFloat(value) {\n    const {LABEL_FLOAT_ABOVE} = MDCSelectLabelFoundation.cssClasses;\n    if (!!value) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n    }\n  }\n}\n\nexport default MDCSelectLabelFoundation;\n","<template>\r\n  <div class=\"mdc-select mdc-menu-select\" \r\n    role=\"listbox\" \r\n    :class=\"classes\">\r\n    <div ref=\"surface\" class=\"mdc-select__surface\"\r\n      :style=\"surfaceStyles\" :tabindex=\"tabIndex\">\r\n        <div ref=\"label\" class=\"mdc-select__label\"\r\n          :class=\"labelClasses\"\r\n        >{{label}}</div>\r\n        <div ref=\"selectedContent\" class=\"mdc-select__selected-text\" \r\n        >{{selectedTextContent}}</div>\r\n        <div ref=\"bottomLine\" class=\"mdc-select__bottom-line\"\r\n          :class=\"bottomLineClasses\"></div>\r\n    </div>\r\n    <mdc-menu ref=\"menu\" \r\n      class=\"mdc-select__menu\"\r\n      @update=\"refreshIndex\">\r\n      <slot></slot>\r\n    </mdc-menu>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mdcMenu } from '../menu'\r\nimport MDCSelectFoundation from '@material/select/foundation'\r\nimport MDCSelectLabelFoundation from '@material/select/label/foundation'\r\n\r\nexport default {\r\n  name: 'mdc-menu-select',\r\n  model: {\r\n    prop: 'value',\r\n    event: 'change'\r\n  },\r\n  props: {\r\n    multiple: Boolean,\r\n    value: [String, Array],\r\n    disabled: Boolean,\r\n    label: String, \r\n    box: Boolean\r\n  },\r\n  data () {\r\n    return {\r\n      classes: {\r\n        'mdc-select--box': this.box\r\n      },\r\n      labelClasses: {},\r\n      bottomLineClasses: {},\r\n      surfaceStyles: {},\r\n      tabIndex: 0,\r\n      selectedTextContent: ''\r\n    }\r\n  },\r\n  components: {\r\n    'mdc-menu': mdcMenu \r\n  },\r\n  watch: {\r\n    disabled (value) {\r\n      this.foundation && this.foundation.setDisabled(value)\r\n    },\r\n    value () {\r\n      this.refreshIndex()\r\n    },\r\n    box () {\r\n      this.$set(this.classes, 'mdc-select--box' , this.box)\r\n    }\r\n  },\r\n  methods: {\r\n    refreshIndex () {\r\n      if (this.foundation) {\r\n        let options = this.$refs.menu.items\r\n        for (let i = 0; i < options.length; i++) {\r\n          let optionValue = options[i].getAttribute('data-value') || options[i].textContent.trim()\r\n          if (this.value == optionValue) {\r\n            this.foundation.setSelectedIndex(i)\r\n            //TODO: MDCFIX force float above if value is valid\r\n            this.$set(this.labelClasses, 'mdc-select__label--float-above', true);\r\n            return;\r\n          }\r\n        }\r\n        //TODO: MDCFIX force float above if value is valid\r\n        this.foundation.setSelectedIndex(-1)\r\n        this.$set(this.labelClasses, 'mdc-select__label--float-above', false);\r\n        this.$emit('change', this.foundation.getValue()) // TODO: MDCFIX\r\n      }\r\n    },\r\n  },\r\n  mounted () {\r\n\r\n    this.labelFoundation = new MDCSelectLabelFoundation({\r\n      addClass: (className) =>\r\n        this.$set(this.labelClasses, className, true),\r\n      removeClass: (className) =>\r\n        this.$delete(this.labelClasses, className),\r\n    })\r\n\r\n    this.foundation  = new MDCSelectFoundation({\r\n      addClass: (className) =>\r\n        this.$set(this.classes, className, true),\r\n      removeClass: (className) =>\r\n        this.$delete(this.classes, className),\r\n      floatLabel: (value) => {\r\n        this.labelFoundation.styleFloat(value) \r\n      },\r\n      addClassToBottomLine: (className) => \r\n        this.$set(this.bottomLineClasses, className, true),\r\n      removeClassFromBottomLine: (className) =>\r\n        this.$delete(this.bottomLineClasses, className),\r\n      setBottomLineAttr: (attr, value) => \r\n        this.$refs.bottomLine.setAttribute(attr, value),\r\n      setAttr: (attr, value) =>\r\n        this.$el.setAttribute(attr, value),\r\n      rmAttr: (attr, value) =>\r\n        this.$el.removeAttribute(attr, value),\r\n      computeBoundingRect: () =>\r\n        this.$refs.surface.getBoundingClientRect(),\r\n      registerInteractionHandler: (type, handler) =>\r\n        this.$refs.surface.addEventListener(type, handler),\r\n      deregisterInteractionHandler: (type, handler) =>\r\n        this.$refs.surface.removeEventListener(type, handler),\r\n      focus: () =>\r\n        this.$refs.surface.focus(),\r\n      makeTabbable: () => {\r\n        this.tabIndex = 0\r\n      },\r\n      makeUntabbable: () => {\r\n        this.tabIndex = -1\r\n      },\r\n      getComputedStyleValue: (prop) =>\r\n        window.getComputedStyle(this.$refs.surface).getPropertyValue(prop),\r\n      setStyle: (propertyName, value) =>\r\n        this.$set(this.surfaceStyles, propertyName, value),\r\n      create2dRenderingContext: () =>\r\n        document.createElement('canvas').getContext('2d'),\r\n      setMenuElStyle: (propertyName, value) =>\r\n        this.$refs.menu.$el.style[propertyName] = value,\r\n      setMenuElAttr: (attr, value) =>\r\n        this.$refs.menu.$el.setAttribute(attr, value),\r\n      rmMenuElAttr: (attr) =>\r\n        this.$refs.menu.$el.removeAttribute(attr),\r\n      getMenuElOffsetHeight: () =>\r\n        this.$refs.menu.$el.offsetHeight,\r\n      openMenu: (focusIndex) =>\r\n        this.$refs.menu.show({focusIndex}),\r\n      isMenuOpen: () =>\r\n        this.$refs.menu.isOpen(),\r\n      setSelectedTextContent: (selectedTextContent) => {\r\n        this.selectedTextContent = selectedTextContent\r\n      },\r\n      getNumberOfOptions: () =>\r\n        this.$refs.menu.items.length,\r\n      getTextForOptionAtIndex: (index) =>\r\n        this.$refs.menu.items[index].textContent.trim(),\r\n      getValueForOptionAtIndex: (index) => {\r\n        return this.$refs.menu.items[index].getAttribute('data-value') \r\n          || this.$refs.menu.items[index].textContent.trim()\r\n      },\r\n      setAttrForOptionAtIndex: (index, attr, value) =>\r\n        this.$refs.menu.items[index].setAttribute(attr, value),\r\n      rmAttrForOptionAtIndex: (index, attr) =>\r\n        this.$refs.menu.items[index].removeAttribute(attr),\r\n      getOffsetTopForOptionAtIndex: (index) =>\r\n        this.$refs.menu.items[index].offsetTop,\r\n      registerMenuInteractionHandler: (type, handler) =>\r\n        this.$refs.menu.$el.addEventListener(type, handler),\r\n      deregisterMenuInteractionHandler: (type, handler) =>\r\n        this.$refs.menu.$el.removeEventListener(type, handler),\r\n      notifyChange: () => {\r\n        this.$emit('change', this.foundation.getValue())\r\n      },\r\n      getWindowInnerHeight: () => window.innerHeight,\r\n      addBodyClass: (className) => document.body.classList.add(className),\r\n      removeBodyClass: (className) => document.body.classList.remove(className),\r\n    })\r\n\r\n\r\n    //TODO: MDCFIX\r\n    let foundation = this.foundation\r\n    foundation.resize = () => {\r\n      \r\n      const font = foundation.adapter_.getComputedStyleValue('font');\r\n      const letterSpacing = parseFloat(foundation.adapter_.getComputedStyleValue('letter-spacing'));\r\n\r\n      if (font) {\r\n        foundation.ctx_.font = font;\r\n      } else {\r\n        const primaryFontFamily = foundation.adapter_.getComputedStyleValue('font-family').split(',')[0];\r\n        const fontSize = foundation.adapter_.getComputedStyleValue('font-size');\r\n        foundation.ctx_.font = `${fontSize} ${primaryFontFamily}`;\r\n      }\r\n\r\n      let maxTextLength = 0;\r\n\r\n      const surfacePaddingRight = parseInt(foundation.adapter_.getComputedStyleValue('padding-right'), 10);\r\n      const surfacePaddingLeft = parseInt(foundation.adapter_.getComputedStyleValue('padding-left'), 10);\r\n      const selectBoxAddedPadding = surfacePaddingRight + surfacePaddingLeft;\r\n\r\n      for (let i = 0, l = foundation.adapter_.getNumberOfOptions(); i < l; i++) {\r\n        const txt = foundation.adapter_.getTextForOptionAtIndex(i).trim();\r\n        const {width} = foundation.ctx_.measureText(txt);\r\n        const addedSpace = letterSpacing * txt.length;\r\n\r\n        maxTextLength =\r\n          Math.max(maxTextLength, Math.ceil(width + addedSpace + selectBoxAddedPadding));\r\n      }\r\n\r\n      const labelTxt = this.label;\r\n      const {width} = foundation.ctx_.measureText(labelTxt);\r\n      const addedSpace = letterSpacing * labelTxt.length;\r\n\r\n      maxTextLength =\r\n        Math.max(maxTextLength, Math.ceil(width + addedSpace + selectBoxAddedPadding));\r\n\r\n\r\n      foundation.adapter_.setStyle('width', `${maxTextLength}px`);\r\n    }\r\n    /// \r\n    this.labelFoundation.init()\r\n    this.foundation.init()\r\n    this.foundation.setDisabled(this.disabled)\r\n    this.refreshIndex ()\r\n    if (this.value !== this.foundation.getValue()) {\r\n      this.$emit('change', this.foundation.getValue())\r\n    }\r\n  },\r\n  beforeDestroy () {\r\n    let foundation = this.foundation\r\n    this.foundation = null\r\n    foundation.destroy()\r\n    \r\n    let foundationLabel = this.foundationLabel\r\n    this.foundationLabel = null\r\n    foundationLabel.destroy()\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <select :multiple=\"multiple\"  ref=\"root\" v-model=\"selected\" \r\n    :disabled=\"disabled\"  :style=\"styles\"  \r\n    class=\"mdc-select mdc-multi-select mdc-list\"\r\n    @change=\"onChange\"\r\n  >\r\n    <optgroup ref=\"optgroup\" class=\"mdc-list-group\" :label=\"label\" v-if=\"label\">\r\n        <slot></slot>\r\n    </optgroup>\r\n    <slot v-else></slot>\r\n  </select>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'mdc-multi-select',\r\n  model: {\r\n    prop: 'value',\r\n    event: 'change'\r\n  },\r\n  props: {\r\n    multiple: Boolean,\r\n    value: [String, Array],\r\n    disabled: Boolean,\r\n    label: String,\r\n    maxSize: {\r\n      type: [String, Number],\r\n      default: 4\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      selected: this.value,\r\n      size: undefined,\r\n      count: undefined\r\n    }\r\n  },\r\n  computed: {\r\n    styles () {\r\n      let scroll = (this.count > this.size)\r\n      let size = 48* this.size + (scroll? 0 : 16)\r\n\r\n      let styles =  {\r\n        'height': size + 'px',\r\n        'overflow-y':  scroll ? 'scroll' : 'hidden'\r\n      }\r\n      if (!scroll) {\r\n        styles['background-image'] = 'unset'\r\n      }\r\n      return styles\r\n    }\r\n  },\r\n  methods: {\r\n    onChange () {\r\n      this.$emit('change', this.selected)\r\n    }\r\n  },\r\n  mounted () {\r\n    const refreshSize = () => {\r\n      let count = this.$refs.root.querySelectorAll('option, optgroup').length\r\n      this.count = count\r\n      let max = Number(this.maxSize)\r\n      if (this.label) {\r\n        max += 1\r\n      }\r\n      this.size = Math.min(count, max)\r\n    }\r\n\r\n    this.slotObserver = new MutationObserver(() => refreshSize())\r\n    this.slotObserver.observe(this.$el, { childList: true, subtree: true })\r\n\r\n    refreshSize()\r\n  },\r\n  beforeDestroy () {\r\n    this.slotObserver.disconnect()\r\n  }\r\n}\r\n</script>\r\n","<template>\r\n  <component :is=\"type\" :multiple=\"multiple\"\r\n    :label=\"label\" \r\n    :value=\"value\" @change=\"onChange\"\r\n    v-bind=\"$attrs\"\r\n  >\r\n    <slot></slot>\r\n  </component>\r\n</template>\r\n\r\n<script>\r\nimport MDCNativeSelect from './mdc-native-select.vue'\r\nimport MDCMenuSelect from './mdc-menu-select.vue'\r\nimport MDCMultiSelect from './mdc-multi-select.vue'\r\nimport { DispatchFocusMixin } from '../base'\r\n \r\nconst media = new class {\r\n  get mobile () {\r\n    return this._mobile || (this._mobile =\r\n      window.matchMedia('(max-width: 600px) and (pointer: coarse)'))\r\n  }\r\n}()\r\n\r\nexport default {\r\n  name: 'mdc-select',\r\n  mixins: [DispatchFocusMixin],\r\n  model: {\r\n    prop: 'value',\r\n    event: 'change'\r\n  },\r\n  props: {\r\n    multiple: Boolean,\r\n    value: [String, Array],\r\n    label: String,\r\n    native: Boolean\r\n  },\r\n  provide () {\r\n    return {mdcSelect: this}\r\n  },\r\n  components: {\r\n    'mdc-native-select': MDCNativeSelect,\r\n    'mdc-menu-select': MDCMenuSelect,\r\n    'mdc-multi-select': MDCMultiSelect\r\n  },\r\n  data () {\r\n    return {\r\n      mobile: (window) ? media.mobile.matches : true\r\n    }\r\n  },\r\n  computed: {\r\n    type () {\r\n      return this.multiple ? 'mdc-multi-select'\r\n        : this.menu ? 'mdc-menu-select'\r\n        : this.isNative ? 'mdc-native-select'\r\n          : 'mdc-menu-select'\r\n    },\r\n    isNative () {\r\n      return this.native || this.multiple || this.mobile\r\n    }\r\n  },\r\n  methods: {\r\n    onChange (value) {\r\n      this.$emit('change', value)\r\n    },\r\n    refreshMedia () {\r\n      this.mobile = media.mobile.matches\r\n    }\r\n  },\r\n  beforeMount () {\r\n    media.mobile.addListener(this.refreshMedia)\r\n    this.refreshMedia()\r\n  },\r\n  beforeDestroy () {\r\n    media.mobile.removeListener(this.refreshMedia)\r\n  }\r\n}\r\n</script>\r\n","<template>\n   <option :disabled=\"disabled\" :value=\"value\" v-if=\"hasValue\"\n    class=\"mdc-option mdc-native-option\">\n     <slot></slot>\n   </option>\n   <option :disabled=\"disabled\" v-else\n    class=\"mdc-option mdc-native-option\">\n     <slot></slot>\n   </option>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-native-option',\n  props: {\n    value: String,\n    disabled: Boolean\n  },\n  computed: {\n    hasValue () {\n      return !(typeof this.value === 'undefined')\n    }\n  }\n}\n</script>\n","<template>\n   <li class=\"mdc-option mdc-menu-option mdc-list-item\" \n    role=\"option\" \n    :tabindex=\"disabled?-1:0\"\n    :aria-disabled=\"disabled\"\n    :data-value=\"value\">\n     <slot></slot>\n   </li>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-menu-option',\n  props: {\n    value: String,\n    disabled: Boolean\n  }\n}\n</script>\n","<template>\n   <option class=\"mdc-option mdc-multi-option mdc-list-item\" \n    :disabled=\"disabled\" :value=\"value\" v-if=\"hasValue\">\n     <slot></slot>\n   </option>\n   <option class=\"mdc-option mdc-multi-option mdc-list-item\" \n    :disabled=\"disabled\" v-else>\n     <slot></slot>\n   </option>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-multi-option',\n  props: {\n    value: String,\n    disabled: Boolean\n  },\n  computed: {\n    hasValue () {\n      return !(typeof this.value === 'undefined')\n    }\n  }\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcSelect from './mdc-select.vue'\nimport mdcOption from './mdc-option.vue'\n\n\nexport {\n  mdcSelect,\n  mdcOption,\n}\n\nexport default BasePlugin({\n  mdcSelect,\n  mdcOption,\n})\n","<template>\n  <component :is=\"type\" :disabled=\"disabled\" :value=value>\n    <slot></slot>\n  </component>\n</template>\n\n<script>\nimport MDCNativeOption from './mdc-native-option.vue'\nimport MDCMenuOption from './mdc-menu-option.vue'\nimport MDCMultiOption from './mdc-multi-option.vue'\n\nexport default {\n  name: 'mdc-option',\n  props: {\n    value: String,\n    disabled: Boolean\n  },\n  inject: ['mdcSelect'],\n  components: {\n    'mdc-native-option': MDCNativeOption,\n    'mdc-multi-option': MDCMultiOption,\n    'mdc-menu-option': MDCMenuOption\n  },\n  computed: {\n    isNative () {\n      return this.mdcSelect.isNative\n    },\n    multiple () {\n      return this.mdcSelect.multiple\n    },\n    type () {\n      return this.multiple ? 'mdc-multi-option'\n        : this.isNative ? 'mdc-native-option'\n          : 'mdc-menu-option'\n    }\n  }\n}\n</script>\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  ACTIVE: 'mdc-slider--active',\n  DISABLED: 'mdc-slider--disabled',\n  DISCRETE: 'mdc-slider--discrete',\n  FOCUS: 'mdc-slider--focus',\n  IN_TRANSIT: 'mdc-slider--in-transit',\n  IS_DISCRETE: 'mdc-slider--discrete',\n  HAS_TRACK_MARKER: 'mdc-slider--display-markers',\n};\n\n/** @enum {string} */\nconst strings = {\n  TRACK_SELECTOR: '.mdc-slider__track',\n  TRACK_MARKER_CONTAINER_SELECTOR: '.mdc-slider__track-marker-container',\n  LAST_TRACK_MARKER_SELECTOR: '.mdc-slider__track-marker:last-child',\n  THUMB_CONTAINER_SELECTOR: '.mdc-slider__thumb-container',\n  PIN_VALUE_MARKER_SELECTOR: '.mdc-slider__pin-value-marker',\n  ARIA_VALUEMIN: 'aria-valuemin',\n  ARIA_VALUEMAX: 'aria-valuemax',\n  ARIA_VALUENOW: 'aria-valuenow',\n  ARIA_DISABLED: 'aria-disabled',\n  STEP_DATA_ATTR: 'data-step',\n  CHANGE_EVENT: 'MDCSlider:change',\n  INPUT_EVENT: 'MDCSlider:input',\n};\n\n/** @enum {number} */\nconst numbers = {\n  PAGE_FACTOR: 4,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n *you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {cssClasses, strings, numbers} from './constants';\nimport MDCSliderAdapter from './adapter';\n\nimport {getCorrectEventName, getCorrectPropertyName} from '@material/animation/index';\nimport MDCFoundation from '@material/base/foundation';\n\n/** @enum {string} */\nconst KEY_IDS = {\n  ARROW_LEFT: 'ArrowLeft',\n  ARROW_RIGHT: 'ArrowRight',\n  ARROW_UP: 'ArrowUp',\n  ARROW_DOWN: 'ArrowDown',\n  HOME: 'Home',\n  END: 'End',\n  PAGE_UP: 'PageUp',\n  PAGE_DOWN: 'PageDown',\n};\n\n/** @enum {string} */\nconst MOVE_EVENT_MAP = {\n  'mousedown': 'mousemove',\n  'touchstart': 'touchmove',\n  'pointerdown': 'pointermove',\n};\n\nconst DOWN_EVENTS = ['mousedown', 'pointerdown', 'touchstart'];\nconst UP_EVENTS = ['mouseup', 'pointerup', 'touchend'];\n\n/**\n * @extends {MDCFoundation<!MDCSliderAdapter>}\n */\nclass MDCSliderFoundation extends MDCFoundation {\n  /** @return enum {cssClasses} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {strings} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {numbers} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /** @return {!MDCSliderAdapter} */\n  static get defaultAdapter() {\n    return /** @type {!MDCSliderAdapter} */ ({\n      hasClass: (/* className: string */) => /* boolean */ false,\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      getAttribute: (/* name: string */) => /* string|null */ null,\n      setAttribute: (/* name: string, value: string */) => {},\n      removeAttribute: (/* name: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ ({\n        top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0,\n      }),\n      getTabIndex: () => /* number */ 0,\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerThumbContainerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterThumbContainerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerBodyInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterBodyInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      notifyInput: () => {},\n      notifyChange: () => {},\n      setThumbContainerStyleProperty: (/* propertyName: string, value: string */) => {},\n      setTrackStyleProperty: (/* propertyName: string, value: string */) => {},\n      setMarkerValue: (/* value: number */) => {},\n      appendTrackMarkers: (/* numMarkers: number */) => {},\n      removeTrackMarkers: () => {},\n      setLastTrackMarkersStyleProperty: (/* propertyName: string, value: string */) => {},\n      isRTL: () => /* boolean */ false,\n    });\n  }\n\n  /**\n   * Creates a new instance of MDCSliderFoundation\n   * @param {?MDCSliderAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCSliderFoundation.defaultAdapter, adapter));\n    /** @private {?ClientRect} */\n    this.rect_ = null;\n    // We set this to NaN since we want it to be a number, but we can't use '0' or '-1'\n    // because those could be valid tabindices set by the client code.\n    this.savedTabIndex_ = NaN;\n    this.active_ = false;\n    this.inTransit_ = false;\n    this.isDiscrete_ = false;\n    this.hasTrackMarker_ = false;\n    this.handlingThumbTargetEvt_ = false;\n    this.min_ = 0;\n    this.max_ = 100;\n    this.step_ = 0;\n    this.value_ = 0;\n    this.disabled_ = false;\n    this.preventFocusState_ = false;\n    this.updateUIFrame_ = 0;\n    this.thumbContainerPointerHandler_ = () => {\n      this.handlingThumbTargetEvt_ = true;\n    };\n    this.interactionStartHandler_ = (evt) => this.handleDown_(evt);\n    this.keydownHandler_ = (evt) => this.handleKeydown_(evt);\n    this.focusHandler_ = () => this.handleFocus_();\n    this.blurHandler_ = () => this.handleBlur_();\n    this.resizeHandler_ = () => this.layout();\n  }\n\n  init() {\n    this.isDiscrete_ = this.adapter_.hasClass(cssClasses.IS_DISCRETE);\n    this.hasTrackMarker_ = this.adapter_.hasClass(cssClasses.HAS_TRACK_MARKER);\n    DOWN_EVENTS.forEach((evtName) => this.adapter_.registerInteractionHandler(evtName, this.interactionStartHandler_));\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.registerThumbContainerInteractionHandler(evtName, this.thumbContainerPointerHandler_);\n    });\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    this.layout();\n    // At last step, provide a reasonable default value to discrete slider\n    if (this.isDiscrete_ && this.getStep() == 0) {\n      this.step_ = 1;\n    }\n  }\n\n  destroy() {\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.deregisterInteractionHandler(evtName, this.interactionStartHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    DOWN_EVENTS.forEach((evtName) => {\n      this.adapter_.deregisterThumbContainerInteractionHandler(evtName, this.thumbContainerPointerHandler_);\n    });\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  setupTrackMarker() {\n    if (this.isDiscrete_ && this.hasTrackMarker_&& this.getStep() != 0) {\n      const min = this.getMin();\n      const max = this.getMax();\n      const step = this.getStep();\n      let numMarkers = (max - min) / step;\n\n      // In case distance between max & min is indivisible to step,\n      // we place the secondary to last marker proportionally at where thumb\n      // could reach and place the last marker at max value\n      const indivisible = Math.ceil(numMarkers) !== numMarkers;\n      if (indivisible) {\n        numMarkers = Math.ceil(numMarkers);\n      }\n\n      this.adapter_.removeTrackMarkers();\n      this.adapter_.appendTrackMarkers(numMarkers);\n\n      if (indivisible) {\n        const lastStepRatio = (max - numMarkers * step) / step + 1;\n        const flex = getCorrectPropertyName(window, 'flex');\n        this.adapter_.setLastTrackMarkersStyleProperty(flex, String(lastStepRatio));\n      }\n    }\n  }\n\n  layout() {\n    this.rect_ = this.adapter_.computeBoundingRect();\n    this.updateUIForCurrentValue_();\n  }\n\n  /** @return {number} */\n  getValue() {\n    return this.value_;\n  }\n\n  /** @param {number} value */\n  setValue(value) {\n    this.setValue_(value, false);\n  }\n\n  /** @return {number} */\n  getMax() {\n    return this.max_;\n  }\n\n  /** @param {number} max */\n  setMax(max) {\n    if (max < this.min_) {\n      throw new Error('Cannot set max to be less than the slider\\'s minimum value');\n    }\n    this.max_ = max;\n    this.setValue_(this.value_, false, true);\n    this.adapter_.setAttribute(strings.ARIA_VALUEMAX, String(this.max_));\n    this.setupTrackMarker();\n  }\n\n  /** @return {number} */\n  getMin() {\n    return this.min_;\n  }\n\n  /** @param {number} min */\n  setMin(min) {\n    if (min > this.max_) {\n      throw new Error('Cannot set min to be greater than the slider\\'s maximum value');\n    }\n    this.min_ = min;\n    this.setValue_(this.value_, false, true);\n    this.adapter_.setAttribute(strings.ARIA_VALUEMIN, String(this.min_));\n    this.setupTrackMarker();\n  }\n\n  /** @return {number} */\n  getStep() {\n    return this.step_;\n  }\n\n  /** @param {number} step */\n  setStep(step) {\n    if (step < 0) {\n      throw new Error('Step cannot be set to a negative number');\n    }\n    if (this.isDiscrete_ && (typeof(step) !== 'number' || step < 1)) {\n      step = 1;\n    }\n    this.step_ = step;\n    this.setValue_(this.value_, false, true);\n    this.setupTrackMarker();\n  }\n\n  /** @return {boolean} */\n  isDisabled() {\n    return this.disabled_;\n  }\n\n  /** @param {boolean} disabled */\n  setDisabled(disabled) {\n    this.disabled_ = disabled;\n    this.toggleClass_(cssClasses.DISABLED, this.disabled_);\n    if (this.disabled_) {\n      this.savedTabIndex_ = this.adapter_.getTabIndex();\n      this.adapter_.setAttribute(strings.ARIA_DISABLED, 'true');\n      this.adapter_.removeAttribute('tabindex');\n    } else {\n      this.adapter_.removeAttribute(strings.ARIA_DISABLED);\n      if (!isNaN(this.savedTabIndex_)) {\n        this.adapter_.setAttribute('tabindex', String(this.savedTabIndex_));\n      }\n    }\n  }\n\n  /**\n   * Called when the user starts interacting with the slider\n   * @param {!Event} evt\n   * @private\n   */\n  handleDown_(evt) {\n    if (this.disabled_) {\n      return;\n    }\n\n    this.preventFocusState_ = true;\n    this.setInTransit_(!this.handlingThumbTargetEvt_);\n    this.handlingThumbTargetEvt_ = false;\n    this.setActive_(true);\n\n    const moveHandler = (evt) => {\n      this.handleMove_(evt);\n    };\n\n    // Note: upHandler is [de]registered on ALL potential pointer-related release event types, since some browsers\n    // do not always fire these consistently in pairs.\n    // (See https://github.com/material-components/material-components-web/issues/1192)\n    const upHandler = () => {\n      this.handleUp_();\n      this.adapter_.deregisterBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);\n      UP_EVENTS.forEach((evtName) => this.adapter_.deregisterBodyInteractionHandler(evtName, upHandler));\n    };\n\n    this.adapter_.registerBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);\n    UP_EVENTS.forEach((evtName) => this.adapter_.registerBodyInteractionHandler(evtName, upHandler));\n    this.setValueFromEvt_(evt);\n  }\n\n  /**\n   * Called when the user moves the slider\n   * @param {!Event} evt\n   * @private\n   */\n  handleMove_(evt) {\n    evt.preventDefault();\n    this.setValueFromEvt_(evt);\n  }\n\n  /**\n   * Called when the user's interaction with the slider ends\n   * @private\n   */\n  handleUp_() {\n    this.setActive_(false);\n    this.adapter_.notifyChange();\n  }\n\n  /**\n   * Returns the pageX of the event\n   * @param {!Event} evt\n   * @return {number}\n   * @private\n   */\n  getPageX_(evt) {\n    if (evt.targetTouches && evt.targetTouches.length > 0) {\n      return evt.targetTouches[0].pageX;\n    }\n    return evt.pageX;\n  }\n\n  /**\n   * Sets the slider value from an event\n   * @param {!Event} evt\n   * @private\n   */\n  setValueFromEvt_(evt) {\n    const pageX = this.getPageX_(evt);\n    const value = this.computeValueFromPageX_(pageX);\n    this.setValue_(value, true);\n  }\n\n  /**\n   * Computes the new value from the pageX position\n   * @param {number} pageX\n   * @return {number}\n   */\n  computeValueFromPageX_(pageX) {\n    const {max_: max, min_: min} = this;\n    const xPos = pageX - this.rect_.left;\n    let pctComplete = xPos / this.rect_.width;\n    if (this.adapter_.isRTL()) {\n      pctComplete = 1 - pctComplete;\n    }\n    // Fit the percentage complete between the range [min,max]\n    // by remapping from [0, 1] to [min, min+(max-min)].\n    return min + pctComplete * (max - min);\n  }\n\n  /**\n   * Handles keydown events\n   * @param {!Event} evt\n   */\n  handleKeydown_(evt) {\n    const keyId = this.getKeyId_(evt);\n    const value = this.getValueForKeyId_(keyId);\n    if (isNaN(value)) {\n      return;\n    }\n\n    // Prevent page from scrolling due to key presses that would normally scroll the page\n    evt.preventDefault();\n    this.adapter_.addClass(cssClasses.FOCUS);\n    this.setValue_(value, true);\n    this.adapter_.notifyChange();\n  }\n\n  /**\n   * Returns the computed name of the event\n   * @param {!Event} kbdEvt\n   * @return {string}\n   */\n  getKeyId_(kbdEvt) {\n    if (kbdEvt.key === KEY_IDS.ARROW_LEFT || kbdEvt.keyCode === 37) {\n      return KEY_IDS.ARROW_LEFT;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_RIGHT || kbdEvt.keyCode === 39) {\n      return KEY_IDS.ARROW_RIGHT;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_UP || kbdEvt.keyCode === 38) {\n      return KEY_IDS.ARROW_UP;\n    }\n    if (kbdEvt.key === KEY_IDS.ARROW_DOWN || kbdEvt.keyCode === 40) {\n      return KEY_IDS.ARROW_DOWN;\n    }\n    if (kbdEvt.key === KEY_IDS.HOME || kbdEvt.keyCode === 36) {\n      return KEY_IDS.HOME;\n    }\n    if (kbdEvt.key === KEY_IDS.END || kbdEvt.keyCode === 35) {\n      return KEY_IDS.END;\n    }\n    if (kbdEvt.key === KEY_IDS.PAGE_UP || kbdEvt.keyCode === 33) {\n      return KEY_IDS.PAGE_UP;\n    }\n    if (kbdEvt.key === KEY_IDS.PAGE_DOWN || kbdEvt.keyCode === 34) {\n      return KEY_IDS.PAGE_DOWN;\n    }\n\n    return '';\n  }\n\n  /**\n   * Computes the value given a keyboard key ID\n   * @param {string} keyId\n   * @return {number}\n   */\n  getValueForKeyId_(keyId) {\n    const {max_: max, min_: min, step_: step} = this;\n    let delta = step || (max - min) / 100;\n    const valueNeedsToBeFlipped = this.adapter_.isRTL() && (\n      keyId === KEY_IDS.ARROW_LEFT || keyId === KEY_IDS.ARROW_RIGHT\n    );\n    if (valueNeedsToBeFlipped) {\n      delta = -delta;\n    }\n\n    switch (keyId) {\n    case KEY_IDS.ARROW_LEFT:\n    case KEY_IDS.ARROW_DOWN:\n      return this.value_ - delta;\n    case KEY_IDS.ARROW_RIGHT:\n    case KEY_IDS.ARROW_UP:\n      return this.value_ + delta;\n    case KEY_IDS.HOME:\n      return this.min_;\n    case KEY_IDS.END:\n      return this.max_;\n    case KEY_IDS.PAGE_UP:\n      return this.value_ + delta * numbers.PAGE_FACTOR;\n    case KEY_IDS.PAGE_DOWN:\n      return this.value_ - delta * numbers.PAGE_FACTOR;\n    default:\n      return NaN;\n    }\n  }\n\n  handleFocus_() {\n    if (this.preventFocusState_) {\n      return;\n    }\n    this.adapter_.addClass(cssClasses.FOCUS);\n  }\n\n  handleBlur_() {\n    this.preventFocusState_ = false;\n    this.adapter_.removeClass(cssClasses.FOCUS);\n  }\n\n  /**\n   * Sets the value of the slider\n   * @param {number} value\n   * @param {boolean} shouldFireInput\n   * @param {boolean=} force\n   */\n  setValue_(value, shouldFireInput, force = false) {\n    if (value === this.value_ && !force) {\n      return;\n    }\n\n    const {min_: min, max_: max} = this;\n    const valueSetToBoundary = value === min || value === max;\n    if (this.step_ && !valueSetToBoundary) {\n      value = this.quantize_(value);\n    }\n    if (value < min) {\n      value = min;\n    } else if (value > max) {\n      value = max;\n    }\n    this.value_ = value;\n    this.adapter_.setAttribute(strings.ARIA_VALUENOW, String(this.value_));\n    this.updateUIForCurrentValue_();\n\n    if (shouldFireInput) {\n      this.adapter_.notifyInput();\n      if (this.isDiscrete_) {\n        this.adapter_.setMarkerValue(value);\n      }\n    }\n  }\n\n  /**\n   * Calculates the quantized value\n   * @param {number} value\n   * @return {number}\n   */\n  quantize_(value) {\n    const numSteps = Math.round(value / this.step_);\n    const quantizedVal = numSteps * this.step_;\n    return quantizedVal;\n  }\n\n  updateUIForCurrentValue_() {\n    const {max_: max, min_: min, value_: value} = this;\n    const pctComplete = (value - min) / (max - min);\n    let translatePx = pctComplete * this.rect_.width;\n    if (this.adapter_.isRTL()) {\n      translatePx = this.rect_.width - translatePx;\n    }\n\n    const transformProp = getCorrectPropertyName(window, 'transform');\n    const transitionendEvtName = getCorrectEventName(window, 'transitionend');\n\n    if (this.inTransit_) {\n      const onTransitionEnd = () => {\n        this.setInTransit_(false);\n        this.adapter_.deregisterThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);\n      };\n      this.adapter_.registerThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);\n    }\n\n    this.updateUIFrame_ = requestAnimationFrame(() => {\n      // NOTE(traviskaufman): It would be nice to use calc() here,\n      // but IE cannot handle calcs in transforms correctly.\n      // See: https://goo.gl/NC2itk\n      // Also note that the -50% offset is used to center the slider thumb.\n      this.adapter_.setThumbContainerStyleProperty(transformProp, `translateX(${translatePx}px) translateX(-50%)`);\n      this.adapter_.setTrackStyleProperty(transformProp, `scaleX(${pctComplete})`);\n    });\n  }\n\n  /**\n   * Toggles the active state of the slider\n   * @param {boolean} active\n   */\n  setActive_(active) {\n    this.active_ = active;\n    this.toggleClass_(cssClasses.ACTIVE, this.active_);\n  }\n\n  /**\n   * Toggles the inTransit state of the slider\n   * @param {boolean} inTransit\n   */\n  setInTransit_(inTransit) {\n    this.inTransit_ = inTransit;\n    this.toggleClass_(cssClasses.IN_TRANSIT, this.inTransit_);\n  }\n\n  /**\n   * Conditionally adds or removes a class based on shouldBePresent\n   * @param {string} className\n   * @param {boolean} shouldBePresent\n   */\n  toggleClass_(className, shouldBePresent) {\n    if (shouldBePresent) {\n      this.adapter_.addClass(className);\n    } else {\n      this.adapter_.removeClass(className);\n    }\n  }\n}\n\nexport default MDCSliderFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Adapter for MDC Slider.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Slider into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCSliderAdapter {\n  /**\n   * Returns true if className exists for the slider Element\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Adds a class to the slider Element\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the slider Element\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns a string if attribute name exists on the slider Element,\n   * otherwise returns null\n   * @param {string} name\n   * @return {?string}\n   */\n  getAttribute(name) {}\n\n  /**\n   * Sets attribute name on slider Element to value\n   * @param {string} name\n   * @param {string} value\n   */\n  setAttribute(name, value) {}\n\n  /**\n   * Removes attribute name from slider Element\n   * @param {string} name\n   */\n  removeAttribute(name) {}\n\n  /**\n   * Returns the bounding client rect for the slider Element\n   * @return {?ClientRect}\n   */\n  computeBoundingRect() {}\n\n  /**\n   * Returns the tab index of the slider Element\n   * @return {number}\n   */\n  getTabIndex() {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event handler on the thumb container element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerThumbContainerInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the thumb container element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterThumbContainerInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event handler on the body for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerBodyInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the body for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterBodyInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event handler for the window resize event\n   * @param {function(!Event): undefined} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * Deregisters an event handler for the window resize event\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * Emits a custom event MDCSlider:input from the root\n   */\n  notifyInput() {}\n\n  /**\n   * Emits a custom event MDCSlider:change from the root\n   */\n  notifyChange() {}\n\n  /**\n   * Sets a style property of the thumb container element to the passed value\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setThumbContainerStyleProperty(propertyName, value) {}\n\n  /**\n   * Sets a style property of the track element to the passed value\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setTrackStyleProperty(propertyName, value) {}\n\n  /**\n   * Sets the inner text of the pin marker to the passed value\n   * @param {number} value\n   */\n  setMarkerValue(value) {}\n\n  /**\n   * Appends the passed number of track markers to the track mark container element\n   * @param {number} numMarkers\n   */\n  appendTrackMarkers(numMarkers) {}\n\n  /**\n   * Removes all track markers fromt he track mark container element\n   */\n  removeTrackMarkers() {}\n\n  /**\n   * Sets a style property of the last track marker to the passed value\n   * @param {string} propertyName\n   * @param {string} value\n   */\n  setLastTrackMarkersStyleProperty(propertyName, value) {}\n\n  /**\n   * Returns true if the root element is RTL, otherwise false\n   * @return {boolean}\n   */\n  isRTL() {}\n}\n\nexport default MDCSliderAdapter;\n","import {BasePlugin} from '../base'\nimport mdcSlider from './mdc-slider.vue'\n\nexport {\n  mdcSlider\n}\n\nexport default BasePlugin({\n  mdcSlider\n})\n","<template>\n  <div class=\"mdc-slider\" :class=\"classes\" tabindex=\"0\" role=\"slider\">\n    <div class=\"mdc-slider__track-container\">\n      <div class=\"mdc-slider__track\" :style=\"trackStyles\"></div>\n      <div class=\"mdc-slider__track-marker-container\" v-if=\"hasMarkers\">\n        <div class=\"mdc-slider__track-marker\" \n          v-for=\"markerNum in numMarkers\"\n          :key=\"markerNum\"\n          :style=\"(markerNum == numMarkers) ? lastTrackMarkersStyles : {}\"\n          ></div>\n      </div>\n    </div>\n    <div ref=\"thumbContainer\" :style=\"thumbStyles\" class=\"mdc-slider__thumb-container\">\n      <div class=\"mdc-slider__pin\" v-if=\"isDiscrete\">\n        <span class=\"mdc-slider__pin-value-marker\">{{markerValue}}</span>\n      </div>\n      <svg class=\"mdc-slider__thumb\" width=\"21\" height=\"21\">\n        <circle cx=\"10.5\" cy=\"10.5\" r=\"7.875\"></circle>\n      </svg>\n      <div class=\"mdc-slider__focus-ring\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MDCSliderFoundation from '@material/slider/foundation'\nimport {DispatchFocusMixin} from '../base'\n\nexport default {\n  name: 'mdc-slider',\n  mixins: [DispatchFocusMixin],\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    value: [Number, String],\n    min: { type: [Number, String], default: 0 },\n    max: { type: [Number, String], default: 100 },\n    step: { type: [Number, String], default: 0 },\n    displayMarkers: Boolean,\n    disabled: Boolean,\n    layoutOn: String,\n    layoutOnSource: {type: Object, required: false},\n  },\n  data () {\n    return {\n      classes: {\n        'mdc-slider--discrete': !!this.step,\n        'mdc-slider--display-markers': this.displayMarkers\n      },\n      trackStyles: {},\n      lastTrackMarkersStyles: {},\n      thumbStyles: {},\n      markerValue: '',\n      numMarkers: 0\n    }\n  },\n  computed: {\n    isDiscrete () {\n      return !!this.step\n    },\n    hasMarkers () {\n      return !!this.step && this.displayMarkers && this.numMarkers\n    }\n  },\n  watch: {\n    value () {\n      if (this.foundation.getValue() !== Number(this.value)) {\n        this.foundation.setValue(this.value)\n      }\n    },\n    min () {\n      this.foundation.setMin(Number(this.min))\n    },\n    max () {\n      this.foundation.setMax(Number(this.max))\n    },\n    step () {\n      this.foundation.setStep(Number(this.step))\n    },\n    disabled () {\n      this.foundation.setDisabled(this.disabled)\n    }\n  },\n  methods: {\n    layout () {\n      this.$nextTick( () => {\n        this.foundation && this.foundation.layout()\n      })\n    }\n  },\n  mounted () {\n    this.foundation = new MDCSliderFoundation({\n      hasClass: (className) => this.$el.classList.contains(className),\n      addClass: (className) => {\n        this.$set(this.classes, className, true)\n      },\n      removeClass: (className) => {\n        this.$delete(this.classes, className, true)\n      },\n      getAttribute: (name) => this.$el.getAttribute(name),\n      setAttribute: (name, value) => this.$el.setAttribute(name, value),\n      removeAttribute: (name) => this.$el.removeAttribute(name),\n      computeBoundingRect: () => this.$el.getBoundingClientRect(),\n      getTabIndex: () => this.$el.tabIndex,\n      registerInteractionHandler: (type, handler) => {\n        this.$el.addEventListener(type, handler)\n      },\n      deregisterInteractionHandler: (type, handler) => {\n        this.$el.removeEventListener(type, handler)\n      },\n      registerThumbContainerInteractionHandler: (type, handler) => {\n        this.$refs.thumbContainer.addEventListener(type, handler)\n      },\n      deregisterThumbContainerInteractionHandler: (type, handler) => {\n        this.$refs.thumbContainer.removeEventListener(type, handler)\n      },\n      registerBodyInteractionHandler: (type, handler) => {\n        document.body.addEventListener(type, handler)\n      },\n      deregisterBodyInteractionHandler: (type, handler) => {\n        document.body.removeEventListener(type, handler)\n      },\n      registerResizeHandler: (handler) => {\n        window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: (handler) => {\n        window.removeEventListener('resize', handler)\n      },\n      notifyInput: () => {\n        this.$emit('input', this.foundation.getValue())\n      },\n      notifyChange: () => {\n        this.$emit('change', this.foundation.getValue())\n      },\n      setThumbContainerStyleProperty: (propertyName, value) => {\n        this.$set(this.thumbStyles, propertyName, value)\n      },\n      setTrackStyleProperty: (propertyName, value) => {\n        this.$set(this.trackStyles, propertyName, value)\n      },\n      setMarkerValue: (value) => {\n        this.markerValue = value\n      },\n      appendTrackMarkers: (numMarkers) => {\n        this.numMarkers = numMarkers\n      },\n      removeTrackMarkers: () => {\n        this.numMarkers = 0\n      },\n      setLastTrackMarkersStyleProperty: (propertyName, value) => {\n        this.$set(this.lastTrackMarkersStyles, propertyName, value)\n      },\n      isRTL: () => false\n    })\n\n    this.foundation.init()\n    this.foundation.setDisabled(this.disabled)\n    this.foundation.setMin(Number(this.min))\n    this.foundation.setMax(Number(this.max))\n    this.foundation.setStep(Number(this.step))\n    this.foundation.setValue(Number(this.value))\n    if (this.hasMarkers) {\n      this.foundation.setupTrackMarker()\n    }\n    \n    this.$root.$on('mdc:layout', this.layout)\n\n    if (this.layoutOn) {\n      let source = this.layoutOnSource || this.$root\n      source.$on(this.layoutOn, this.layout)\n    }\n    \n  },\n  beforeDestroy () {\n    this.foundation.destroy()\n  }\n}\n</script>\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const cssClasses = {\n  ROOT: 'mdc-snackbar',\n  TEXT: 'mdc-snackbar__text',\n  ACTION_WRAPPER: 'mdc-snackbar__action-wrapper',\n  ACTION_BUTTON: 'mdc-snackbar__action-button',\n  ACTIVE: 'mdc-snackbar--active',\n  MULTILINE: 'mdc-snackbar--multiline',\n  ACTION_ON_BOTTOM: 'mdc-snackbar--action-on-bottom',\n};\n\nexport const strings = {\n  TEXT_SELECTOR: '.mdc-snackbar__text',\n  ACTION_WRAPPER_SELECTOR: '.mdc-snackbar__action-wrapper',\n  ACTION_BUTTON_SELECTOR: '.mdc-snackbar__action-button',\n  SHOW_EVENT: 'MDCSnackbar:show',\n  HIDE_EVENT: 'MDCSnackbar:hide',\n};\n\nexport const numbers = {\n  MESSAGE_TIMEOUT: 2750,\n};\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCSnackbarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      setAriaHidden: () => {},\n      unsetAriaHidden: () => {},\n      setActionAriaHidden: () => {},\n      unsetActionAriaHidden: () => {},\n      setActionText: (/* actionText: string */) => {},\n      setMessageText: (/* message: string */) => {},\n      setFocus: () => {},\n      visibilityIsHidden: () => /* boolean */ false,\n      registerCapturedBlurHandler: (/* handler: EventListener */) => {},\n      deregisterCapturedBlurHandler: (/* handler: EventListener */) => {},\n      registerVisibilityChangeHandler: (/* handler: EventListener */) => {},\n      deregisterVisibilityChangeHandler: (/* handler: EventListener */) => {},\n      registerCapturedInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterCapturedInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerActionClickHandler: (/* handler: EventListener */) => {},\n      deregisterActionClickHandler: (/* handler: EventListener */) => {},\n      registerTransitionEndHandler: (/* handler: EventListener */) => {},\n      deregisterTransitionEndHandler: (/* handler: EventListener */) => {},\n      notifyShow: () => {},\n      notifyHide: () => {},\n    };\n  }\n\n  get active() {\n    return this.active_;\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCSnackbarFoundation.defaultAdapter, adapter));\n\n    this.active_ = false;\n    this.actionWasClicked_ = false;\n    this.dismissOnAction_ = true;\n    this.firstFocus_ = true;\n    this.pointerDownRecognized_ = false;\n    this.snackbarHasFocus_ = false;\n    this.snackbarData_ = null;\n    this.queue_ = [];\n    this.actionClickHandler_ = () => {\n      this.actionWasClicked_ = true;\n      this.invokeAction_();\n    };\n    this.visibilitychangeHandler_ = () => {\n      clearTimeout(this.timeoutId_);\n      this.snackbarHasFocus_ = true;\n\n      if (!this.adapter_.visibilityIsHidden()) {\n        setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n      }\n    };\n    this.interactionHandler_ = (evt) => {\n      if (evt.type == 'touchstart' || evt.type == 'mousedown') {\n        this.pointerDownRecognized_ = true;\n      }\n      this.handlePossibleTabKeyboardFocus_(evt);\n\n      if (evt.type == 'focus') {\n        this.pointerDownRecognized_ = false;\n      }\n    };\n    this.blurHandler_ = () => {\n      clearTimeout(this.timeoutId_);\n      this.snackbarHasFocus_ = false;\n      this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n    };\n  }\n\n  init() {\n    this.adapter_.registerActionClickHandler(this.actionClickHandler_);\n    this.adapter_.setAriaHidden();\n    this.adapter_.setActionAriaHidden();\n  }\n\n  destroy() {\n    this.adapter_.deregisterActionClickHandler(this.actionClickHandler_);\n    this.adapter_.deregisterCapturedBlurHandler(this.blurHandler_);\n    this.adapter_.deregisterVisibilityChangeHandler(this.visibilitychangeHandler_);\n    ['touchstart', 'mousedown', 'focus'].forEach((evtType) => {\n      this.adapter_.deregisterCapturedInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  dismissesOnAction() {\n    return this.dismissOnAction_;\n  }\n\n  setDismissOnAction(dismissOnAction) {\n    this.dismissOnAction_ = !!dismissOnAction;\n  }\n\n  show(data) {\n    if (!data) {\n      throw new Error(\n        'Please provide a data object with at least a message to display.');\n    }\n    if (!data.message) {\n      throw new Error('Please provide a message to be displayed.');\n    }\n    if (data.actionHandler && !data.actionText) {\n      throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n      this.queue_.push(data);\n      return;\n    }\n    clearTimeout(this.timeoutId_);\n    this.snackbarData_ = data;\n    this.firstFocus_ = true;\n    this.adapter_.registerVisibilityChangeHandler(this.visibilitychangeHandler_);\n    this.adapter_.registerCapturedBlurHandler(this.blurHandler_);\n    ['touchstart', 'mousedown', 'focus'].forEach((evtType) => {\n      this.adapter_.registerCapturedInteractionHandler(evtType, this.interactionHandler_);\n    });\n\n    const {ACTIVE, MULTILINE, ACTION_ON_BOTTOM} = cssClasses;\n\n    this.adapter_.setMessageText(this.snackbarData_.message);\n\n    if (this.snackbarData_.multiline) {\n      this.adapter_.addClass(MULTILINE);\n      if (this.snackbarData_.actionOnBottom) {\n        this.adapter_.addClass(ACTION_ON_BOTTOM);\n      }\n    }\n\n    if (this.snackbarData_.actionHandler) {\n      this.adapter_.setActionText(this.snackbarData_.actionText);\n      this.actionHandler_ = this.snackbarData_.actionHandler;\n      this.setActionHidden_(false);\n    } else {\n      this.setActionHidden_(true);\n      this.actionHandler_ = null;\n      this.adapter_.setActionText(null);\n    }\n\n    this.active_ = true;\n    this.adapter_.addClass(ACTIVE);\n    this.adapter_.unsetAriaHidden();\n    this.adapter_.notifyShow();\n\n    this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || numbers.MESSAGE_TIMEOUT);\n  }\n\n  handlePossibleTabKeyboardFocus_() {\n    const hijackFocus =\n      this.firstFocus_ && !this.pointerDownRecognized_;\n\n    if (hijackFocus) {\n      this.setFocusOnAction_();\n    }\n\n    this.firstFocus_ = false;\n  }\n\n  setFocusOnAction_() {\n    this.adapter_.setFocus();\n    this.snackbarHasFocus_ = true;\n    this.firstFocus_ = false;\n  }\n\n  invokeAction_() {\n    try {\n      if (!this.actionHandler_) {\n        return;\n      }\n\n      this.actionHandler_();\n    } finally {\n      if (this.dismissOnAction_) {\n        this.cleanup_();\n      }\n    }\n  }\n\n  cleanup_() {\n    const allowDismissal = !this.snackbarHasFocus_ || this.actionWasClicked_;\n\n    if (allowDismissal) {\n      const {ACTIVE, MULTILINE, ACTION_ON_BOTTOM} = cssClasses;\n\n      this.adapter_.removeClass(ACTIVE);\n\n      const handler = () => {\n        clearTimeout(this.timeoutId_);\n        this.adapter_.deregisterTransitionEndHandler(handler);\n        this.adapter_.removeClass(MULTILINE);\n        this.adapter_.removeClass(ACTION_ON_BOTTOM);\n        this.setActionHidden_(true);\n        this.adapter_.setAriaHidden();\n        this.active_ = false;\n        this.snackbarHasFocus_ = false;\n        this.adapter_.notifyHide();\n        this.showNext_();\n      };\n\n      this.adapter_.registerTransitionEndHandler(handler);\n    }\n  }\n\n  showNext_() {\n    if (!this.queue_.length) {\n      return;\n    }\n    this.show(this.queue_.shift());\n  }\n\n  setActionHidden_(isHidden) {\n    if (isHidden) {\n      this.adapter_.setActionAriaHidden();\n    } else {\n      this.adapter_.unsetActionAriaHidden();\n    }\n  }\n}\n","import {BasePlugin} from '../base'\nimport mdcSnackbar from './mdc-snackbar.vue'\n\nexport {\n  mdcSnackbar\n}\n\nexport default BasePlugin({\n  mdcSnackbar\n})\n","<template>\n<div ref=\"root\" class=\"mdc-snackbar\" :class=\"classes\"\n    aria-live=\"assertive\" aria-atomic=\"true\" :aria-hidden=\"hidden\">\n  <div class=\"mdc-snackbar__text\">{{message}}</div>\n  <div class=\"mdc-snackbar__action-wrapper\">\n    <button ref=\"button\" type=\"button\"\n        class=\"mdc-snackbar__action-button\"\n        :aria-hidden=\"actionHidden\">{{actionText}}</button>\n  </div>\n</div>\n</template>\n\n<script>\nimport MDCSnackbarFoundation from '@material/snackbar/foundation'\nimport { getCorrectEventName } from '@material/animation'\n\nexport default {\n  name: 'mdc-snackbar',\n  props: {\n    'align-start': Boolean,\n    'event': {\n      type: String,\n      required: false,\n      default () { return 'show-snackbar' }\n    },\n    'event-source': {\n      type: Object,\n      required: false,\n      default () { return this.$root }\n    },\n    'dismisses-on-action': {type: Boolean, default: true}\n  },\n  data () {\n    return {\n      classes: {\n        'mdc-snackbar--align-start': this.alignStart\n      },\n      message: '',\n      actionText: '',\n      hidden: false,\n      actionHidden: false,\n    }\n  },\n  methods: {\n    show (data) {\n      this.foundation.show(data)\n    }\n  },\n  mounted () {\n    this.foundation = new MDCSnackbarFoundation({\n      addClass: (className) => this.$set(this.classes, className, true),\n      removeClass: (className) => this.$delete(this.classes, className),\n      setAriaHidden: () => this.hidden = true,\n      unsetAriaHidden: () => this.hidden = false,\n      setActionAriaHidden: () => this.actionHidden = true,\n      unsetActionAriaHidden: () => this.actionHidden = false,\n      setActionText: (text) => { this.actionText = text },\n      setMessageText: (text) => { this.message = text  },\n      setFocus: () => this.$refs.button.focus(),\n      visibilityIsHidden: () => document.hidden,\n      registerCapturedBlurHandler: (handler) => this.$refs.button.addEventListener('blur', handler, true),\n      deregisterCapturedBlurHandler: (handler) => this.$refs.button.removeEventListener('blur', handler, true),\n      registerVisibilityChangeHandler: (handler) => document.addEventListener('visibilitychange', handler),\n      deregisterVisibilityChangeHandler: (handler) => document.removeEventListener('visibilitychange', handler),\n      registerCapturedInteractionHandler: (evt, handler) =>\n        document.body.addEventListener(evt, handler, true),\n      deregisterCapturedInteractionHandler: (evt, handler) =>\n        document.body.removeEventListener(evt, handler, true),\n      registerActionClickHandler: (handler) => this.$refs.button.addEventListener('click', handler),\n      deregisterActionClickHandler: (handler) => this.$refs.button.removeEventListener('click', handler),\n      registerTransitionEndHandler: (handler) => {\n        this.$refs.root.addEventListener(getCorrectEventName(window, 'transitionend'), handler)\n      },\n      deregisterTransitionEndHandler: (handler) => {\n        this.$refs.root.removeEventListener(getCorrectEventName(window, 'transitionend'), handler)\n      },\n      notifyShow: () => this.$emit('show'),\n      notifyHide: () => this.$emit('hide'),\n    })\n    this.foundation.init()\n    if (this.event) {\n      this.eventSource.$on(this.event, (data) => {\n        this.foundation.show(data)\n      })\n    }\n    this.foundation.setDismissOnAction(this.dismissesOnAction)\n  },\n  beforeDestroy () {\n    this.foundation.destroy()\n  }\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcSwitch from './mdc-switch.vue'\n\nexport {\n  mdcSwitch\n}\n\nexport default BasePlugin({\n  mdcSwitch\n})\n","<template>\n  <div class=\"mdc-switch-wrapper\" \n    :class=\"{\n        'mdc-form-field': this.hasLabel,\n        'mdc-form-field--align-end': this.hasLabel && this.alignEnd\n      }\" >\n\n    <div class=\"mdc-switch\" \n      :class=\"{'mdc-switch--disabled': disabled }\">\n      <input ref=\"control\" type=\"checkbox\" \n        :name=\"name\" :id=\"_uid\" \n        class=\"mdc-switch__native-control\" \n        :checked=\"checked\" \n        :disabled=\"disabled\"\n        @change=\"onChanged\" />\n\n      <div class=\"mdc-switch__background\">\n        <div class=\"mdc-switch__knob\"></div>\n      </div>\n\n    </div>\n\n    <label :for=\"_uid\" v-if=\"hasLabel\"\n      class=\"mdc-switch-label\">\n      <slot>{{label}}</slot>\n    </label>\n\n  </div>\n</template>\n\n<script>\nimport {DispatchFocusMixin} from '../base'\n\nexport default {\n  name: 'mdc-switch',\n  mixins: [DispatchFocusMixin],\n  model: {\n    prop: 'checked',\n    event: 'change'\n  },\n  props: {\n    'checked': Boolean,\n    'label': String,\n    'alignEnd': Boolean,\n    'disabled': Boolean,\n    'value': { type: String, default () { return 'on' } },\n    'name': String\n  },\n  computed: {\n    hasLabel () {\n      return this.label || this.$slots.default\n    }\n  },\n  methods: {\n    onChanged (event) {\n      this.$emit('change', event.target.checked)\n    }\n  }\n}\n</script>\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  ACTIVE: 'mdc-tab--active',\n};\n\nexport const strings = {\n  SELECTED_EVENT: 'MDCTab:selected',\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCTabFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* type: string, handler: EventListener */) => {},\n      getOffsetWidth: () => /* number */ 0,\n      getOffsetLeft: () => /* number */ 0,\n      notifySelected: () => {},\n    };\n  }\n\n  constructor(adapter = {}) {\n    super(Object.assign(MDCTabFoundation.defaultAdapter, adapter));\n\n    this.computedWidth_ = 0;\n    this.computedLeft_ = 0;\n    this.isActive_ = false;\n    this.preventDefaultOnClick_ = false;\n\n    this.clickHandler_ = (evt) => {\n      if (this.preventDefaultOnClick_) {\n        evt.preventDefault();\n      }\n      this.adapter_.notifySelected();\n    };\n\n    this.keydownHandler_ = (evt) => {\n      if (evt.key && evt.key === 'Enter' || evt.keyCode === 13) {\n        this.adapter_.notifySelected();\n      }\n    };\n  }\n\n  init() {\n    this.adapter_.registerInteractionHandler('click', this.clickHandler_);\n    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterInteractionHandler('click', this.clickHandler_);\n    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);\n  }\n\n  getComputedWidth() {\n    return this.computedWidth_;\n  }\n\n  getComputedLeft() {\n    return this.computedLeft_;\n  }\n\n  isActive() {\n    return this.isActive_;\n  }\n\n  setActive(isActive) {\n    this.isActive_ = isActive;\n    if (this.isActive_) {\n      this.adapter_.addClass(cssClasses.ACTIVE);\n    } else {\n      this.adapter_.removeClass(cssClasses.ACTIVE);\n    }\n  }\n\n  preventsDefaultOnClick() {\n    return this.preventDefaultOnClick_;\n  }\n\n  setPreventDefaultOnClick(preventDefaultOnClick) {\n    this.preventDefaultOnClick_ = preventDefaultOnClick;\n  }\n\n  measureSelf() {\n    this.computedWidth_ = this.adapter_.getOffsetWidth();\n    this.computedLeft_ = this.adapter_.getOffsetLeft();\n  }\n}\n","<template>\r\n  <custom-link class=\"mdc-tab\" \r\n    :class=\"classes\" :style=\"styles\"\r\n    :link=\"link\" \r\n    @click=\"dispatchEvent\">\r\n\r\n    <i ref=\"icon\" v-if=\"!!hasIcon\"\r\n      tabindex=\"0\" \r\n      class=\"mdc-tab__icon\"  \r\n      :class=\"hasIcon.classes\">\r\n      <slot name=\"icon\">{{ hasIcon.content }}</slot>\r\n    </i>\r\n\r\n    <span :class=\"{'mdc-tab__icon-text': !!hasIcon}\" v-if=\"hasText\">\r\n      <slot></slot>  \r\n    </span>\r\n\r\n  </custom-link>\r\n</template>\r\n\r\n<script>\r\nimport MDCTabFoundation from '@material/tabs/tab/foundation'\r\nimport {CustomLinkMixin, DispatchEventMixin, emitCustomEvent, extractIconProp } from '../base'\r\nimport {RippleBase} from '../ripple'\r\n\r\nexport default {\r\n  name: 'mdc-tab',\r\n  mixins: [CustomLinkMixin, DispatchEventMixin],\r\n  props: {\r\n    active: Boolean,\r\n    icon: [String, Array, Object],\r\n  },\r\n  data () {\r\n    return {\r\n      classes: {},\r\n      styles: {}\r\n    }\r\n  },\r\n  computed: {\r\n    hasIcon () {\r\n      if (this.icon || this.$slots.icon) {\r\n        this.icon ? extractIconProp(this.icon) : {}\r\n      }\r\n      return false\r\n    },\r\n    hasText () {\r\n      return !!this.$slots.default\r\n    }\r\n  },\r\n  methods: {\r\n    getComputedWidth () {\r\n      return this.foundation.getComputedWidth()\r\n    },\r\n    getComputedLeft () {\r\n      return this.foundation.getComputedLeft()\r\n    },\r\n    isActive () {\r\n      return this.foundation.isActive()\r\n    },\r\n    setActive (isActive) {\r\n      this.foundation.setActive(isActive)\r\n    },\r\n    isDefaultPreventedOnClick () {\r\n      return this.foundation.preventsDefaultOnClick()\r\n    },\r\n    setPreventDefaultOnClick (preventDefaultOnClick) {\r\n      this.foundation.setPreventDefaultOnClick(preventDefaultOnClick)\r\n    },\r\n    measureSelf () {\r\n      this.foundation.measureSelf()\r\n    }\r\n  },\r\n  mounted () {\r\n    this.foundation = new MDCTabFoundation({\r\n      addClass: (className) =>\r\n        this.$set(this.classes, className, true),\r\n      removeClass: (className) =>\r\n        this.$delete(this.classes, className),\r\n      registerInteractionHandler: (type, handler) =>\r\n        this.$el.addEventListener(type, handler),\r\n      deregisterInteractionHandler: (type, handler) =>\r\n        this.$el.removeEventListener(type, handler),\r\n      getOffsetWidth: () => {\r\n        return this.$el.offsetWidth\r\n      },\r\n      getOffsetLeft: () =>\r\n        this.$el.offsetLeft,\r\n      notifySelected: () => {\r\n        emitCustomEvent(this.$el,\r\n          MDCTabFoundation.strings.SELECTED_EVENT, {tab: this}, true)\r\n      }\r\n    })\r\n    this.foundation.init()\r\n    this.setActive(this.active)\r\n    this.ripple = new RippleBase(this)\r\n    this.ripple.init()\r\n  },\r\n  beforeDestroy () {\r\n    this.foundation.destroy()\r\n    this.ripple.destroy()\r\n  }\r\n}\r\n</script>\r\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  UPGRADED: 'mdc-tab-bar-upgraded',\n};\n\nexport const strings = {\n  TAB_SELECTOR: '.mdc-tab',\n  INDICATOR_SELECTOR: '.mdc-tab-bar__indicator',\n  CHANGE_EVENT: 'MDCTabBar:change',\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {getCorrectPropertyName} from '@material/animation/index';\n\nimport {cssClasses, strings} from './constants';\n\nexport default class MDCTabBarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      bindOnMDCTabSelectedEvent: () => {},\n      unbindOnMDCTabSelectedEvent: () => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getOffsetWidth: () => /* number */ 0,\n      setStyleForIndicator: (/* propertyName: string, value: string */) => {},\n      getOffsetWidthForIndicator: () => /* number */ 0,\n      notifyChange: (/* evtData: {activeTabIndex: number} */) => {},\n      getNumberOfTabs: () => /* number */ 0,\n      isTabActiveAtIndex: (/* index: number */) => /* boolean */ false,\n      setTabActiveAtIndex: (/* index: number, isActive: true */) => {},\n      isDefaultPreventedOnClickForTabAtIndex: (/* index: number */) => /* boolean */ false,\n      setPreventDefaultOnClickForTabAtIndex: (/* index: number, preventDefaultOnClick: boolean */) => {},\n      measureTabAtIndex: (/* index: number */) => {},\n      getComputedWidthForTabAtIndex: (/* index: number */) => /* number */ 0,\n      getComputedLeftForTabAtIndex: (/* index: number */) => /* number */ 0,\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCTabBarFoundation.defaultAdapter, adapter));\n\n    this.isIndicatorShown_ = false;\n    this.computedWidth_ = 0;\n    this.computedLeft_ = 0;\n    this.activeTabIndex_ = 0;\n    this.layoutFrame_ = 0;\n    this.resizeHandler_ = () => this.layout();\n  }\n\n  init() {\n    this.adapter_.addClass(cssClasses.UPGRADED);\n    this.adapter_.bindOnMDCTabSelectedEvent();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    const activeTabIndex = this.findActiveTabIndex_();\n    if (activeTabIndex >= 0) {\n      this.activeTabIndex_ = activeTabIndex;\n    }\n    this.layout();\n  }\n\n  destroy() {\n    this.adapter_.removeClass(cssClasses.UPGRADED);\n    this.adapter_.unbindOnMDCTabSelectedEvent();\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  layoutInternal_() {\n    this.forEachTabIndex_((index) => this.adapter_.measureTabAtIndex(index));\n    this.computedWidth_ = this.adapter_.getOffsetWidth();\n    this.layoutIndicator_();\n  }\n\n  layoutIndicator_() {\n    const isIndicatorFirstRender = !this.isIndicatorShown_;\n\n    // Ensure that indicator appears in the right position immediately for correct first render.\n    if (isIndicatorFirstRender) {\n      this.adapter_.setStyleForIndicator('transition', 'none');\n    }\n\n    const translateAmtForActiveTabLeft = this.adapter_.getComputedLeftForTabAtIndex(this.activeTabIndex_);\n    const scaleAmtForActiveTabWidth =\n      this.adapter_.getComputedWidthForTabAtIndex(this.activeTabIndex_) / this.adapter_.getOffsetWidth();\n\n    const transformValue = `translateX(${translateAmtForActiveTabLeft}px) scale(${scaleAmtForActiveTabWidth}, 1)`;\n    this.adapter_.setStyleForIndicator(getCorrectPropertyName(window, 'transform'), transformValue);\n\n    if (isIndicatorFirstRender) {\n      // Force layout so that transform styles to take effect.\n      this.adapter_.getOffsetWidthForIndicator();\n      this.adapter_.setStyleForIndicator('transition', '');\n      this.adapter_.setStyleForIndicator('visibility', 'visible');\n      this.isIndicatorShown_ = true;\n    }\n  }\n\n  findActiveTabIndex_() {\n    let activeTabIndex = -1;\n    this.forEachTabIndex_((index) => {\n      if (this.adapter_.isTabActiveAtIndex(index)) {\n        activeTabIndex = index;\n        return true;\n      }\n    });\n    return activeTabIndex;\n  }\n\n  forEachTabIndex_(iterator) {\n    const numTabs = this.adapter_.getNumberOfTabs();\n    for (let index = 0; index < numTabs; index++) {\n      const shouldBreak = iterator(index);\n      if (shouldBreak) {\n        break;\n      }\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  switchToTabAtIndex(index, shouldNotify) {\n    if (index === this.activeTabIndex_) {\n      return;\n    }\n\n    if (index < 0 || index >= this.adapter_.getNumberOfTabs()) {\n      throw new Error(`Out of bounds index specified for tab: ${index}`);\n    }\n\n    const prevActiveTabIndex = this.activeTabIndex_;\n    this.activeTabIndex_ = index;\n    requestAnimationFrame(() => {\n      if (prevActiveTabIndex >= 0) {\n        this.adapter_.setTabActiveAtIndex(prevActiveTabIndex, false);\n      }\n      this.adapter_.setTabActiveAtIndex(this.activeTabIndex_, true);\n      this.layoutIndicator_();\n      if (shouldNotify) {\n        this.adapter_.notifyChange({activeTabIndex: this.activeTabIndex_});\n      }\n    });\n  }\n\n  getActiveTabIndex() {\n    return this.findActiveTabIndex_();\n  }\n}\n","import {BasePlugin} from '../base'\nimport mdcTab from './mdc-tab.vue'\nimport mdcTabBar from './mdc-tab-bar.vue'\n\nexport { \n  mdcTab, \n  mdcTabBar \n}\n\nexport default BasePlugin({\n  mdcTab, \n  mdcTabBar \n})\n","<template>\n  <nav class=\"mdc-tab-bar\" :class=\"classes\">\n    <slot></slot>\n    <span ref=\"indicator\" class=\"mdc-tab-bar__indicator\" \n      :style=\"indicatorStyles\"></span>\n  </nav>  \n</template>\n\n<script>\nimport MDCTabBarFoundation from '@material/tabs/tab-bar/foundation'\nimport MDCTabFoundation from '@material/tabs/tab/foundation'\n\nexport default {\n  name: 'mdc-tab-bar',\n  props: {\n    'indicator-primary': Boolean,\n    'indicator-accent': Boolean\n  },\n  data () {\n    return {\n      classes: {\n        'mdc-tab-bar--indicator-primary': this.indicatorPrimary,\n        'mdc-tab-bar--indicator-accent': this.indicatorAccent\n      },\n      indicatorStyles: {},\n      tabs: []\n    }\n  },\n  methods: {\n    onSelect ({detail}) {\n      const {tab} = detail\n      const index = this.tabs.indexOf(tab)\n      if (index < 0) {\n        throw new Error('mdc-tab-bar internal error: index not found')\n      }\n      this.foundation.switchToTabAtIndex(index, true)\n    }\n  },\n  mounted () {\n    this.foundation = new MDCTabBarFoundation({\n      addClass: (className) =>\n        this.$set(this.classes, className, true),\n      removeClass: (className) =>\n        this.$delete(this.classes, className),\n      bindOnMDCTabSelectedEvent: () => {\n        this.$el.addEventListener(\n          MDCTabFoundation.strings.SELECTED_EVENT, this.onSelect)\n      },\n      unbindOnMDCTabSelectedEvent: () =>\n        this.$el.removeEventListener(\n          MDCTabFoundation.strings.SELECTED_EVENT, this.onSelect),\n      registerResizeHandler: (handler) =>\n        window.addEventListener('resize', handler),\n      deregisterResizeHandler: (handler) =>\n        window.removeEventListener('resize', handler),\n      getOffsetWidth: () =>\n        this.$el.offsetWidth,\n      setStyleForIndicator: (propertyName, value) =>\n        this.$set(this.indicatorStyles, propertyName, value),\n      getOffsetWidthForIndicator: () =>\n        this.$refs.indicator.offsetWidth,\n      notifyChange: (evtData) => {\n        this.$emit('change', evtData.activeTabIndex)\n      },\n      getNumberOfTabs: () =>\n        this.tabs.length,\n      isTabActiveAtIndex: (index) =>\n        this.tabs[index].isActive(),\n      setTabActiveAtIndex: (index, isActive) => {\n        this.tabs[index].setActive(isActive)\n      },\n      isDefaultPreventedOnClickForTabAtIndex: (index) =>\n        this.tabs[index].isDefaultPreventedOnClick(),\n      setPreventDefaultOnClickForTabAtIndex: (index, preventDefaultOnClick) => {\n        this.tabs[index].setPreventDefaultOnClick(preventDefaultOnClick)\n      },\n      measureTabAtIndex: (index) =>\n        this.tabs[index].measureSelf(),\n      getComputedWidthForTabAtIndex: (index) =>\n        this.tabs[index].getComputedWidth(),\n      getComputedLeftForTabAtIndex: (index) =>\n        this.tabs[index].getComputedLeft()\n    })\n\n    const resetTabs = () => {\n      const tabElements = [].slice.call(\n        this.$el.querySelectorAll(MDCTabBarFoundation.strings.TAB_SELECTOR))\n      this.tabs = tabElements.map((el) => el.__vue__)\n\n      let hasText, hasIcon\n      const tabs = this.tabs\n      for (let tab of tabs) {\n        if (tab.hasText) {\n          hasText = true\n          break\n        }\n      }\n      for (let tab of tabs) {\n        if (tab.hasIcon) {\n          hasIcon = true\n          break\n        }\n      }\n\n      if (hasText && hasIcon) {\n        this.$set(this.classes, 'mdc-tab-bar--icons-with-text', true)\n      } else if (hasIcon) {\n        this.$set(this.classes, 'mdc-tab-bar--icon-tab-bar', true)\n      }\n\n      if (this.foundation) {\n        const activeTabIndex = this.foundation.getActiveTabIndex()\n        if (activeTabIndex >= 0) {\n          this.foundation.switchToTabAtIndex(activeTabIndex, true)\n        } else {\n          this.foundation.switchToTabAtIndex(0, true)\n        }\n        this.foundation.layout()\n      }\n    }\n\n    resetTabs()\n\n    this.slotObserver = new MutationObserver(() => resetTabs())\n    this.slotObserver.observe(this.$el, { childList: true, subtree: true })\n\n    this.foundation.init()\n  },\n  beforeDestroy () {\n    this.slotObserver.disconnect()\n    this.foundation.destroy()\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC TextField Line Ripple.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the line ripple into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCLineRippleAdapter {\n  /**\n   * Adds a class to the line ripple element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the line ripple element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the line ripple element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Registers an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerEventHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterEventHandler(evtType, handler) {}\n}\n\nexport default MDCLineRippleAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCLineRippleAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCLineRippleAdapter>}\n * @final\n */\nclass MDCLineRippleFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCLineRippleAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCLineRippleAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCLineRippleAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCLineRippleAdapter=} adapter\n   */\n  constructor(adapter = /** @type {!MDCLineRippleAdapter} */ ({})) {\n    super(Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);\n  }\n\n  init() {\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  /**\n   * Activates the line ripple\n   */\n  activate() {\n    this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  }\n\n  /**\n   * Sets the center of the ripple animation to the given X coordinate.\n   * @param {!number} xCoordinate\n   */\n  setRippleCenter(xCoordinate) {\n    const attributeString =\n        `transform-origin: ${xCoordinate}px center`;\n\n    this.adapter_.setAttr('style', attributeString);\n  }\n\n  /**\n   * Deactivates the line ripple\n   */\n  deactivate() {\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  }\n\n  /**\n   * Handles a transition end event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    const isDeactivating = this.adapter_.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  }\n}\n\nexport default MDCLineRippleFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  ROLE: 'role',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',\n  HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Helper Text.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the TextField helper text into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldHelperTextAdapter {\n  /**\n   * Adds a class to the helper text element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the helper text element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns whether or not the helper text element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the helper text element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the helper text element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content for the helper text element.\n   * @param {string} content\n   */\n  setContent(content) {}\n}\n\nexport default MDCTextFieldHelperTextAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldHelperTextAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}\n * @final\n */\nclass MDCTextFieldHelperTextFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldHelperTextAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldHelperTextAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldHelperTextAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {string} content\n   */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /** @param {boolean} isPersistent Sets the persistency of the helper text. */\n  setPersistent(isPersistent) {\n    if (isPersistent) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    }\n  }\n\n  /**\n   * @param {boolean} isValidation True to make the helper text act as an\n   *   error validation message.\n   */\n  setValidation(isValidation) {\n    if (isValidation) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    }\n  }\n\n  /** Makes the helper text visible to the screen reader. */\n  showToScreenReader() {\n    this.adapter_.removeAttr(strings.ARIA_HIDDEN);\n  }\n\n  /**\n   * Sets the validity of the helper text based on the input validity.\n   * @param {boolean} inputIsValid\n   */\n  setValidity(inputIsValid) {\n    const helperTextIsPersistent = this.adapter_.hasClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    const helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    const validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;\n\n    if (validationMsgNeedsDisplay) {\n      this.adapter_.setAttr(strings.ROLE, 'alert');\n    } else {\n      this.adapter_.removeAttr(strings.ROLE);\n    }\n\n    if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n      this.hide_();\n    }\n  }\n\n  /**\n   * Hides the help text from screen readers.\n   * @private\n   */\n  hide_() {\n    this.adapter_.setAttr(strings.ARIA_HIDDEN, 'true');\n  }\n}\n\nexport default MDCTextFieldHelperTextFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ICON_EVENT: 'MDCTextField:icon',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Icon.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the text field icon into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldIconAdapter {\n  /**\n   * Sets an attribute on the icon element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Registers an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * Emits a custom event \"MDCTextField:icon\" denoting a user has clicked the icon.\n   */\n  notifyIconAction() {}\n}\n\nexport default MDCTextFieldIconAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldIconAdapter from './adapter';\nimport {strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}\n * @final\n */\nclass MDCTextFieldIconFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldIconAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldIconAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldIconAdapter} */ ({\n      setAttr: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      notifyIconAction: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldIconAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldIconFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction(evt);\n  }\n\n  init() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {boolean} disabled\n   */\n  setDisabled(disabled) {\n    if (disabled) {\n      this.adapter_.setAttr('tabindex', '-1');\n    } else {\n      this.adapter_.setAttr('tabindex', '0');\n    }\n  }\n\n  /**\n   * Handles an interaction event\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyIconAction();\n    }\n  }\n}\n\nexport default MDCTextFieldIconFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-text-field__label--float-above',\n  LABEL_SHAKE: 'mdc-text-field__label--shake',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Text Field label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldLabelAdapter {\n  /**\n   * Adds a class to the label element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the label element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {}\n}\n\nexport default MDCTextFieldLabelAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldLabelAdapter>}\n * @final\n */\nclass MDCTextFieldLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCTextFieldLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldLabelFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {\n    return this.adapter_.getWidth();\n  }\n\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param {boolean} isValid Whether the input's value is valid (passes all\n   *     validity checks).\n   * @param {boolean} isFocused Whether the input is focused.\n   */\n  styleShake(isValid, isFocused) {\n    const {LABEL_SHAKE} = MDCTextFieldLabelFoundation.cssClasses;\n    if (isValid || isFocused) {\n      this.adapter_.removeClass(LABEL_SHAKE);\n    } else {\n      this.adapter_.addClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Styles the label to float or defloat as necessary.\n   * @param {string} value The value of the input.\n   * @param {boolean} isFocused Whether the input is focused.\n   * @param {boolean} isBadInput The input's `validity.badInput` value.\n   */\n  styleFloat(value, isFocused, isBadInput) {\n    const {LABEL_FLOAT_ABOVE, LABEL_SHAKE} = MDCTextFieldLabelFoundation.cssClasses;\n    if (!!value || isFocused) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else if (!isBadInput) {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n}\n\nexport default MDCTextFieldLabelFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  PATH_SELECTOR: '.mdc-text-field__outline-path',\n  IDLE_OUTLINE_SELECTOR: '.mdc-text-field__idle-outline',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Outline.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Text Field outline into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldOutlineAdapter {\n  /**\n   * Returns the width of the root element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Returns the height of the root element.\n   * @return {number}\n   */\n  getHeight() {}\n\n  /**\n   * Sets the \"d\" attribute of the outline element's SVG path.\n   * @param {string} value\n   */\n  setOutlinePathAttr(value) {}\n\n  /**\n   * Returns the idle outline element's computed style value of the given css property `propertyName`.\n   * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getIdleOutlineStyleValue(propertyName) {}\n}\n\nexport default MDCTextFieldOutlineAdapter;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldOutlineAdapter from './adapter';\nimport {strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldOutlineAdapter>}\n * @final\n */\nclass MDCTextFieldOutlineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldOutlineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldOutlineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldOutlineAdapter} */ ({\n      getWidth: () => {},\n      getHeight: () => {},\n      setOutlinePathAttr: () => {},\n      getIdleOutlineStyleValue: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldOutlineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldOutlineFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Updates the SVG path of the focus outline element based on the given width of the\n   * label element and the RTL context.\n   * @param {number} labelWidth\n   * @param {boolean=} isRtl\n   */\n  updateSvgPath(labelWidth, isRtl = false) {\n    // Fall back to reading a specific corner's style because Firefox doesn't report the style on border-radius.\n    const radiusStyleValue = this.adapter_.getIdleOutlineStyleValue('border-radius') ||\n        this.adapter_.getIdleOutlineStyleValue('border-top-left-radius');\n    const radius = parseFloat(radiusStyleValue);\n    const width = this.adapter_.getWidth();\n    const height = this.adapter_.getHeight();\n    const cornerWidth = radius + 1.2;\n    const leadingStrokeLength = Math.abs(11 - cornerWidth);\n    const paddedLabelWidth = labelWidth + 8;\n\n    // The right, bottom, and left sides of the outline follow the same SVG path.\n    const pathMiddle = 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius\n      + 'v' + (height - (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius\n      + 'h' + (-width + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius\n      + 'v' + (-height + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;\n\n    let path;\n    if (!isRtl) {\n      path = 'M' + (cornerWidth + leadingStrokeLength + paddedLabelWidth) + ',' + 1\n        + 'h' + (width - (2 * cornerWidth) - paddedLabelWidth - leadingStrokeLength)\n        + pathMiddle\n        + 'h' + leadingStrokeLength;\n    } else {\n      path = 'M' + (width - cornerWidth - leadingStrokeLength) + ',' + 1\n        + 'h' + leadingStrokeLength\n        + pathMiddle\n        + 'h' + (width - (2 * cornerWidth) - paddedLabelWidth - leadingStrokeLength);\n    }\n\n    this.adapter_.setOutlinePathAttr(path);\n  }\n}\n\nexport default MDCTextFieldOutlineFoundation;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  INPUT_SELECTOR: '.mdc-text-field__input',\n  LABEL_SELECTOR: '.mdc-text-field__label',\n  ICON_SELECTOR: '.mdc-text-field__icon',\n  OUTLINE_SELECTOR: '.mdc-text-field__outline',\n  BOTTOM_LINE_SELECTOR: '.mdc-line-ripple',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-text-field',\n  UPGRADED: 'mdc-text-field--upgraded',\n  DISABLED: 'mdc-text-field--disabled',\n  DENSE: 'mdc-text-field--dense',\n  FOCUSED: 'mdc-text-field--focused',\n  INVALID: 'mdc-text-field--invalid',\n  BOX: 'mdc-text-field--box',\n  OUTLINED: 'mdc-text-field--outlined',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n  DENSE_LABEL_SCALE: 0.923,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation';\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\nimport MDCTextFieldLabelFoundation from './label/foundation';\nimport MDCTextFieldOutlineFoundation from './outline/foundation';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * @typedef {{\n *   value: string,\n *   disabled: boolean,\n *   badInput: boolean,\n *   validity: {\n *     badInput: boolean,\n *     valid: boolean,\n *   },\n * }}\n */\nlet NativeInputType;\n\n/**\n * @typedef {{\n *   lineRipple: (!MDCLineRippleFoundation|undefined),\n *   helperText: (!MDCTextFieldHelperTextFoundation|undefined),\n *   icon: (!MDCTextFieldIconFoundation|undefined),\n *   label: (!MDCTextFieldLabelFoundation|undefined),\n *   outline: (!MDCTextFieldOutlineFoundation|undefined)\n * }}\n */\nlet FoundationMapType;\n\n/**\n * Adapter for MDC Text Field.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Text Field into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Returns an object representing the native text input element, with a\n   * similar API shape. The object returned should include the value, disabled\n   * and badInput properties, as well as the checkValidity() function. We never\n   * alter the value within our code, however we do update the disabled\n   * property, so if you choose to duck-type the return value for this method\n   * in your implementation it's important to keep this in mind. Also note that\n   * this method can return null, which the foundation will handle gracefully.\n   * @return {?Element|?NativeInputType}\n   */\n  getNativeInput() {}\n\n  /**\n   * Returns true if the textfield is focused.\n   * We achieve this via `document.activeElement === this.root_`.\n   * @return {boolean}\n   */\n  isFocused() {}\n\n  /**\n   * Returns true if the direction of the root element is set to RTL.\n   * @return {boolean}\n   */\n  isRtl() {}\n\n  /**\n   * Activates the line ripple.\n   */\n  activateLineRipple() {}\n\n  /**\n   * Deactivates the line ripple.\n   */\n  deactivateLineRipple() {}\n\n  /**\n   * Sets the transform origin of the line ripple.\n   * @param {number} normalizedX\n   */\n  setLineRippleTransformOrigin(normalizedX) {}\n}\n\nexport {MDCTextFieldAdapter, NativeInputType, FoundationMapType};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCTextFieldAdapter, NativeInputType, FoundationMapType} from './adapter';\n/* eslint-disable no-unused-vars */\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation';\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\nimport MDCTextFieldLabelFoundation from './label/foundation';\nimport MDCTextFieldOutlineFoundation from './outline/foundation';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldAdapter>}\n * @final\n */\nclass MDCTextFieldFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * {@see MDCTextFieldAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      registerTextFieldInteractionHandler: () => {},\n      deregisterTextFieldInteractionHandler: () => {},\n      registerInputInteractionHandler: () => {},\n      deregisterInputInteractionHandler: () => {},\n      getNativeInput: () => {},\n      isFocused: () => {},\n      isRtl: () => {},\n      activateLineRipple: () => {},\n      deactivateLineRipple: () => {},\n      setLineRippleTransformOrigin: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldAdapter} adapter\n   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n   */\n  constructor(adapter, foundationMap = /** @type {!FoundationMapType} */ ({})) {\n    super(Object.assign(MDCTextFieldFoundation.defaultAdapter, adapter));\n\n    /** @type {!MDCTextFieldHelperTextFoundation|undefined} */\n    this.helperText_ = foundationMap.helperText;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    this.icon_ = foundationMap.icon;\n    /** @type {!MDCTextFieldLabelFoundation|undefined} */\n    this.label_ = foundationMap.label;\n    /** @type {!MDCTextFieldOutlineFoundation|undefined} */\n    this.outline_ = foundationMap.outline;\n\n    /** @private {boolean} */\n    this.isFocused_ = false;\n    /** @private {boolean} */\n    this.receivedUserInput_ = false;\n    /** @private {boolean} */\n    this.useCustomValidityChecking_ = false;\n    /** @private {boolean} */\n    this.isValid_ = true;\n    /** @private {function(): undefined} */\n    this.inputFocusHandler_ = () => this.activateFocus();\n    /** @private {function(): undefined} */\n    this.inputBlurHandler_ = () => this.deactivateFocus();\n    /** @private {function(): undefined} */\n    this.inputInputHandler_ = () => this.autoCompleteFocus();\n    /** @private {function(!Event): undefined} */\n    this.setPointerXOffset_ = (evt) => this.setTransformOrigin(evt);\n    /** @private {function(!Event): undefined} */\n    this.textFieldInteractionHandler_ = () => this.handleTextFieldInteraction();\n  }\n\n  init() {\n    this.adapter_.addClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n    // Ensure label does not collide with any pre-filled value.\n    if (this.label_ && this.getValue()) {\n      this.label_.styleFloat(\n        this.getValue(), this.isFocused_, this.isBadInput_());\n    }\n\n    if (this.adapter_.isFocused()) {\n      this.inputFocusHandler_();\n    }\n\n    this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.registerInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n  }\n\n  destroy() {\n    this.adapter_.removeClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n    this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.deregisterInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n  }\n\n  /**\n   * Handles user interactions with the Text Field.\n   */\n  handleTextFieldInteraction() {\n    if (this.adapter_.getNativeInput().disabled) {\n      return;\n    }\n    this.receivedUserInput_ = true;\n  }\n\n  /**\n   * Updates the focus outline for outlined text fields.\n   */\n  updateOutline() {\n    if (!this.outline_ || !this.label_) {\n      return;\n    }\n\n    const isDense = this.adapter_.hasClass(cssClasses.DENSE);\n    const labelScale = isDense ? numbers.DENSE_LABEL_SCALE : numbers.LABEL_SCALE;\n    const labelWidth = this.label_.getWidth() * labelScale;\n    const isRtl = this.adapter_.isRtl();\n    this.outline_.updateSvgPath(labelWidth, isRtl);\n  }\n\n  /**\n   * Activates the text field focus state.\n   */\n  activateFocus() {\n    this.isFocused_ = true;\n    this.styleFocused_(this.isFocused_);\n    this.adapter_.activateLineRipple();\n    if (this.outline_) {\n      this.updateOutline();\n    }\n    if (this.label_) {\n      this.label_.styleShake(this.isValid(), this.isFocused_);\n      this.label_.styleFloat(\n        this.getValue(), this.isFocused_, this.isBadInput_());\n    }\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  }\n\n  /**\n   * Sets the line ripple's transform origin, so that the line ripple activate\n   * animation will animate out from the user's click location.\n   * @param {!Event} evt\n   */\n  setTransformOrigin(evt) {\n    const targetClientRect = evt.target.getBoundingClientRect();\n    const evtCoords = {x: evt.clientX, y: evt.clientY};\n    const normalizedX = evtCoords.x - targetClientRect.left;\n    this.adapter_.setLineRippleTransformOrigin(normalizedX);\n  }\n\n  /**\n   * Activates the Text Field's focus state in cases when the input value\n   * changes without user input (e.g. programatically).\n   */\n  autoCompleteFocus() {\n    if (!this.receivedUserInput_) {\n      this.activateFocus();\n    }\n  }\n\n  /**\n   * Deactivates the Text Field's focus state.\n   */\n  deactivateFocus() {\n    this.isFocused_ = false;\n    this.adapter_.deactivateLineRipple();\n    const input = this.getNativeInput_();\n    const shouldRemoveLabelFloat = !input.value && !this.isBadInput_();\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    this.styleFocused_(this.isFocused_);\n    if (this.label_) {\n      this.label_.styleShake(this.isValid(), this.isFocused_);\n      this.label_.styleFloat(\n        this.getValue(), this.isFocused_, this.isBadInput_());\n    }\n    if (shouldRemoveLabelFloat) {\n      this.receivedUserInput_ = false;\n    }\n  }\n\n  /**\n   * @return {string} The value of the input Element.\n   */\n  getValue() {\n    return this.getNativeInput_().value;\n  }\n\n  /**\n   * @param {string} value The value to set on the input Element.\n   */\n  setValue(value) {\n    this.getNativeInput_().value = value;\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.label_) {\n      this.label_.styleShake(isValid, this.isFocused_);\n      this.label_.styleFloat(\n        this.getValue(), this.isFocused_, this.isBadInput_());\n    }\n  }\n\n  /**\n   * @return {boolean} If a custom validity is set, returns that value.\n   *     Otherwise, returns the result of native validity checks.\n   */\n  isValid() {\n    return this.useCustomValidityChecking_\n      ? this.isValid_ : this.isNativeInputValid_();\n  }\n\n  /**\n   * @param {boolean} isValid Sets the validity state of the Text Field.\n   */\n  setValid(isValid) {\n    this.useCustomValidityChecking_ = true;\n    this.isValid_ = isValid;\n    // Retrieve from the getter to ensure correct logic is applied.\n    isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.label_) {\n      this.label_.styleShake(isValid, this.isFocused_);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field is disabled.\n   */\n  isDisabled() {\n    return this.getNativeInput_().disabled;\n  }\n\n  /**\n   * @param {boolean} disabled Sets the text-field disabled or enabled.\n   */\n  setDisabled(disabled) {\n    this.getNativeInput_().disabled = disabled;\n    this.styleDisabled_(disabled);\n  }\n\n  /**\n   * @return {boolean} True if the Text Field is required.\n   */\n  isRequired() {\n    return this.getNativeInput_().required;\n  }\n\n  /**\n   * @param {boolean} isRequired Sets the text-field required or not.\n   */\n  setRequired(isRequired) {\n    this.getNativeInput_().required = isRequired;\n    // Addition of the asterisk is automatic based on CSS, but validity checking\n    // needs to be manually run.\n    this.styleValidity_(this.isValid());\n  }\n\n  /**\n   * @param {string} content Sets the content of the helper text.\n   */\n  setHelperTextContent(content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field input fails in converting the\n   *     user-supplied value.\n   * @private\n   */\n  isBadInput_() {\n    return this.getNativeInput_().validity.badInput;\n  }\n\n  /**\n   * @return {boolean} The result of native validity checking\n   *     (ValidityState.valid).\n   */\n  isNativeInputValid_() {\n    return this.getNativeInput_().validity.valid;\n  }\n\n  /**\n   * Styles the component based on the validity state.\n   * @param {boolean} isValid\n   * @private\n   */\n  styleValidity_(isValid) {\n    const {INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isValid) {\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.addClass(INVALID);\n    }\n    if (this.helperText_) {\n      this.helperText_.setValidity(isValid);\n    }\n  }\n\n  /**\n   * Styles the component based on the focused state.\n   * @param {boolean} isFocused\n   * @private\n   */\n  styleFocused_(isFocused) {\n    const {FOCUSED} = MDCTextFieldFoundation.cssClasses;\n    if (isFocused) {\n      this.adapter_.addClass(FOCUSED);\n    } else {\n      this.adapter_.removeClass(FOCUSED);\n    }\n  }\n\n  /**\n   * Styles the component based on the disabled state.\n   * @param {boolean} isDisabled\n   * @private\n   */\n  styleDisabled_(isDisabled) {\n    const {DISABLED, INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isDisabled) {\n      this.adapter_.addClass(DISABLED);\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n    if (this.icon_) {\n      this.icon_.setDisabled(isDisabled);\n    }\n  }\n\n  /**\n   * @return {!Element|!NativeInputType} The native text input from the\n   * host environment, or a dummy if none exists.\n   * @private\n   */\n  getNativeInput_() {\n    return this.adapter_.getNativeInput() ||\n    /** @type {!NativeInputType} */ ({\n      value: '',\n      disabled: false,\n      validity: {\n        badInput: false,\n        valid: true,\n      },\n    });\n  }\n}\n\nexport default MDCTextFieldFoundation;\n","import {BasePlugin} from '../base'\nimport mdcTextField from './mdc-textfield.vue'\n\nexport {mdcTextField}\n\nexport default BasePlugin({\n  mdcTextField\n})\n","<template>\r\n  <div class=\"mdc-textfield-wrapper\" :style=\"{width:fullwidth?'100%':undefined}\">\r\n\r\n    <div ref=\"root\" :class=\"rootClasses\">\r\n\r\n      <i ref=\"icon\" v-if=\"!!hasLeadingIcon\"\r\n        tabindex=\"0\" \r\n        class=\"mdc-text-field__icon\"  \r\n        :class=\"hasLeadingIcon.classes\">\r\n        <slot name=\"leading-icon\">{{ hasLeadingIcon.content }}</slot>\r\n      </i>\r\n\r\n      <textarea ref=\"input\" v-if=\"multiline\"\r\n        v-on=\"$listeners\"\r\n        v-bind=\"inputAttrs\"\r\n        :class=\"inputClasses\"\r\n        @input=\"updateValue($event.target.value)\"\r\n        :minlength=\"minlength\" :maxlength=\"maxlength\"\r\n        :placeholder=\"inputPlaceHolder\"\r\n        :aria-label=\"inputPlaceHolder\"\r\n        :aria-controls=\"inputAriaControls\"\r\n        :rows=\"rows\" :cols=\"cols\" \r\n        ></textarea>\r\n\r\n      <input ref=\"input\" v-else\r\n        v-on=\"$listeners\" \r\n        v-bind=\"inputAttrs\"\r\n        :class=\"inputClasses\"\r\n        @input=\"updateValue($event.target.value)\"\r\n        :type=\"type\"\r\n        :minlength=\"minlength\" :maxlength=\"maxlength\"\r\n        :placeholder=\"inputPlaceHolder\"\r\n        :aria-label=\"inputPlaceHolder\"\r\n        :aria-controls=\"inputAriaControls\" \r\n        />\r\n\r\n      <label ref=\"label\" :class=\"labelClassesUpgraded\" :for=\"_uid\"  v-if=\"hasLabel\">\r\n        {{ label }}\r\n      </label>\r\n\r\n      <i ref=\"icon\" v-if=\"!!hasTrailingIcon\"\r\n        tabindex=\"0\" \r\n        class=\"mdc-text-field__icon\"  \r\n        :class=\"hasTrailingIcon.classes\">\r\n        <slot name=\"trailing-icon\">{{ hasTrailingIcon.content }}</slot>\r\n      </i>\r\n\r\n      <div ref=\"outline\" class=\"mdc-text-field__outline\" v-if=\"hasOutline\">\r\n        <svg>\r\n          <path class=\"mdc-text-field__outline-path\" :d=\"outlinePathAttr\" />\r\n        </svg>\r\n      </div>\r\n      <div ref=\"outlineIdle\" class=\"mdc-text-field__idle-outline\" v-if=\"hasOutline\"></div>\r\n      <div ref=\"bottom\" :class=\"bottomClasses\" v-if=\"hasBottomLine\"></div>\r\n\r\n    </div>\r\n\r\n    <p ref=\"help\" :id=\"'help-'+_uid\" :class=\"helpClasses\"\r\n      aria-hidden=\"true\" v-if=\"helptext\">\r\n      {{ helptext  }}\r\n    </p>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MDCTextfieldFoundation from '@material/textfield/foundation'\r\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation'\r\nimport MDCTextFieldHelperTextFoundation from '@material/textfield/helper-text/foundation'\r\nimport MDCTextFieldIconFoundation from '@material/textfield/icon/foundation';\r\nimport MDCTextFieldLabelFoundation from '@material/textfield/label/foundation';\r\nimport MDCTextFieldOutlineFoundation from '@material/textfield/outline/foundation';\r\n\r\nimport {\r\n  extractIconProp, \r\n  DispatchFocusMixin, CustomElementMixin} from '../base'\r\nimport {RippleBase} from '../ripple'\r\n\r\nexport default {\r\n  name: 'mdc-textfield',\r\n  mixins: [CustomElementMixin, DispatchFocusMixin],\r\n  model: {\r\n    prop: 'value',\r\n    event: 'model'\r\n  },\r\n  props: {\r\n    value: String,\r\n    type: {\r\n      type: String,\r\n      default: 'text',\r\n      validator: function (value) {\r\n        return ['text', 'email', 'search', 'password', 'tel', 'url']\r\n          .indexOf(value) !== -1\r\n      }\r\n    },\r\n    dense: Boolean,\r\n    label: String,\r\n    helptext: String,\r\n    helptextPersistent: Boolean,\r\n    helptextValidation: Boolean,\r\n    box: Boolean,\r\n    outline: Boolean,\r\n    disabled: Boolean,\r\n    required: Boolean,\r\n    valid: {type: Boolean, default: undefined}, \r\n    fullwidth: Boolean,\r\n    multiline: Boolean,\r\n    leadingIcon: [String, Array, Object],\r\n    trailingIcon: [String, Array, Object],\r\n    size: { type: [Number, String], default: 20 },\r\n    minlength: { type: [Number, String], default: undefined },\r\n    maxlength: { type: [Number, String], default: undefined },\r\n    rows: { type: [Number, String], default: 8 },\r\n    cols: { type: [Number, String], default: 40 },\r\n    \r\n    // other input props  \r\n    name: String,\r\n    readonly: Boolean,\r\n    autocomplete: Boolean,\r\n    autofocus: Boolean,\r\n  },\r\n  data: function () {\r\n    return {\r\n      text: this.value,\r\n      rootClasses: {\r\n        'mdc-textfield': true,\r\n        'mdc-text-field': true,\r\n        'mdc-text-field--upgraded': true,\r\n        'mdc-text-field--disabled': this.disabled,\r\n        'mdc-text-field--dense': this.dense,\r\n        'mdc-text-field--fullwidth': this.fullwidth,\r\n        'mdc-text-field--textarea': this.multiline,\r\n        'mdc-text-field--box': !this.fullwidth && this.box,\r\n        'mdc-text-field--outlined': !this.fullwidth && this.outline,\r\n      },\r\n      inputClasses: {\r\n        'mdc-text-field__input': true\r\n      },\r\n      labelClasses: {\r\n        'mdc-text-field__label': true\r\n      },\r\n      bottomClasses: {\r\n        'mdc-line-ripple': true\r\n      },\r\n      helpClasses: {\r\n        'mdc-text-field-helper-text': true,\r\n        'mdc-text-field-helper-text--persistent': this.helptextPersistent,\r\n        'mdc-text-field-helper-text--validation-msg': this.helptextValidation\r\n      },\r\n      outlinePathAttr: undefined,\r\n    }\r\n  },\r\n  watch:  {\r\n    disabled () {\r\n      this.foundation && this.foundation.setDisabled(this.disabled)\r\n    },\r\n    required () {\r\n      this.foundation && this.foundation.setRequired(this.disabled)\r\n    },\r\n    valid () {\r\n      if (typeof this.valid !== \"undefined\") {\r\n        this.foundation && this.foundation.setValid(this.valid)\r\n      }\r\n    },\r\n    dense () {\r\n        this.$set(this.rootClasses, 'mdc-text-field--dense', this.dense)\r\n    },\r\n    helptextPersistent () {\r\n      this.helperTextFoundation \r\n        && this.helperTextFoundation.setPersistent(this.helptextPersistent)\r\n    },\r\n    helptextValidation () {\r\n      this.helperTextFoundation \r\n        && this.helperTextFoundation.setValidation(this.helptextValidation)\r\n    },\r\n    value (value) {\r\n      if (this.foundation) {\r\n        if (value !== this.foundation.getValue()) {\r\n          this.foundation.setValue(value)\r\n        }\r\n      } \r\n    }\r\n  },\r\n  methods: {\r\n    updateValue (value) {\r\n      this.$emit('model', value)\r\n    },\r\n    focus () {\r\n      this.$refs.input && this.$refs.input.focus() \r\n    },\r\n    blur () {\r\n      this.$refs.input && this.$refs.input.blur() \r\n    }\r\n  },\r\n  computed: {\r\n    inputAttrs () {\r\n      let { name, readonly, autocomplete, autofocus} = this\r\n      return { name, readonly, autocomplete, autofocus};\r\n    },\r\n    inputPlaceHolder () {\r\n      return this.fullwidth ? this.label : undefined\r\n    },\r\n    inputAriaControls () {\r\n      return this.help ? 'help-' + this._uid: undefined\r\n    },\r\n    hasLabel () {\r\n      return !this.fullwidth && this.label\r\n    },\r\n    hasOutline () {\r\n      return !this.fullwidth && this.outline \r\n    },\r\n    hasBottomLine () {\r\n      return !this.hasOutline && !this.multiline\r\n    },\r\n    hasLeadingIcon () {\r\n      if ((this.leadingIcon || this.$slots['leading-icon'])\r\n         && !(this.trailingIcon || this.$slots['trailing-icon'])) {\r\n        return this.leadingIcon ? extractIconProp(this.leadingIcon) : {}\r\n      }\r\n      return false\r\n    },\r\n    hasTrailingIcon () {\r\n      if (this.trailingIcon || this.$slots['trailing-icon']) {\r\n        return this.trailingIcon ? extractIconProp(this.trailingIcon) : {}\r\n      }\r\n      return false\r\n    },\r\n    labelClassesUpgraded () {\r\n      return Object.assign(this.labelClasses, {\r\n        'mdc-text-field__label--float-above': this.value\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n\r\n    if (this.$refs.bottom) {\r\n      this.bottomLineFoundation = new MDCLineRippleFoundation({\r\n        addClass: (className) => {\r\n          this.$set(this.bottomClasses, className, true)\r\n        },\r\n        removeClass: (className) => {\r\n          this.$delete(this.bottomClasses, className)\r\n        },\r\n        hasClass: (className) => {\r\n          this.bottomClasses.classList.contains(className)\r\n        },\r\n        setAttr: (name, value) => {\r\n          this.$refs.bottom.setAttribute(name, value)\r\n        },\r\n        registerEventHandler: (evtType, handler) => {\r\n          this.$refs.bottom.addEventListener(evtType, handler)\r\n        },\r\n        deregisterEventHandler: (evtType, handler) => {\r\n          this.$refs.bottom.removeEventListener(evtType, handler)\r\n        },\r\n      })\r\n      this.bottomLineFoundation.init()\r\n    }\r\n\r\n    if (this.$refs.help) {\r\n      this.helperTextFoundation = new MDCTextFieldHelperTextFoundation({\r\n        addClass: (className) => {\r\n          this.$set(this.helpClasses, className, true)\r\n        },\r\n        removeClass: (className) => {\r\n          this.$delete(this.helpClasses, className)\r\n        },\r\n        hasClass: (className) => {\r\n          return this.$refs.help.classList.contains(className)\r\n        },\r\n        setAttr: (name, value) => {\r\n          this.$refs.help.setAttribute(name, value)\r\n        },\r\n        removeAttr: (name) => {\r\n          this.$refs.help.removeAttribute(name)\r\n        },\r\n        setContent: ( /*content*/) => {\r\n          // help text get's updated from {{helptext}}\r\n          // this.$refs.help.textContent = content;\r\n        }\r\n      })\r\n      this.helperTextFoundation.init()\r\n    }\r\n\r\n    if (this.$refs.icon) {\r\n      if (this.hasLeadingIcon){\r\n        this.$set(this.rootClasses, 'mdc-text-field--with-leading-icon', true)\r\n      } else if (this.hasTrailingIcon) {\r\n        this.$set(this.rootClasses, 'mdc-text-field--with-trailing-icon', true)\r\n      }\r\n\r\n      this.iconFoundation = new MDCTextFieldIconFoundation({\r\n        setAttr: (attr, value) => this.$refs.icon.setAttribute(attr, value),\r\n        registerInteractionHandler: (evtType, handler) => {\r\n          this.$refs.icon.addEventListener(evtType, handler)\r\n        },\r\n        deregisterInteractionHandler: (evtType, handler) => {\r\n          this.$refs.icon.removeEventListener(evtType, handler)\r\n        },\r\n        notifyIconAction: () => this.$emit('icon-action')\r\n      })\r\n      this.iconFoundation.init()\r\n    }    \r\n    \r\n    if (this.$refs.label) {\r\n      this.labelFoundation = new MDCTextFieldLabelFoundation({\r\n        addClass: (className) => {\r\n          this.$set(this.labelClasses, className, true)\r\n        },\r\n        removeClass: (className) => {\r\n          this.$delete(this.labelClasses, className)\r\n        },\r\n        getWidth: () => this.$refs.label.offsetWidth,\r\n      })\r\n      this.labelFoundation.init()\r\n    }    \r\n\r\n    if (this.$refs.outline) {\r\n      this.outlineFoundation = new MDCTextFieldOutlineFoundation({\r\n        getWidth: () => this.$refs.outline.offsetWidth,\r\n        getHeight: () => this.$refs.outline.offsetHeight,\r\n        setOutlinePathAttr: (value) => {\r\n          this.outlinePathAttr = value\r\n        },\r\n        getIdleOutlineStyleValue: (propertyName) => {\r\n          const idleOutlineElement = this.$refs.outlineIdle;\r\n          if (idleOutlineElement) {\r\n            return window.getComputedStyle(idleOutlineElement)\r\n              .getPropertyValue(propertyName);\r\n          }\r\n        },\r\n      })\r\n      this.outlineFoundation.init()\r\n    }    \r\n\r\n    this.foundation = new MDCTextfieldFoundation({\r\n      addClass: (className) => {\r\n        this.$set(this.rootClasses, className, true)\r\n      },\r\n      removeClass: (className) => {\r\n        this.$delete(this.rootClasses, className)\r\n      },\r\n      hasClass: (className) => {\r\n        this.$refs.root.classList.contains(className)\r\n      },\r\n      registerTextFieldInteractionHandler: (evtType, handler) => {\r\n        this.$refs.root.addEventListener(evtType, handler)\r\n      },\r\n      deregisterTextFieldInteractionHandler: (evtType, handler) => {\r\n        this.$refs.root.removeEventListener(evtType, handler)\r\n      },\r\n      isFocused: () => {\r\n        return document.activeElement === this.$refs.input\r\n      },\r\n      isRtl: () => window.getComputedStyle(this.$refs.root).getPropertyValue('direction') === 'rtl',     \r\n      deactivateLineRipple: () => {\r\n        if (this.bottom) {\r\n          this.bottom.deactivate();\r\n        }\r\n      },\r\n      activateLineRipple: () => {\r\n        if (this.bottom) {\r\n          this.bottom.activate();\r\n        }\r\n      },\r\n      setLineRippleTransformOrigin: (normalizedX) => {\r\n        if (this.bottom) {\r\n          this.bottom.setRippleCenter(normalizedX);\r\n        }\r\n      },\r\n      registerInputInteractionHandler: (evtType, handler) => {\r\n        this.$refs.input.addEventListener(evtType, handler)\r\n      },\r\n      deregisterInputInteractionHandler: (evtType, handler) => {\r\n        this.$refs.input.removeEventListener(evtType, handler)\r\n      },\r\n      getNativeInput: () => {\r\n        return this.$refs.input\r\n      },\r\n      \r\n    }, {\r\n      bottomLine: this.bottomLineFoundation,\r\n      helperText: this.helperTextFoundation,\r\n      icon: this.iconFoundation,\r\n      label: this.labelFoundation,\r\n      outline: this.outlineFoundation,\r\n    })\r\n\r\n\r\n    this.foundation.init()\r\n    this.foundation.setValue(this.value)\r\n    this.foundation.setDisabled(this.disabled)\r\n    this.foundation.setRequired(this.required)\r\n    if (typeof this.valid !== \"undefined\") {\r\n      this.foundation.setValid(this.valid)\r\n    }\r\n\r\n    if (this.textbox) {\r\n      this.ripple = new RippleBase(this)\r\n      this.ripple.init()\r\n    }\r\n\r\n  },\r\n  beforeDestroy () {\r\n    this.foundation && this.foundation.destroy()\r\n    this.bottomLineFoundation && this.bottomLineFoundation.destroy()\r\n    this.helperTextFoundation && this.helperTextFoundation.destroy()\r\n    this.iconFoundation && this.iconFoundation.destroy()\r\n    this.labelFoundation && this.labelFoundation.destroy()\r\n    this.outlineFoundation && this.outlineFoundation.destroy()\r\n    this.ripple && this.ripple.destroy()\r\n  }\r\n}\r\n\r\n</script>\r\n","<template>\n  <custom-element :tag=\"tag\" \n    class=\"mdc-theme\"\n    :class=\"classes\">\n    <slot />\n  </custom-element>\n</template>\n\n\n<script>\nimport { CustomElement } from '../base'\n\n\nconst THEME_COLORS = [\n  'primary',\n  'secondary',\n  'background',\n  'primary-light',\n  'secondary-light',\n  'secondary-dark',\n  'primary-dark'\n]\n\nconst THEME_STYLES = [\n  'text-primary',\n  'text-secondary',\n  'text-hint',\n  'text-icon',\n  'text-disabled'\n]\n\nexport default {\n  name: 'mdc-theme',\n  components: {\n    CustomElement\n  },\n  props: {\n    tag: {type: String, default: 'div' },\n    color: String,\n    background: String\n  },\n  computed: {\n    classes () {\n      let classes = {}\n\n      if (this.color && THEME_COLORS.indexOf(this.color) !== -1) {\n          classes[`mdc-theme--${this.color}`] = true\n      }\n\n      if (this.background && THEME_COLORS.indexOf(this.background) !== -1) {\n        classes[`mdc-theme--${this.background}-bg`] = true\n\n        if (this.color && THEME_STYLES.indexOf(this.color) !== -1) {\n          classes[`mdc-theme--${this.color}-on-${this.background}`] = true\n        }\n      }\n      return classes\n    }\n  }\n}\n</script>\n","import {BasePlugin} from '../base'\nimport mdcTheme from './mdc-theme.vue'\n\nexport {\n  mdcTheme\n}\n\nexport default BasePlugin({\n  mdcTheme\n})\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const cssClasses = {\n  FIXED: 'mdc-toolbar--fixed',\n  FIXED_LASTROW: 'mdc-toolbar--fixed-lastrow-only',\n  FIXED_AT_LAST_ROW: 'mdc-toolbar--fixed-at-last-row',\n  TOOLBAR_ROW_FLEXIBLE: 'mdc-toolbar--flexible',\n  FLEXIBLE_DEFAULT_BEHAVIOR: 'mdc-toolbar--flexible-default-behavior',\n  FLEXIBLE_MAX: 'mdc-toolbar--flexible-space-maximized',\n  FLEXIBLE_MIN: 'mdc-toolbar--flexible-space-minimized',\n};\n\nexport const strings = {\n  TITLE_SELECTOR: '.mdc-toolbar__title',\n  FIRST_ROW_SELECTOR: '.mdc-toolbar__row:first-child',\n  CHANGE_EVENT: 'MDCToolbar:change',\n};\n\nexport const numbers = {\n  MAX_TITLE_SIZE: 2.125,\n  MIN_TITLE_SIZE: 1.25,\n  TOOLBAR_ROW_HEIGHT: 64,\n  TOOLBAR_ROW_MOBILE_HEIGHT: 56,\n  TOOLBAR_MOBILE_BREAKPOINT: 600,\n};\n","/**\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport MDCFoundation from '@material/base/foundation';\nimport {cssClasses, strings, numbers} from './constants';\n\nexport default class MDCToolbarFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      hasClass: (/* className: string */) => /* boolean */ false,\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      registerScrollHandler: (/* handler: EventListener */) => {},\n      deregisterScrollHandler: (/* handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      getViewportWidth: () => /* number */ 0,\n      getViewportScrollY: () => /* number */ 0,\n      getOffsetHeight: () => /* number */ 0,\n      getFirstRowElementOffsetHeight: () => /* number */ 0,\n      notifyChange: (/* evtData: {flexibleExpansionRatio: number} */) => {},\n      setStyle: (/* property: string, value: string */) => {},\n      setStyleForTitleElement: (/* property: string, value: string */) => {},\n      setStyleForFlexibleRowElement: (/* property: string, value: string */) => {},\n      setStyleForFixedAdjustElement: (/* property: string, value: string */) => {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCToolbarFoundation.defaultAdapter, adapter));\n    this.resizeHandler_ = () => this.checkRowHeight_();\n    this.scrollHandler_ = () => this.updateToolbarStyles_();\n    this.checkRowHeightFrame_ = 0;\n    this.scrollFrame_ = 0;\n    this.executedLastChange_ = false;\n\n    this.calculations_ = {\n      toolbarRowHeight: 0,\n      // Calculated Height ratio. We use ratio to calculate corresponding heights in resize event.\n      toolbarRatio: 0, // The ratio of toolbar height to row height\n      flexibleExpansionRatio: 0, // The ratio of flexible space height to row height\n      maxTranslateYRatio: 0, // The ratio of max toolbar move up distance to row height\n      scrollThresholdRatio: 0, // The ratio of max scrollTop that we should listen to to row height\n      // Derived Heights based on the above key ratios.\n      toolbarHeight: 0,\n      flexibleExpansionHeight: 0, // Flexible row minus toolbar height (derived)\n      maxTranslateYDistance: 0, // When toolbar only fix last row (derived)\n      scrollThreshold: 0,\n    };\n    // Toolbar fixed behavior\n    // If toolbar is fixed\n    this.fixed_ = false;\n    // If fixed is targeted only at the last row\n    this.fixedLastrow_ = false;\n    // Toolbar flexible behavior\n    // If the first row is flexible\n    this.hasFlexibleRow_ = false;\n    // If use the default behavior\n    this.useFlexDefaultBehavior_ = false;\n  }\n\n  init() {\n    this.fixed_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED);\n    this.fixedLastrow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED_LASTROW) & this.fixed_;\n    this.hasFlexibleRow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.TOOLBAR_ROW_FLEXIBLE);\n    if (this.hasFlexibleRow_) {\n      this.useFlexDefaultBehavior_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_DEFAULT_BEHAVIOR);\n    }\n    this.initKeyRatio_();\n    this.setKeyHeights_();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n    this.adapter_.registerScrollHandler(this.scrollHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n    this.adapter_.deregisterScrollHandler(this.scrollHandler_);\n  }\n\n  updateAdjustElementStyles() {\n    if (this.fixed_) {\n      this.adapter_.setStyleForFixedAdjustElement('margin-top', `${this.calculations_.toolbarHeight}px`);\n    }\n  }\n\n  getFlexibleExpansionRatio_(scrollTop) {\n    // To prevent division by zero when there is no flexibleExpansionHeight\n    const delta = 0.0001;\n    return Math.max(0, 1 - scrollTop / (this.calculations_.flexibleExpansionHeight + delta));\n  }\n\n  checkRowHeight_() {\n    cancelAnimationFrame(this.checkRowHeightFrame_);\n    this.checkRowHeightFrame_ = requestAnimationFrame(() => this.setKeyHeights_());\n  }\n\n  setKeyHeights_() {\n    const newToolbarRowHeight = this.getRowHeight_();\n    if (newToolbarRowHeight !== this.calculations_.toolbarRowHeight) {\n      this.calculations_.toolbarRowHeight = newToolbarRowHeight;\n      this.calculations_.toolbarHeight = this.calculations_.toolbarRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.flexibleExpansionHeight =\n        this.calculations_.flexibleExpansionRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.maxTranslateYDistance =\n        this.calculations_.maxTranslateYRatio * this.calculations_.toolbarRowHeight;\n      this.calculations_.scrollThreshold =\n        this.calculations_.scrollThresholdRatio * this.calculations_.toolbarRowHeight;\n      this.updateAdjustElementStyles();\n      this.updateToolbarStyles_();\n    }\n  }\n\n  updateToolbarStyles_() {\n    cancelAnimationFrame(this.scrollFrame_);\n    this.scrollFrame_ = requestAnimationFrame(() => {\n      const scrollTop = this.adapter_.getViewportScrollY();\n      const hasScrolledOutOfThreshold = this.scrolledOutOfThreshold_(scrollTop);\n\n      if (hasScrolledOutOfThreshold && this.executedLastChange_) {\n        return;\n      }\n\n      const flexibleExpansionRatio = this.getFlexibleExpansionRatio_(scrollTop);\n\n      this.updateToolbarFlexibleState_(flexibleExpansionRatio);\n      if (this.fixedLastrow_) {\n        this.updateToolbarFixedState_(scrollTop);\n      }\n      if (this.hasFlexibleRow_) {\n        this.updateFlexibleRowElementStyles_(flexibleExpansionRatio);\n      }\n      this.executedLastChange_ = hasScrolledOutOfThreshold;\n      this.adapter_.notifyChange({flexibleExpansionRatio: flexibleExpansionRatio});\n    });\n  }\n\n  scrolledOutOfThreshold_(scrollTop) {\n    return scrollTop > this.calculations_.scrollThreshold;\n  }\n\n  initKeyRatio_() {\n    const toolbarRowHeight = this.getRowHeight_();\n    const firstRowMaxRatio = this.adapter_.getFirstRowElementOffsetHeight() / toolbarRowHeight;\n    this.calculations_.toolbarRatio = this.adapter_.getOffsetHeight() / toolbarRowHeight;\n    this.calculations_.flexibleExpansionRatio = firstRowMaxRatio - 1;\n    this.calculations_.maxTranslateYRatio =\n      this.fixedLastrow_ ? this.calculations_.toolbarRatio - firstRowMaxRatio : 0;\n    this.calculations_.scrollThresholdRatio =\n      (this.fixedLastrow_ ? this.calculations_.toolbarRatio : firstRowMaxRatio) - 1;\n  }\n\n  getRowHeight_() {\n    const breakpoint = MDCToolbarFoundation.numbers.TOOLBAR_MOBILE_BREAKPOINT;\n    return this.adapter_.getViewportWidth() < breakpoint ?\n      MDCToolbarFoundation.numbers.TOOLBAR_ROW_MOBILE_HEIGHT : MDCToolbarFoundation.numbers.TOOLBAR_ROW_HEIGHT;\n  }\n\n  updateToolbarFlexibleState_(flexibleExpansionRatio) {\n    this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);\n    this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);\n    if (flexibleExpansionRatio === 1) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);\n    } else if (flexibleExpansionRatio === 0) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);\n    }\n  }\n\n  updateToolbarFixedState_(scrollTop) {\n    const translateDistance = Math.max(0, Math.min(\n      scrollTop - this.calculations_.flexibleExpansionHeight,\n      this.calculations_.maxTranslateYDistance));\n    this.adapter_.setStyle('transform', `translateY(${-translateDistance}px)`);\n\n    if (translateDistance === this.calculations_.maxTranslateYDistance) {\n      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);\n    } else {\n      this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);\n    }\n  }\n\n  updateFlexibleRowElementStyles_(flexibleExpansionRatio) {\n    if (this.fixed_) {\n      const height = this.calculations_.flexibleExpansionHeight * flexibleExpansionRatio;\n      this.adapter_.setStyleForFlexibleRowElement('height',\n        `${height + this.calculations_.toolbarRowHeight}px`);\n    }\n    if (this.useFlexDefaultBehavior_) {\n      this.updateElementStylesDefaultBehavior_(flexibleExpansionRatio);\n    }\n  }\n\n  updateElementStylesDefaultBehavior_(flexibleExpansionRatio) {\n    const maxTitleSize = MDCToolbarFoundation.numbers.MAX_TITLE_SIZE;\n    const minTitleSize = MDCToolbarFoundation.numbers.MIN_TITLE_SIZE;\n    const currentTitleSize = (maxTitleSize - minTitleSize) * flexibleExpansionRatio + minTitleSize;\n\n    this.adapter_.setStyleForTitleElement('font-size', `${currentTitleSize}rem`);\n  }\n}\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet supportsPassive_;\n\n// Determine whether the current browser supports passive event listeners, and if so, use them.\nexport function applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n","import {BasePlugin} from '../base'\nimport mdcToolbar from './mdc-toolbar.vue'\nimport mdcToolbarRow from './mdc-toolbar-row.vue'\nimport mdcToolbarSection from './mdc-toolbar-section.vue'\nimport mdcToolbarMenuIcon from './mdc-toolbar-menu-icon.vue'\nimport mdcToolbarTitle from './mdc-toolbar-title.vue'\nimport mdcToolbarIcon from './mdc-toolbar-icon.vue'\n\nexport {\n  mdcToolbar,\n  mdcToolbarRow,\n  mdcToolbarSection,\n  mdcToolbarMenuIcon,\n  mdcToolbarTitle,\n  mdcToolbarIcon\n}\n\nexport default BasePlugin({\n  mdcToolbar,\n  mdcToolbarRow,\n  mdcToolbarSection,\n  mdcToolbarMenuIcon,\n  mdcToolbarTitle,\n  mdcToolbarIcon\n})\n\n","<template>\n  <header class=\"mdc-toolbar-wrapper\">\n    <!--Toolbar-->\n    <div ref=\"root\" :class=\"rootClasses\" :style=\"rootStyles\">\n        <slot></slot>\n    </div>\n    <!-- Fixed Adjust Element-->\n    <div ref=\"fixed-adjust\" class=\"mdc-toolbar-fixed-adjust\" \n      :style=\"adjustStyles\"\n      v-if=\"fixed || waterfall || fixedLastrow\"></div>\n  </header>\n</template>\n\n<script>\n  import MDCToolbarFoundation from '@material/toolbar/foundation'\n  import * as util from '@material/toolbar/util'\n\n  export default {\n    name: 'mdc-toolbar',\n    props: {\n      'fixed': Boolean,\n      'waterfall': Boolean,\n      'fixed-lastrow': Boolean,\n      'flexible': Boolean,\n      'flexible-default': { type: Boolean, default: true }\n    },\n    data () {\n      return {\n        rootClasses: {\n          'mdc-toolbar': true,\n          'mdc-toolbar--fixed': this.fixed || this.waterfall ||\n                                  this.fixedLastrow,\n          'mdc-toolbar--waterfall': this.waterfall,\n          'mdc-toolbar--fixed-lastrow-only': this.fixedLastrow,\n          'mdc-toolbar--flexible': this.flexible,\n          'mdc-toolbar--flexible-default-behavior': this.flexible &&\n            this.flexibleDefault\n        },\n        rootStyles: {},\n        adjustStyles: {\n          // to avoid top margin collapse with :after el\n          // 0.1 px should be rounded to 0px\n          // TODO: find a better trick\n          // height: '0.1px'\n        },\n        foundation: null\n      }\n    },\n    mounted () {\n      this.foundation = new MDCToolbarFoundation({\n        addClass: (className) => {\n          this.$set(this.rootClasses, className, true)\n        },\n        removeClass: (className) => {\n          this.$delete(this.rootClasses, className)\n        },\n        hasClass: (className) => {\n          return this.$refs.root.classList.contains(className)\n        },\n        registerScrollHandler: (handler) => {\n          window.addEventListener('scroll', handler, util.applyPassive())\n        },\n        deregisterScrollHandler: (handler) => {\n          window.removeEventListener('scroll', handler, util.applyPassive())\n        },\n        registerResizeHandler: (handler) => {\n          window.addEventListener('resize', handler)\n        },\n        deregisterResizeHandler: (handler) => {\n          window.removeEventListener('resize', handler)\n        },\n        getViewportWidth: () => {\n          return window.innerWidth\n        },\n        getViewportScrollY: () => {\n          return window.pageYOffset\n        },\n        getOffsetHeight: () => {\n          return this.$refs.root.offsetHeight\n        },\n        getFirstRowElementOffsetHeight: () => {\n          let el = this.$refs.root.querySelector(MDCToolbarFoundation.strings.FIRST_ROW_SELECTOR)\n          return (el) ? el.offsetHeight : undefined\n        },\n        notifyChange: (evtData) => {\n          this.$emit('change', evtData)\n        },\n        setStyle: (property, value) => {\n          this.$set(this.rootStyles, property, value)\n        },\n        setStyleForTitleElement: (property, value) => {\n          let el = this.$refs.root.querySelector(MDCToolbarFoundation.strings.TITLE_SELECTOR)\n          if (el) el.style.setProperty(property, value)\n        },\n        setStyleForFlexibleRowElement: (property, value) => {\n          let el = this.$refs.root.querySelector(MDCToolbarFoundation.strings.FIRST_ROW_SELECTOR)\n          if (el) el.style.setProperty(property, value)\n        },\n        setStyleForFixedAdjustElement: (property, value) => {\n          this.$set(this.adjustStyles, property, value)\n        }\n      })\n      this.foundation.init()\n    },\n    beforeDestroy () {\n      this.foundation.destroy()\n    }\n  }\n</script>\n","<template>\n  <div class=\"mdc-toolbar-row mdc-toolbar__row\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-toolbar-row'\n}\n</script>\n","<template>\n  <section class=\"mdc-toolbar-section mdc-toolbar__section\" :class=\"classes\">\n    <slot></slot>\n  </section>\n</template>\n\n<script>\nexport default {\n  name: 'mdc-toolbar-section',\n  props: {\n    'align-start': Boolean,\n    'align-end': Boolean,\n    'shrink-to-fit': Boolean\n  },\n  data () {\n    return {\n      classes: {\n        'mdc-toolbar__section--align-start': this.alignStart,\n        'mdc-toolbar__section--align-end': this.alignEnd,\n        'mdc-toolbar__section--shrink-to-fit': this.shrinkToFit\n      }\n    }\n  }\n}\n</script>\n","<template>\n  <a class=\"mdc-toolbar-menu-icon mdc-toolbar__menu-icon\"\n    :class=\"{'material-icons':!!icon}\"\n    @click=\"dispatchEvent\">\n    <slot>{{icon}}</slot>\n  </a>\n</template>\n\n<script>\nimport {DispatchEventMixin} from '../base'\n\nexport default {\n  name: 'mdc-toolbar-menu-icon',\n  mixins: [DispatchEventMixin],\n  props: {\n    icon: {type: String, 'default': \"menu\"}\n  }\n}\n</script>\n","<template>\n    <a class=\"mdc-toolbar-title mdc-toolbar__title\" @click=\"dispatchEvent\">\n        <slot></slot>\n    </a>\n</template>\n\n<script>\nimport {DispatchEventMixin} from '../base'\n\nexport default {\n  name: 'mdc-toolbar-title',\n  mixins: [DispatchEventMixin]\n}\n</script>\n","<template>\n  <a class=\"mdc-toolbar-icon mdc-toolbar__icon\" \n    :class=\"{'material-icons':!!icon}\"\n    @click=\"dispatchEvent\">\n    <slot>{{icon}}</slot>\n  </a>\n</template>\n\n<script>\nimport {DispatchEventMixin} from '../base'\n\nexport default {\n  name: 'mdc-toolbar-icon',\n  mixins: [DispatchEventMixin],\n  props: {\n    icon: String\n  }\n}\n</script>\n","const typos = [\n  'display4', \n  'display3', \n  'display2', \n  'display1', \n  'headline',\n  'title',\n  'subheading1',\n  'subheading2',\n  'body1',\n  'body2',\n  'caption',\n  'button'\n]\n\nexport const mdcTypoMixin = (name) => {\n  return {\n    render (createElement) {\n      return createElement(this.tag, {\n        'class': {\n          'mdc-typo': true,\n          [name]: true,\n          [`mdc-typography--${this.typo}`]: true,\n          'mdc-typography--adjust-margin': this.adjustMargin\n        },\n        'attrs': this.$attrs,\n        'on': this.$listeners\n      },\n      this.$slots.default )\n    }\n  }\n}\n\nexport function mdcTypoPropMixin(defaultTag, defaultTypo, validTypos) {\n  return  {\n    props: {\n      'tag': { \n        type: String, \n        default: defaultTag \n      },\n      'typo': {\n        type: String,\n        default: defaultTypo,\n        validator:  (value) => validTypos.indexOf(value) !== -1\n      },\n      'adjust-margin': { \n        type: Boolean,\n        default: false\n      }\n    }\n  }\n}\n\nexport const mdcTextSection = {\n  name: 'mdc-text-section',\n  props: {\n    'tag': {\n      type: String, \n      default: 'section' \n    },\n  },\n  render (createElement) {\n    return createElement(this.tag, {\n      'class': {\n        'mdc-typography': true,\n        'mdc-text-section': true,\n      },\n      'attrs': this.$attrs,\n      'on': this.$listeners\n    }, this.$slots.default )\n  }\n}\n\nexport const mdcText = {\n  name: 'mdc-text',\n  mixins: [\n    mdcTypoMixin('mdc-text'), \n    mdcTypoPropMixin('p', 'body1', typos)\n  ],\n}\n\nexport const mdcDisplay = {\n  name: 'mdc-display',\n  mixins: [ \n    mdcTypoMixin('mdc-display'), \n    mdcTypoPropMixin('h1', 'display1', ['display4', 'display3', 'display2', 'display1'])],\n}\n\nexport const mdcHeadline = {\n  name: 'mdc-headline',\n  mixins: [ \n    mdcTypoMixin('mdc-headline'), \n    mdcTypoPropMixin('h2', 'headline', ['headline'])],\n}\n\nexport const mdcTitle = {\n  name: 'mdc-title',\n  mixins: [ \n    mdcTypoMixin('mdc-title'), \n    mdcTypoPropMixin('h3', 'title', ['title'])],\n}\n\nexport const mdcSubHeading = {\n  name: 'mdc-subheading',\n  mixins: [ \n    mdcTypoMixin('mdc-subheading'), \n    mdcTypoPropMixin('h4', 'subheading2', ['subheading1', 'subheading2'])],\n}\n\nexport const  mdcBody = {\n  name: 'mdc-body',\n  mixins: [\n    mdcTypoMixin('mdc-body'), \n    mdcTypoPropMixin('p', 'body1', ['body1', 'body2'])],\n}\n\nexport const mdcCaption = {\n  name: 'mdc-caption',\n  mixins: [\n    mdcTypoMixin('mdc-caption'), \n    mdcTypoPropMixin('span', 'caption', ['caption'])],\n}\n","import {BasePlugin} from '../base'\nimport {  \n  mdcTextSection,\n  mdcText,\n  mdcBody,\n  mdcCaption,\n  mdcDisplay,\n  mdcHeadline,\n  mdcSubHeading,\n  mdcTitle\n} from './mdc-typography.js'\n\nexport {\n  mdcTextSection,\n  mdcText,\n  mdcBody,\n  mdcCaption,\n  mdcDisplay,\n  mdcHeadline,\n  mdcSubHeading,\n  mdcTitle\n}\n\nexport default BasePlugin({\n  mdcTextSection,\n  mdcText,\n  mdcBody,\n  mdcCaption,\n  mdcDisplay,\n  mdcHeadline,\n  mdcSubHeading,\n  mdcTitle\n})\n","//\n// vue PlugIn\n//\nimport VueMDCButton from './button'\nimport VueMDCCard from './card'\nimport VueMDCCheckbox from './checkbox'\nimport VueMDCChipSet from './chips'\nimport VueMDCDialog from './dialog'\nimport VueMDCDrawer from './drawer'\nimport VueMDCElevation from './elevation'\nimport VueMDCFab from './fab'\nimport VueMDCGridList from './grid-list'\nimport VueMDCIcon from './icon'\nimport VueMDCIconToggle from './icon-toggle'\nimport VueMDCLayoutApp from './layout-app'\nimport VueMDCLayoutGrid from './layout-grid'\nimport VueMDCLinearProgress from './linear-progress'\nimport VueMDCList from './list'\nimport VueMDCMenu from './menu'\nimport VueMDCRadio from './radio'\nimport VueMDCRipple from './ripple'\nimport VueMDCSelect from './select'\nimport VueMDCSlider from './slider'\nimport VueMDCSnackbar from './snackbar'\nimport VueMDCSwitch from './switch'\nimport VueMDCTabs from './tabs'\nimport VueMDCTextfield from './textfield'\nimport VueMDCTheme from './theme'\nimport VueMDCToolbar from './toolbar'\nimport VueMDCTypography from './typography'\n\nexport default {\n  version: '__VERSION__',\n  install  (vm) {\n    vm.use(VueMDCButton)\n    vm.use(VueMDCCard)\n    vm.use(VueMDCCheckbox)\n    vm.use(VueMDCChipSet)\n    vm.use(VueMDCDialog)\n    vm.use(VueMDCDrawer)\n    vm.use(VueMDCElevation)\n    vm.use(VueMDCFab)\n    vm.use(VueMDCGridList)\n    vm.use(VueMDCIcon)\n    vm.use(VueMDCIconToggle)\n    vm.use(VueMDCLayoutApp)\n    vm.use(VueMDCLayoutGrid)\n    vm.use(VueMDCLinearProgress)\n    vm.use(VueMDCList)\n    vm.use(VueMDCMenu)\n    vm.use(VueMDCRadio)\n    vm.use(VueMDCRipple)\n    vm.use(VueMDCSelect)\n    vm.use(VueMDCSlider)\n    vm.use(VueMDCSnackbar)\n    vm.use(VueMDCSwitch)\n    vm.use(VueMDCTabs)\n    vm.use(VueMDCTextfield)\n    vm.use(VueMDCTheme)\n    vm.use(VueMDCToolbar)\n    vm.use(VueMDCTypography)\n  }\n}\n","export function autoInit (plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n  ","import './styles.scss'\nimport {autoInit} from './base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["BasePlugin","components","vm","key","component","name","CustomElement","createElement","context","props","is","tag","data","children","CustomElementMixin","CustomLink","type","String","default","Object","h","element","babelHelpers.extends","link","parent","$router","$root","$options","on","click","nativeOn","CustomLinkMixin","Boolean","this","to","exact","append","replace","activeClass","exactActiveClass","emitCustomEvent","el","evtType","evtData","shouldBubble","evt","CustomEvent","document","createEvent","initCustomEvent","dispatchEvent","CustomButton","attrs","role","href","CustomButtonMixin","extractIconProp","iconProp","material-icons","Array","reduce","result","value","className","split","textContent","DispatchEventMixin","$emit","event","target","eventTarget","args","eventArgs","DispatchFocusMixin","hasFocus","_active","_this","dispatchFocusEvent","setTimeout","_this2","$el","activeElement","contains","addEventListener","onFocusEvent","onBlurEvent","onMouseDown","onMouseUp","removeEventListener","MDCFoundation","adapter","adapter_","cssClasses","handler","varName","strings","numbers","supportsCssVariables_","supportsPassive_","supportsCssVariables","windowObj","forceRefresh","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","applyPassive","globalObj","window","undefined","isSupported","passive","e","getMatchesProperty","HTMLElementPrototype","filter","p","pop","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","defaultAdapter","layoutFrame_","frame_","width","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","requestAnimationFrame","addClass","BG_FOCUSED","blurHandler_","removeClass","resizeHandler_","layout","unboundedCoords_","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","isSupported_","registerRootHandlers_","ROOT","UNBOUNDED","isUnbounded","layoutInternal_","deregisterRootHandlers_","deregisterDeactivationHandlers_","removeCssVars_","forEach","registerInteractionHandler","_this4","registerResizeHandler","registerDocumentInteractionHandler","_this5","deregisterInteractionHandler","_this6","deregisterResizeHandler","deregisterDocumentInteractionHandler","_this7","keys","k","indexOf","updateCssVariable","isSurfaceDisabled","activationState","isActivated","previousActivationEvent","isProgrammatic","activationEvent","wasActivatedByPointer","length","some","_this9","containsEventTarget","resetActivationState_","push","registerDeactivationHandlers_","wasElementMadeActive","isSurfaceActive","animateActivation_","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","FG_DEACTIVATION","FG_ACTIVATION","DEACTIVATION_TIMEOUT_MS","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","computeBoundingRect","_this10","ev","pageOffset","clientRect","documentX","documentY","normalizedX","normalizedY","getWindowPageOffset","left","top","changedTouches","pageX","pageY","hasDeactivationUXRun","FG_DEACTIVATION_MS","_this12","TAP_DELAY_MS","state","_this13","animateDeactivation_","maxDim","Math","max","sqrt","pow","_this15","PADDING","INITIAL_ORIGIN_SCALE","updateLayoutCssVars_","VAR_FG_SIZE","VAR_LEFT","VAR_TOP","VAR_FG_SCALE","round","unbounded","RippleBase","options","MATCHES","disabled","$set","classes","$delete","documentElement","styles","getBoundingClientRect","pageXOffset","pageYOffset","ref","_matches","HTMLElement","prototype","RippleMixin","ripple","init","destroy","render","mdcButtonBase","raised","unelevated","stroked","dense","compact","accent","src","square","fullBleed","icon","MDCComponent","root","foundation","root_","initialize","foundation_","getDefaultFoundation","initialSyncWithDOM","Error","unbounded_","setUnbounded","activate","deactivate","MDCRipple","createAdapter","dataset","setUnbounded_","instance","util","classList","add","style","setProperty","CB_PROTO_PROPS","MDCCheckboxFoundation","currentCheckState_","TRANSITION_STATE_INIT","currentAnimationClass_","animEndLatchTimer_","animEndHandler_","handleAnimationEnd","changeHandler_","handleChange","determineCheckState_","getNativeControl_","UPGRADED","registerChangeHandler","installPropertyChangeHooks_","deregisterChangeHandler","uninstallPropertyChangeHooks_","checked","indeterminate","DISABLED","deregisterAnimationEndHandler","ANIM_END_LATCH_MS","transitionCheckState_","nativeCb","cbProto","getPrototypeOf","controlState","desc","getOwnPropertyDescriptor","validDescriptor","nativeCbDesc","get","set","call","configurable","enumerable","defineProperty","getNativeControl","oldState","newState","forceLayout","getTransitionAnimationClass_","isAttachedToDOM","registerAnimationEndHandler","TRANSITION_STATE_INDETERMINATE","TRANSITION_STATE_CHECKED","TRANSITION_STATE_UNCHECKED","ANIM_UNCHECKED_CHECKED","ANIM_UNCHECKED_INDETERMINATE","ANIM_CHECKED_UNCHECKED","ANIM_CHECKED_INDETERMINATE","ANIM_INDETERMINATE_CHECKED","ANIM_INDETERMINATE_UNCHECKED","inputPropDesc","MDCFormFieldFoundation","clickHandler_","handleClick_","activateInputRipple","deactivateInputRipple","eventTypeMap","cssPropertyMap","getAnimationName","eventType","hasProperShape","eventFoundInMaps","map","styleProperty","noPrefix","webkitPrefix","getJavaScriptEventName","transformStyleProperties","getCorrectEventName","getCorrectPropertyName","label","$slots","hasLabel","alignEnd","setChecked","setDisabled","setIndeterminate","$refs","control","offsetWidth","parentNode","formField","isIndeterminate","isChecked","MDCChipFoundation","interactionHandler_","handleInteraction_","_this3","keyCode","notifyInteraction","leadingIcon","leadingIconClasses","trailingIcon","trailingIconClasses","MDCChipSetFoundation","MDCDialogFoundation","isOpen_","componentClickHandler_","eventTargetHasClass","BACKDROP","cancel","dialogClickHandler_","handleDialogClick_","documentKeydownHandler_","transitionEndHandler_","handleTransitionEnd_","deregisterSurfaceInteractionHandler","deregisterDocumentKeydownHandler","untrapFocusOnSurface","deregisterTransitionEndHandler","ANIMATING","OPEN","enableScroll_","disableScroll_","registerDocumentKeydownHandler","registerSurfaceInteractionHandler","registerTransitionEndHandler","shouldNotify","notifyAccept","close","notifyCancel","ACCEPT_BTN","accept","CANCEL_BTN","isDialog","trapFocusOnSurface","layoutFooterRipples","addBodyClass","SCROLL_LOCK","removeBodyClass","candidate","candidateIndex","elementDocument","ownerDocument","basicTabbables","orderedTabbables","isUnavailable","isOffCache","defaultView","isOff","nodeComputedStyle","i","display","visibility","createIsUnavailable","candidateSelectors","candidates","querySelectorAll","join","includeContainer","matches","Element","msMatchesSelector","webkitMatchesSelector","candidateSelector","slice","apply","unshift","l","parseInt","getAttribute","tabIndex","tagName","tabbableNodes","sort","a","b","index","listeningFocusTrap","tryFocus","focus","toLowerCase","select","module","userOptions","firstTabbableNode","lastTabbableNode","nodeFocusedBeforeActivation","active","paused","tabEvent","container","querySelector","config","returnFocusOnDeactivate","escapeDeactivates","trap","activateOptions","defaultedActivateOptions","onActivate","deactivateOptions","defaultedDeactivateOptions","returnFocus","onDeactivate","addListeners","pause","getNodeForOption","firstFocusNode","checkFocus","checkClick","checkPointerDown","checkKey","removeListeners","optionName","optionValue","clickOutsideDeactivates","preventDefault","stopImmediatePropagation","blur","shiftKey","hasAttribute","Number","currentFocusIndex","isEscapeEvent","updateTabbableNodes","tabbable","required","mdcButton","dark","scrollable","focusTrap","surfaceEl","acceptButtonEl","createFocusTrap","createFocusTrapInstance","surface","$listeners","notify","open","FOCUSABLE_ELEMENTS","MDCSlidableDrawerFoundation","rootCssClass","animatingCssClass","openCssClass","rootCssClass_","animatingCssClass_","openCssClass_","inert_","componentTouchStartHandler_","handleTouchStart_","componentTouchMoveHandler_","handleTouchMove_","componentTouchEndHandler_","handleTouchEnd_","hasClass","hasNecessaryDom","detabinate_","registerDrawerInteractionHandler","deregisterDrawerInteractionHandler","retabinate_","notifyOpen","notifyClose","elements","getFocusableElements","saveElementTabState","makeElementUntabbable","restoreElementTabState","pointerType","direction_","isRtl","drawerWidth_","getDrawerWidth","startX_","touches","currentX_","updateRaf_","updateDrawer_","bind","prepareForTouchEnd_","abs","newPosition_","setTranslateX","isRootTransitioningEventTarget_","min","MDCPersistentDrawerFoundation","isDrawer","TAB_DATA","TAB_DATA_HANDLED","storedTransformPropertyName_","remapEvent","eventName","getTransformPropertyName","transformPropertyName","setAttribute","removeAttribute","_refresh","drawer","getPropertyValue","MDCTemporaryDrawerFoundation","newOpacity","OPACITY_VAR_NAME","media","_small","matchMedia","_large","val","mdcDrawer","mdcPermanentDrawer","mdcPersistentDrawer","mdcTemporaryDrawer","permanent","persistent","temporary","drawerType","small","open_","isPermanent","isOpen","large","isResponsive","toggleOn","toggleOnSource","$on","toggle","openOn","openOnSource","closeOn","closeOnSource","addListener","refreshMedia","$nextTick","removeListener","isTemporary","isPersistent","activated","startIcon","temporaryClose","mini","absolute","fixed","MDCGridListFoundation","alignCenter","resizeFrame_","alignCenter_","getNumberOfTiles","gridWidth","getOffsetWidth","itemWidth","getOffsetWidthForTileAtIndex","tilesWidth","floor","setStyleForTilesElement","mdcGrid","narrowGutter","headerCaption","ratio","iconAlignStart","iconAlignEnd","withSupportText","interactive","TILE_SELECTOR","property","TILES_SELECTOR","selected","endIcon","addRipple","removeRipple","isInteractive","log","text","MDCIconToggleFoundation","on_","disabled_","savedTabIndex_","toggleOnData_","toggleOffData_","toggleFromEvt_","isHandlingKeydown_","keydownHandler_","isSpace","keyupHandler_","refreshToggleData","getTabIndex","DATA_TOGGLE_ON","DATA_TOGGLE_OFF","parseJsonDataAttr_","isOn","notifyChange","ARIA_LABEL","ARIA_PRESSED","setAttr","classToRemove","cssClass","content","setText","dataAttr","getAttr","JSON","parse","isDisabled","ARIA_DISABLED","setTabIndex","rmAttr","keyboardKey","stringify","toggleOff","iconClasses","isKeyboardActivated","fixedColumnWidth","spanOptions","num","isFinite","span","order","phone","tablet","desktop","align","MDCLinearProgressFoundation","determinate_","INDETERMINATE_CLASS","reverse_","REVERSED_CLASS","progress_","isDeterminate","setScale_","getPrimaryBar","getBuffer","isReversed","CLOSED_CLASS","scaleValue","transformStyleProperty","setStyle","ProgressPropType","mdc-linear-progress--accent","setProgress","progress","setBuffer","buffer","setDeterminate","setReverse","reverse","primary","mdcList","avatarList","twoLine","bordered","inset","padded","attributeName","origin","position","attr","CornerBit","Corner","MDCMenuFoundation","handlePossibleSelected_","handleKeyboardDown_","handleKeyboardUp_","documentClickHandler_","handleDocumentClick_","openAnimationEndTimerId_","closeAnimationEndTimerId_","selectedTriggerTimerId_","animationRequestId_","dimensions_","itemHeight_","anchorCorner_","TOP_START","anchorMargin_","right","bottom","measures_","selectedIndex_","rememberSelection_","quickOpen_","keyDownWithinMenu_","deregisterBodyClickHandler","corner","margin","rememberSelection","setSelectedIndex","quickOpen","focusIndex","focusItemAtIndex","isFocused","getIndexForEventTarget","altKey","ctrlKey","metaKey","isTab","isArrowUp","isArrowDown","isEnter","focusedItemIndex","getFocusedItemIndex","lastItemIndex","getNumberOfItems","isEscape","getAttributeForEventTarget","ARIA_DISABLED_ATTR","targetIndex","notifySelected","SELECTED_TRIGGER_DELAY","anchorRect","getAnchorDimensions","viewport","getWindowDimensions","TOP_LEFT","viewportDistance","anchorHeight","anchorWidth","menuHeight","menuWidth","isBottomAligned","availableTop","bottomOverflow","isFlipRtl","avoidHorizontalOverlap","isAlignedRight","leftOverflow","rightOverflow","isRightAligned","MARGIN_TO_EDGE","avoidVerticalOverlap","canOverlapVertically","maxHeight","hasAnchor","getAutoLayoutMeasurements_","getOriginCorner_","maxMenuHeight","getMenuMaxHeight_","verticalAlignment","horizontalAlignment","horizontalOffset","getHorizontalOriginOffset_","verticalOffset","getVerticalOriginOffset_","ANCHOR_TO_MENU_WIDTH_RATIO","OFFSET_TO_MENU_HEIGHT_RATIO","verticalOffsetPercent","originPercent","setTransformOrigin","setPosition","setMaxHeight","saveFocus","ANIMATING_OPEN","getInnerDimensions","autoPosition_","focusOnOpen_","registerBodyClickHandler","TRANSITION_OPEN_DURATION","ANIMATING_CLOSED","TRANSITION_CLOSE_DURATION","restoreFocus","prevSelectedIndex","rmAttrForOptionAtIndex","rmClassForOptionAtIndex","SELECTED_LIST_ITEM","setAttrForOptionAtIndex","addClassForOptionAtIndex","openFromTopLeft","openFromTopRight","openFromBottomLeft","openFromBottomRight","refreshItems","items","slotObserver","MutationObserver","observe","childList","subtree","_previousFocus","offsetHeight","parentElement","innerWidth","innerHeight","SELECTED_EVENT","CANCEL_EVENT","disconnect","MDCRadioFoundation","setValue","picked","getValue","sync","OPENER_KEYS","previousFocus_","setAnchorCorner","setAnchorMargin","itemsContainer_","itemsContainer","emit","ITEMS_SELECTOR","getSelectedIndex","setRememberSelection","setQuickOpen","MDCMenu","forType","MDCSelectFoundation","ctx_","isFocused_","displayHandler_","isMenuOpen","displayViaKeyboardHandler_","handleDisplayViaKeyboard_","selectionHandler_","detail","close_","cancelHandler_","floatLabel","create2dRenderingContext","registerMenuInteractionHandler","resize","deregisterMenuInteractionHandler","getValueForOptionAtIndex","getNumberOfOptions","selectedTextContent","getTextForOptionAtIndex","trim","setSelectedTextContent","makeUntabbable","makeTabbable","font","getComputedStyleValue","letterSpacing","parseFloat","primaryFontFamily","fontSize","maxTextLength","selectBoxAddedPadding","txt","measureText","addedSpace","ceil","setMenuStylesForOpenAtIndex_","addClassToBottomLine","BOTTOM_LINE_ACTIVE","openMenu","getWindowInnerHeight","setMenuElAttr","setMenuElStyle","getMenuElOffsetHeight","itemOffsetTop","getOffsetTopForOptionAtIndex","rmMenuElAttr","adjustedTop","overflowsBottom","removeClassFromBottomLine","eventPhase","MDCSelectLabelFoundation","LABEL_FLOAT_ABOVE","box","mdcMenu","refreshIndex","menu","labelClasses","labelFoundation","styleFloat","bottomLineClasses","bottomLine","prop","propertyName","surfaceStyles","getContext","show","offsetTop","labelTxt","foundationLabel","scroll","count","size","refreshSize","maxSize","_mobile","mdcSelect","MDCNativeSelect","MDCMenuSelect","MDCMultiSelect","mobile","multiple","isNative","native","MDCNativeOption","MDCMultiOption","MDCMenuOption","KEY_IDS","numMarkers","MOVE_EVENT_MAP","DOWN_EVENTS","UP_EVENTS","MDCSliderFoundation","rect_","NaN","active_","inTransit_","isDiscrete_","hasTrackMarker_","handlingThumbTargetEvt_","min_","max_","step_","value_","preventFocusState_","updateUIFrame_","thumbContainerPointerHandler_","interactionStartHandler_","handleDown_","handleKeydown_","handleFocus_","handleBlur_","IS_DISCRETE","HAS_TRACK_MARKER","evtName","registerThumbContainerInteractionHandler","getStep","deregisterThumbContainerInteractionHandler","getMin","getMax","step","indivisible","removeTrackMarkers","appendTrackMarkers","lastStepRatio","flex","setLastTrackMarkersStyleProperty","updateUIForCurrentValue_","setValue_","ARIA_VALUEMAX","setupTrackMarker","ARIA_VALUEMIN","toggleClass_","isNaN","setInTransit_","setActive_","moveHandler","handleMove_","upHandler","handleUp_","deregisterBodyInteractionHandler","registerBodyInteractionHandler","setValueFromEvt_","targetTouches","getPageX_","computeValueFromPageX_","pctComplete","isRTL","keyId","getKeyId_","getValueForKeyId_","FOCUS","kbdEvt","delta","PAGE_FACTOR","shouldFireInput","force","valueSetToBoundary","quantize_","ARIA_VALUENOW","notifyInput","setMarkerValue","translatePx","transformProp","transitionendEvtName","onTransitionEnd","setThumbContainerStyleProperty","setTrackStyleProperty","ACTIVE","inTransit","IN_TRANSIT","shouldBePresent","displayMarkers","setMin","setMax","setStep","thumbContainer","thumbStyles","trackStyles","markerValue","lastTrackMarkersStyles","hasMarkers","layoutOn","layoutOnSource","MDCSnackbarFoundation","actionWasClicked_","dismissOnAction_","firstFocus_","pointerDownRecognized_","snackbarHasFocus_","snackbarData_","queue_","actionClickHandler_","invokeAction_","visibilitychangeHandler_","timeoutId_","visibilityIsHidden","cleanup_","timeout","MESSAGE_TIMEOUT","handlePossibleTabKeyboardFocus_","registerActionClickHandler","setAriaHidden","setActionAriaHidden","deregisterActionClickHandler","deregisterCapturedBlurHandler","deregisterVisibilityChangeHandler","deregisterCapturedInteractionHandler","dismissOnAction","message","actionHandler","actionText","registerVisibilityChangeHandler","registerCapturedBlurHandler","registerCapturedInteractionHandler","MULTILINE","ACTION_ON_BOTTOM","setMessageText","multiline","actionOnBottom","setActionText","actionHandler_","setActionHidden_","unsetAriaHidden","notifyShow","setFocusOnAction_","setFocus","notifyHide","showNext_","shift","isHidden","unsetActionAriaHidden","alignStart","hidden","actionHidden","button","eventSource","setDismissOnAction","dismissesOnAction","MDCTabFoundation","computedWidth_","computedLeft_","isActive_","preventDefaultOnClick_","isActive","preventDefaultOnClick","getOffsetLeft","getComputedWidth","getComputedLeft","setActive","preventsDefaultOnClick","setPreventDefaultOnClick","measureSelf","offsetLeft","tab","MDCTabBarFoundation","isIndicatorShown_","activeTabIndex_","bindOnMDCTabSelectedEvent","activeTabIndex","findActiveTabIndex_","unbindOnMDCTabSelectedEvent","forEachTabIndex_","measureTabAtIndex","layoutIndicator_","isIndicatorFirstRender","setStyleForIndicator","transformValue","getComputedLeftForTabAtIndex","getComputedWidthForTabAtIndex","getOffsetWidthForIndicator","isTabActiveAtIndex","iterator","numTabs","getNumberOfTabs","prevActiveTabIndex","setTabActiveAtIndex","indicatorPrimary","indicatorAccent","tabs","switchToTabAtIndex","onSelect","indicatorStyles","indicator","isDefaultPreventedOnClick","resetTabs","tabElements","TAB_SELECTOR","__vue__","hasText","hasIcon","getActiveTabIndex","MDCLineRippleFoundation","handleTransitionEnd","registerEventHandler","deregisterEventHandler","LINE_RIPPLE_DEACTIVATING","LINE_RIPPLE_ACTIVE","xCoordinate","attributeString","isDeactivating","MDCTextFieldHelperTextFoundation","setContent","HELPER_TEXT_PERSISTENT","isValidation","HELPER_TEXT_VALIDATION_MSG","removeAttr","ARIA_HIDDEN","inputIsValid","helperTextIsPersistent","validationMsgNeedsDisplay","ROLE","hide_","MDCTextFieldIconFoundation","handleInteraction","notifyIconAction","MDCTextFieldLabelFoundation","getWidth","isValid","LABEL_SHAKE","isBadInput","MDCTextFieldOutlineFoundation","labelWidth","radiusStyleValue","getIdleOutlineStyleValue","radius","getHeight","cornerWidth","leadingStrokeLength","paddedLabelWidth","pathMiddle","path","setOutlinePathAttr","MDCTextFieldFoundation","foundationMap","helperText_","helperText","icon_","label_","outline_","outline","receivedUserInput_","useCustomValidityChecking_","isValid_","inputFocusHandler_","activateFocus","inputBlurHandler_","deactivateFocus","inputInputHandler_","autoCompleteFocus","setPointerXOffset_","textFieldInteractionHandler_","handleTextFieldInteraction","isBadInput_","registerInputInteractionHandler","registerTextFieldInteractionHandler","deregisterInputInteractionHandler","deregisterTextFieldInteractionHandler","getNativeInput","labelScale","DENSE","DENSE_LABEL_SCALE","LABEL_SCALE","updateSvgPath","styleFocused_","activateLineRipple","updateOutline","styleShake","showToScreenReader","targetClientRect","evtCoords","clientX","clientY","setLineRippleTransformOrigin","deactivateLineRipple","shouldRemoveLabelFloat","getNativeInput_","styleValidity_","isNativeInputValid_","styleDisabled_","isRequired","validity","badInput","valid","INVALID","setValidity","FOCUSED","fullwidth","helptextPersistent","helptextValidation","setRequired","setValid","rootClasses","helperTextFoundation","setPersistent","setValidation","input","readonly","autocomplete","autofocus","help","_uid","hasOutline","bottomLineFoundation","bottomClasses","helpClasses","hasLeadingIcon","hasTrailingIcon","iconFoundation","outlineFoundation","outlinePathAttr","idleOutlineElement","outlineIdle","MDCTextfieldFoundation","setRippleCenter","textbox","THEME_COLORS","THEME_STYLES","color","background","MDCToolbarFoundation","checkRowHeight_","scrollHandler_","updateToolbarStyles_","checkRowHeightFrame_","scrollFrame_","executedLastChange_","calculations_","fixed_","fixedLastrow_","hasFlexibleRow_","useFlexDefaultBehavior_","FIXED","FIXED_LASTROW","TOOLBAR_ROW_FLEXIBLE","FLEXIBLE_DEFAULT_BEHAVIOR","initKeyRatio_","setKeyHeights_","registerScrollHandler","deregisterScrollHandler","setStyleForFixedAdjustElement","toolbarHeight","scrollTop","flexibleExpansionHeight","newToolbarRowHeight","getRowHeight_","toolbarRowHeight","toolbarRatio","flexibleExpansionRatio","maxTranslateYDistance","maxTranslateYRatio","scrollThreshold","scrollThresholdRatio","updateAdjustElementStyles","getViewportScrollY","hasScrolledOutOfThreshold","scrolledOutOfThreshold_","getFlexibleExpansionRatio_","updateToolbarFlexibleState_","updateToolbarFixedState_","updateFlexibleRowElementStyles_","firstRowMaxRatio","getFirstRowElementOffsetHeight","getOffsetHeight","breakpoint","TOOLBAR_MOBILE_BREAKPOINT","getViewportWidth","TOOLBAR_ROW_MOBILE_HEIGHT","TOOLBAR_ROW_HEIGHT","FLEXIBLE_MAX","FLEXIBLE_MIN","translateDistance","FIXED_AT_LAST_ROW","setStyleForFlexibleRowElement","updateElementStylesDefaultBehavior_","maxTitleSize","MAX_TITLE_SIZE","minTitleSize","MIN_TITLE_SIZE","currentTitleSize","setStyleForTitleElement","waterfall","fixedLastrow","flexible","flexibleDefault","FIRST_ROW_SELECTOR","rootStyles","TITLE_SELECTOR","adjustStyles","shrinkToFit","mdcTypoMixin","typo","adjustMargin","$attrs","mdcTypoPropMixin","defaultTag","defaultTypo","validTypos","mdcTextSection","mdcText","mdcDisplay","mdcHeadline","mdcTitle","mdcSubHeading","use","VueMDCButton","VueMDCCard","VueMDCCheckbox","VueMDCChipSet","VueMDCDialog","VueMDCDrawer","VueMDCElevation","VueMDCFab","VueMDCGridList","VueMDCIcon","VueMDCIconToggle","VueMDCLayoutApp","VueMDCLayoutGrid","VueMDCLinearProgress","VueMDCList","VueMDCMenu","VueMDCRadio","VueMDCRipple","VueMDCSelect","VueMDCSlider","VueMDCSnackbar","VueMDCSwitch","VueMDCTabs","VueMDCTextfield","VueMDCTheme","VueMDCToolbar","VueMDCTypography","plugin","_Vue","Vue","global"],"mappings":"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"}