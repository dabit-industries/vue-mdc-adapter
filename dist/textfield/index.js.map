{"version":3,"file":"index.js","sources":["../../components/base/base-plugin.js","../../components/base/custom-element.js","../../components/base/custom-event.js","../../components/base/custom-icon.js","../../components/base/dispatch-focus-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/line-ripple/adapter.js","../../node_modules/@material/line-ripple/constants.js","../../node_modules/@material/line-ripple/foundation.js","../../node_modules/@material/textfield/helper-text/adapter.js","../../node_modules/@material/textfield/helper-text/constants.js","../../node_modules/@material/textfield/helper-text/foundation.js","../../node_modules/@material/textfield/icon/adapter.js","../../node_modules/@material/textfield/icon/constants.js","../../node_modules/@material/textfield/icon/foundation.js","../../node_modules/@material/textfield/label/adapter.js","../../node_modules/@material/textfield/label/constants.js","../../node_modules/@material/textfield/label/foundation.js","../../node_modules/@material/textfield/outline/adapter.js","../../node_modules/@material/textfield/outline/constants.js","../../node_modules/@material/textfield/outline/foundation.js","../../node_modules/@material/textfield/adapter.js","../../node_modules/@material/textfield/constants.js","../../node_modules/@material/textfield/foundation.js","../../components/textfield/mdc-textfield.vue","../../components/textfield/index.js"],"sourcesContent":["export function BasePlugin (components) { \n  return {\n    version: '__VERSION__',\n    install: (vm) => {\n      for (let key in components) {\n        let component = components[key]\n          vm.component(component.name,component)\n      }\n    },\n    components\n  } \n}\n\n","export const CustomElement = {\n  functional: true,\n  render (createElement, context) {\n    return createElement(\n      context.props.is || context.props.tag || 'div', \n      context.data,\n      context.children)\n  }\n}\n\nexport const CustomElementMixin = {\n  components: {\n    CustomElement\n  }\n}\n","/* global CustomEvent */\n\nexport function emitCustomEvent (el, evtType, evtData, shouldBubble = false) {\n  let evt\n  if (typeof CustomEvent === 'function') {\n    evt = new CustomEvent(evtType, {\n      detail: evtData,\n      bubbles: shouldBubble\n    })\n  } else {\n    evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(evtType, shouldBubble, false, evtData)\n  }\n  el.dispatchEvent(evt)\n}\n","export function extractIconProp (iconProp) {\n    if (typeof iconProp === 'string') {\n      return {\n        classes: { 'material-icons' : true},\n        content: iconProp \n      }\n    }\n    else if (iconProp instanceof Array){\n      return { \n        classes: iconProp.reduce(\n          (result, value) => Object.assign(result,{[value]:true}),\n          {}),\n        }\n    }\n    else if (typeof iconProp === 'object'){\n      return { \n        classes: iconProp.className.split(' ').reduce(\n          (result, value) => Object.assign(result,{[value]:true}),\n          {}),\n        content: iconProp.textContent \n      }\n    }\n  }\n","export const DispatchFocusMixin = {\n  data () {\n    return  {hasFocus: false}\n  },\n  methods: {\n    onMouseDown() {\n      this._active = true\n    },\n    onMouseUp () {\n      this._active = false\n    },\n    onFocusEvent () {\n      // dispatch async to let time to other focus event to propagate\n      setTimeout(() => this.dispatchFocusEvent(),0)\n    },\n    onBlurEvent () {\n      // dispatch async to let time to other focus event to propagate\n      // also filtur blur if mousedown\n      this._active || setTimeout(() => this.dispatchFocusEvent(),0)\n    },\n    dispatchFocusEvent() {\n      let hasFocus = this.$el === document.activeElement || this.$el.contains(document.activeElement);\n      if (hasFocus != this.hasFocus) {\n        this.$emit(hasFocus ? 'focus' : 'blur')\n        this.hasFocus = hasFocus\n      }\n    }\n  },\n  mounted () {\n    this.$el.addEventListener('focusin', this.onFocusEvent)\n    this.$el.addEventListener('focusout', this.onBlurEvent)\n    this.$el.addEventListener('mousedown', this.onMouseDown)\n    this.$el.addEventListener('mouseup', this.onMouseUp)\n  },\n  beforeDestroy () {\n    this.$el.removeEventListener('focusin', this.onFocusEvent)\n    this.$el.removeEventListener('focusout', this.onBlurEvent)\n    this.$el.removeEventListener('mousedown', this.onMouseDown)\n    this.$el.removeEventListener('mouseup', this.onMouseUp)\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC TextField Line Ripple.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the line ripple into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCLineRippleAdapter {\n  /**\n   * Adds a class to the line ripple element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the line ripple element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the line ripple element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Registers an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerEventHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the line ripple element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterEventHandler(evtType, handler) {}\n}\n\nexport default MDCLineRippleAdapter;\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',\n  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCLineRippleAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCLineRippleAdapter>}\n * @final\n */\nclass MDCLineRippleFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCLineRippleAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCLineRippleAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCLineRippleAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      registerEventHandler: () => {},\n      deregisterEventHandler: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCLineRippleAdapter=} adapter\n   */\n  constructor(adapter = /** @type {!MDCLineRippleAdapter} */ ({})) {\n    super(Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.transitionEndHandler_ = (evt) => this.handleTransitionEnd(evt);\n  }\n\n  init() {\n    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  destroy() {\n    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);\n  }\n\n  /**\n   * Activates the line ripple\n   */\n  activate() {\n    this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_ACTIVE);\n  }\n\n  /**\n   * Sets the center of the ripple animation to the given X coordinate.\n   * @param {!number} xCoordinate\n   */\n  setRippleCenter(xCoordinate) {\n    const attributeString =\n        `transform-origin: ${xCoordinate}px center`;\n\n    this.adapter_.setAttr('style', attributeString);\n  }\n\n  /**\n   * Deactivates the line ripple\n   */\n  deactivate() {\n    this.adapter_.addClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n  }\n\n  /**\n   * Handles a transition end event\n   * @param {!Event} evt\n   */\n  handleTransitionEnd(evt) {\n    // Wait for the line ripple to be either transparent or opaque\n    // before emitting the animation end event\n    const isDeactivating = this.adapter_.hasClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n\n    if (evt.propertyName === 'opacity') {\n      if (isDeactivating) {\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_ACTIVE);\n        this.adapter_.removeClass(cssClasses.LINE_RIPPLE_DEACTIVATING);\n      }\n    }\n  }\n}\n\nexport default MDCLineRippleFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Helper Text.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the TextField helper text into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldHelperTextAdapter {\n  /**\n   * Adds a class to the helper text element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the helper text element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns whether or not the helper text element contains the given class.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Sets an attribute with a given value on the helper text element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Removes an attribute from the helper text element.\n   * @param {string} attr\n   */\n  removeAttr(attr) {}\n\n  /**\n   * Sets the text content for the helper text element.\n   * @param {string} content\n   */\n  setContent(content) {}\n}\n\nexport default MDCTextFieldHelperTextAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_HIDDEN: 'aria-hidden',\n  ROLE: 'role',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',\n  HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg',\n};\n\nexport {strings, cssClasses};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldHelperTextAdapter from './adapter';\nimport {cssClasses, strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}\n * @final\n */\nclass MDCTextFieldHelperTextFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldHelperTextAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldHelperTextAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      setAttr: () => {},\n      removeAttr: () => {},\n      setContent: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldHelperTextAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {string} content\n   */\n  setContent(content) {\n    this.adapter_.setContent(content);\n  }\n\n  /** @param {boolean} isPersistent Sets the persistency of the helper text. */\n  setPersistent(isPersistent) {\n    if (isPersistent) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    }\n  }\n\n  /**\n   * @param {boolean} isValidation True to make the helper text act as an\n   *   error validation message.\n   */\n  setValidation(isValidation) {\n    if (isValidation) {\n      this.adapter_.addClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    } else {\n      this.adapter_.removeClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    }\n  }\n\n  /** Makes the helper text visible to the screen reader. */\n  showToScreenReader() {\n    this.adapter_.removeAttr(strings.ARIA_HIDDEN);\n  }\n\n  /**\n   * Sets the validity of the helper text based on the input validity.\n   * @param {boolean} inputIsValid\n   */\n  setValidity(inputIsValid) {\n    const helperTextIsPersistent = this.adapter_.hasClass(cssClasses.HELPER_TEXT_PERSISTENT);\n    const helperTextIsValidationMsg = this.adapter_.hasClass(cssClasses.HELPER_TEXT_VALIDATION_MSG);\n    const validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;\n\n    if (validationMsgNeedsDisplay) {\n      this.adapter_.setAttr(strings.ROLE, 'alert');\n    } else {\n      this.adapter_.removeAttr(strings.ROLE);\n    }\n\n    if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {\n      this.hide_();\n    }\n  }\n\n  /**\n   * Hides the help text from screen readers.\n   * @private\n   */\n  hide_() {\n    this.adapter_.setAttr(strings.ARIA_HIDDEN, 'true');\n  }\n}\n\nexport default MDCTextFieldHelperTextFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Icon.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the text field icon into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldIconAdapter {\n  /**\n   * Sets an attribute on the icon element.\n   * @param {string} attr\n   * @param {string} value\n   */\n  setAttr(attr, value) {}\n\n  /**\n   * Registers an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the icon element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * Emits a custom event \"MDCTextField:icon\" denoting a user has clicked the icon.\n   */\n  notifyIconAction() {}\n}\n\nexport default MDCTextFieldIconAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ICON_EVENT: 'MDCTextField:icon',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldIconAdapter from './adapter';\nimport {strings} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}\n * @final\n */\nclass MDCTextFieldIconFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldIconAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldIconAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldIconAdapter} */ ({\n      setAttr: () => {},\n      registerInteractionHandler: () => {},\n      deregisterInteractionHandler: () => {},\n      notifyIconAction: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldIconAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldIconFoundation.defaultAdapter, adapter));\n\n    /** @private {function(!Event): undefined} */\n    this.interactionHandler_ = (evt) => this.handleInteraction(evt);\n  }\n\n  init() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  destroy() {\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);\n    });\n  }\n\n  /**\n   * Sets the content of the helper text field.\n   * @param {boolean} disabled\n   */\n  setDisabled(disabled) {\n    if (disabled) {\n      this.adapter_.setAttr('tabindex', '-1');\n    } else {\n      this.adapter_.setAttr('tabindex', '0');\n    }\n  }\n\n  /**\n   * Handles an interaction event\n   * @param {!Event} evt\n   */\n  handleInteraction(evt) {\n    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {\n      this.adapter_.notifyIconAction();\n    }\n  }\n}\n\nexport default MDCTextFieldIconFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Label.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Text Field label into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldLabelAdapter {\n  /**\n   * Adds a class to the label element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the label element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {}\n}\n\nexport default MDCTextFieldLabelAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst cssClasses = {\n  LABEL_FLOAT_ABOVE: 'mdc-text-field__label--float-above',\n  LABEL_SHAKE: 'mdc-text-field__label--shake',\n};\n\nexport {cssClasses};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldLabelAdapter from './adapter';\nimport {cssClasses} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldLabelAdapter>}\n * @final\n */\nclass MDCTextFieldLabelFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /**\n   * {@see MDCTextFieldLabelAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldLabelAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldLabelAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      getWidth: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldLabelAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldLabelFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Returns the width of the label element.\n   * @return {number}\n   */\n  getWidth() {\n    return this.adapter_.getWidth();\n  }\n\n  /**\n   * Styles the label to produce the label shake for errors.\n   * @param {boolean} isValid Whether the input's value is valid (passes all\n   *     validity checks).\n   * @param {boolean} isFocused Whether the input is focused.\n   */\n  styleShake(isValid, isFocused) {\n    const {LABEL_SHAKE} = MDCTextFieldLabelFoundation.cssClasses;\n    if (isValid || isFocused) {\n      this.adapter_.removeClass(LABEL_SHAKE);\n    } else {\n      this.adapter_.addClass(LABEL_SHAKE);\n    }\n  }\n\n  /**\n   * Styles the label to float or defloat as necessary.\n   * @param {string} value The value of the input.\n   * @param {boolean} isFocused Whether the input is focused.\n   * @param {boolean} isBadInput The input's `validity.badInput` value.\n   */\n  styleFloat(value, isFocused, isBadInput) {\n    const {LABEL_FLOAT_ABOVE, LABEL_SHAKE} = MDCTextFieldLabelFoundation.cssClasses;\n    if (!!value || isFocused) {\n      this.adapter_.addClass(LABEL_FLOAT_ABOVE);\n    } else if (!isBadInput) {\n      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);\n      this.adapter_.removeClass(LABEL_SHAKE);\n    }\n  }\n}\n\nexport default MDCTextFieldLabelFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Text Field Outline.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Text Field outline into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldOutlineAdapter {\n  /**\n   * Returns the width of the root element.\n   * @return {number}\n   */\n  getWidth() {}\n\n  /**\n   * Returns the height of the root element.\n   * @return {number}\n   */\n  getHeight() {}\n\n  /**\n   * Sets the \"d\" attribute of the outline element's SVG path.\n   * @param {string} value\n   */\n  setOutlinePathAttr(value) {}\n\n  /**\n   * Returns the idle outline element's computed style value of the given css property `propertyName`.\n   * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.\n   * @param {string} propertyName\n   * @return {string}\n   */\n  getIdleOutlineStyleValue(propertyName) {}\n}\n\nexport default MDCTextFieldOutlineAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  PATH_SELECTOR: '.mdc-text-field__outline-path',\n  IDLE_OUTLINE_SELECTOR: '.mdc-text-field__idle-outline',\n};\n\nexport {strings};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCTextFieldOutlineAdapter from './adapter';\nimport {strings} from './constants';\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldOutlineAdapter>}\n * @final\n */\nclass MDCTextFieldOutlineFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /**\n   * {@see MDCTextFieldOutlineAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldOutlineAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldOutlineAdapter} */ ({\n      getWidth: () => {},\n      getHeight: () => {},\n      setOutlinePathAttr: () => {},\n      getIdleOutlineStyleValue: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldOutlineAdapter} adapter\n   */\n  constructor(adapter) {\n    super(Object.assign(MDCTextFieldOutlineFoundation.defaultAdapter, adapter));\n  }\n\n  /**\n   * Updates the SVG path of the focus outline element based on the given width of the\n   * label element and the RTL context.\n   * @param {number} labelWidth\n   * @param {boolean=} isRtl\n   */\n  updateSvgPath(labelWidth, isRtl = false) {\n    // Fall back to reading a specific corner's style because Firefox doesn't report the style on border-radius.\n    const radiusStyleValue = this.adapter_.getIdleOutlineStyleValue('border-radius') ||\n        this.adapter_.getIdleOutlineStyleValue('border-top-left-radius');\n    const radius = parseFloat(radiusStyleValue);\n    const width = this.adapter_.getWidth();\n    const height = this.adapter_.getHeight();\n    const cornerWidth = radius + 1.2;\n    const leadingStrokeLength = Math.abs(11 - cornerWidth);\n    const paddedLabelWidth = labelWidth + 8;\n\n    // The right, bottom, and left sides of the outline follow the same SVG path.\n    const pathMiddle = 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius\n      + 'v' + (height - (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius\n      + 'h' + (-width + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius\n      + 'v' + (-height + (2 * cornerWidth))\n      + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;\n\n    let path;\n    if (!isRtl) {\n      path = 'M' + (cornerWidth + leadingStrokeLength + paddedLabelWidth) + ',' + 1\n        + 'h' + (width - (2 * cornerWidth) - paddedLabelWidth - leadingStrokeLength)\n        + pathMiddle\n        + 'h' + leadingStrokeLength;\n    } else {\n      path = 'M' + (width - cornerWidth - leadingStrokeLength) + ',' + 1\n        + 'h' + leadingStrokeLength\n        + pathMiddle\n        + 'h' + (width - (2 * cornerWidth) - paddedLabelWidth - leadingStrokeLength);\n    }\n\n    this.adapter_.setOutlinePathAttr(path);\n  }\n}\n\nexport default MDCTextFieldOutlineFoundation;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable no-unused-vars */\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation';\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\nimport MDCTextFieldLabelFoundation from './label/foundation';\nimport MDCTextFieldOutlineFoundation from './outline/foundation';\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * @typedef {{\n *   value: string,\n *   disabled: boolean,\n *   badInput: boolean,\n *   validity: {\n *     badInput: boolean,\n *     valid: boolean,\n *   },\n * }}\n */\nlet NativeInputType;\n\n/**\n * @typedef {{\n *   lineRipple: (!MDCLineRippleFoundation|undefined),\n *   helperText: (!MDCTextFieldHelperTextFoundation|undefined),\n *   icon: (!MDCTextFieldIconFoundation|undefined),\n *   label: (!MDCTextFieldLabelFoundation|undefined),\n *   outline: (!MDCTextFieldOutlineFoundation|undefined)\n * }}\n */\nlet FoundationMapType;\n\n/**\n * Adapter for MDC Text Field.\n *\n * Defines the shape of the adapter expected by the foundation. Implement this\n * adapter to integrate the Text Field into your framework. See\n * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md\n * for more information.\n *\n * @record\n */\nclass MDCTextFieldAdapter {\n  /**\n   * Adds a class to the root Element.\n   * @param {string} className\n   */\n  addClass(className) {}\n\n  /**\n   * Removes a class from the root Element.\n   * @param {string} className\n   */\n  removeClass(className) {}\n\n  /**\n   * Returns true if the root element contains the given class name.\n   * @param {string} className\n   * @return {boolean}\n   */\n  hasClass(className) {}\n\n  /**\n   * Registers an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  registerTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Deregisters an event handler on the root element for a given event.\n   * @param {string} type\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterTextFieldInteractionHandler(type, handler) {}\n\n  /**\n   * Registers an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  registerInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Deregisters an event listener on the native input element for a given event.\n   * @param {string} evtType\n   * @param {function(!Event): undefined} handler\n   */\n  deregisterInputInteractionHandler(evtType, handler) {}\n\n  /**\n   * Returns an object representing the native text input element, with a\n   * similar API shape. The object returned should include the value, disabled\n   * and badInput properties, as well as the checkValidity() function. We never\n   * alter the value within our code, however we do update the disabled\n   * property, so if you choose to duck-type the return value for this method\n   * in your implementation it's important to keep this in mind. Also note that\n   * this method can return null, which the foundation will handle gracefully.\n   * @return {?Element|?NativeInputType}\n   */\n  getNativeInput() {}\n\n  /**\n   * Returns true if the textfield is focused.\n   * We achieve this via `document.activeElement === this.root_`.\n   * @return {boolean}\n   */\n  isFocused() {}\n\n  /**\n   * Returns true if the direction of the root element is set to RTL.\n   * @return {boolean}\n   */\n  isRtl() {}\n\n  /**\n   * Activates the line ripple.\n   */\n  activateLineRipple() {}\n\n  /**\n   * Deactivates the line ripple.\n   */\n  deactivateLineRipple() {}\n\n  /**\n   * Sets the transform origin of the line ripple.\n   * @param {number} normalizedX\n   */\n  setLineRippleTransformOrigin(normalizedX) {}\n}\n\nexport {MDCTextFieldAdapter, NativeInputType, FoundationMapType};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @enum {string} */\nconst strings = {\n  ARIA_CONTROLS: 'aria-controls',\n  INPUT_SELECTOR: '.mdc-text-field__input',\n  LABEL_SELECTOR: '.mdc-text-field__label',\n  ICON_SELECTOR: '.mdc-text-field__icon',\n  OUTLINE_SELECTOR: '.mdc-text-field__outline',\n  BOTTOM_LINE_SELECTOR: '.mdc-line-ripple',\n};\n\n/** @enum {string} */\nconst cssClasses = {\n  ROOT: 'mdc-text-field',\n  UPGRADED: 'mdc-text-field--upgraded',\n  DISABLED: 'mdc-text-field--disabled',\n  DENSE: 'mdc-text-field--dense',\n  FOCUSED: 'mdc-text-field--focused',\n  INVALID: 'mdc-text-field--invalid',\n  BOX: 'mdc-text-field--box',\n  OUTLINED: 'mdc-text-field--outlined',\n};\n\n/** @enum {number} */\nconst numbers = {\n  LABEL_SCALE: 0.75,\n  DENSE_LABEL_SCALE: 0.923,\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport {MDCTextFieldAdapter, NativeInputType, FoundationMapType} from './adapter';\n/* eslint-disable no-unused-vars */\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation';\nimport MDCTextFieldHelperTextFoundation from './helper-text/foundation';\nimport MDCTextFieldIconFoundation from './icon/foundation';\nimport MDCTextFieldLabelFoundation from './label/foundation';\nimport MDCTextFieldOutlineFoundation from './outline/foundation';\n/* eslint-enable no-unused-vars */\nimport {cssClasses, strings, numbers} from './constants';\n\n\n/**\n * @extends {MDCFoundation<!MDCTextFieldAdapter>}\n * @final\n */\nclass MDCTextFieldFoundation extends MDCFoundation {\n  /** @return enum {string} */\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  /** @return enum {string} */\n  static get strings() {\n    return strings;\n  }\n\n  /** @return enum {string} */\n  static get numbers() {\n    return numbers;\n  }\n\n  /**\n   * {@see MDCTextFieldAdapter} for typing information on parameters and return\n   * types.\n   * @return {!MDCTextFieldAdapter}\n   */\n  static get defaultAdapter() {\n    return /** @type {!MDCTextFieldAdapter} */ ({\n      addClass: () => {},\n      removeClass: () => {},\n      hasClass: () => {},\n      registerTextFieldInteractionHandler: () => {},\n      deregisterTextFieldInteractionHandler: () => {},\n      registerInputInteractionHandler: () => {},\n      deregisterInputInteractionHandler: () => {},\n      getNativeInput: () => {},\n      isFocused: () => {},\n      isRtl: () => {},\n      activateLineRipple: () => {},\n      deactivateLineRipple: () => {},\n      setLineRippleTransformOrigin: () => {},\n    });\n  }\n\n  /**\n   * @param {!MDCTextFieldAdapter} adapter\n   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.\n   */\n  constructor(adapter, foundationMap = /** @type {!FoundationMapType} */ ({})) {\n    super(Object.assign(MDCTextFieldFoundation.defaultAdapter, adapter));\n\n    /** @type {!MDCTextFieldHelperTextFoundation|undefined} */\n    this.helperText_ = foundationMap.helperText;\n    /** @type {!MDCTextFieldIconFoundation|undefined} */\n    this.icon_ = foundationMap.icon;\n    /** @type {!MDCTextFieldLabelFoundation|undefined} */\n    this.label_ = foundationMap.label;\n    /** @type {!MDCTextFieldOutlineFoundation|undefined} */\n    this.outline_ = foundationMap.outline;\n\n    /** @private {boolean} */\n    this.isFocused_ = false;\n    /** @private {boolean} */\n    this.receivedUserInput_ = false;\n    /** @private {boolean} */\n    this.useCustomValidityChecking_ = false;\n    /** @private {boolean} */\n    this.isValid_ = true;\n    /** @private {function(): undefined} */\n    this.inputFocusHandler_ = () => this.activateFocus();\n    /** @private {function(): undefined} */\n    this.inputBlurHandler_ = () => this.deactivateFocus();\n    /** @private {function(): undefined} */\n    this.inputInputHandler_ = () => this.autoCompleteFocus();\n    /** @private {function(!Event): undefined} */\n    this.setPointerXOffset_ = (evt) => this.setTransformOrigin(evt);\n    /** @private {function(!Event): undefined} */\n    this.textFieldInteractionHandler_ = () => this.handleTextFieldInteraction();\n  }\n\n  init() {\n    this.adapter_.addClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n    // Ensure label does not collide with any pre-filled value.\n    if (this.label_ && this.getValue()) {\n      this.label_.styleFloat(\n        this.getValue(), this.isFocused_, this.isBadInput_());\n    }\n\n    if (this.adapter_.isFocused()) {\n      this.inputFocusHandler_();\n    }\n\n    this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.registerInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n  }\n\n  destroy() {\n    this.adapter_.removeClass(MDCTextFieldFoundation.cssClasses.UPGRADED);\n    this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);\n    this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);\n    this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);\n    ['mousedown', 'touchstart'].forEach((evtType) => {\n      this.adapter_.deregisterInputInteractionHandler(evtType, this.setPointerXOffset_);\n    });\n    ['click', 'keydown'].forEach((evtType) => {\n      this.adapter_.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);\n    });\n  }\n\n  /**\n   * Handles user interactions with the Text Field.\n   */\n  handleTextFieldInteraction() {\n    if (this.adapter_.getNativeInput().disabled) {\n      return;\n    }\n    this.receivedUserInput_ = true;\n  }\n\n  /**\n   * Updates the focus outline for outlined text fields.\n   */\n  updateOutline() {\n    if (!this.outline_ || !this.label_) {\n      return;\n    }\n\n    const isDense = this.adapter_.hasClass(cssClasses.DENSE);\n    const labelScale = isDense ? numbers.DENSE_LABEL_SCALE : numbers.LABEL_SCALE;\n    const labelWidth = this.label_.getWidth() * labelScale;\n    const isRtl = this.adapter_.isRtl();\n    this.outline_.updateSvgPath(labelWidth, isRtl);\n  }\n\n  /**\n   * Activates the text field focus state.\n   */\n  activateFocus() {\n    this.isFocused_ = true;\n    this.styleFocused_(this.isFocused_);\n    this.adapter_.activateLineRipple();\n    if (this.outline_) {\n      this.updateOutline();\n    }\n    if (this.label_) {\n      this.label_.styleShake(this.isValid(), this.isFocused_);\n      this.label_.styleFloat(\n        this.getValue(), this.isFocused_, this.isBadInput_());\n    }\n    if (this.helperText_) {\n      this.helperText_.showToScreenReader();\n    }\n  }\n\n  /**\n   * Sets the line ripple's transform origin, so that the line ripple activate\n   * animation will animate out from the user's click location.\n   * @param {!Event} evt\n   */\n  setTransformOrigin(evt) {\n    const targetClientRect = evt.target.getBoundingClientRect();\n    const evtCoords = {x: evt.clientX, y: evt.clientY};\n    const normalizedX = evtCoords.x - targetClientRect.left;\n    this.adapter_.setLineRippleTransformOrigin(normalizedX);\n  }\n\n  /**\n   * Activates the Text Field's focus state in cases when the input value\n   * changes without user input (e.g. programatically).\n   */\n  autoCompleteFocus() {\n    if (!this.receivedUserInput_) {\n      this.activateFocus();\n    }\n  }\n\n  /**\n   * Deactivates the Text Field's focus state.\n   */\n  deactivateFocus() {\n    this.isFocused_ = false;\n    this.adapter_.deactivateLineRipple();\n    const input = this.getNativeInput_();\n    const shouldRemoveLabelFloat = !input.value && !this.isBadInput_();\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    this.styleFocused_(this.isFocused_);\n    if (this.label_) {\n      this.label_.styleShake(this.isValid(), this.isFocused_);\n      this.label_.styleFloat(\n        this.getValue(), this.isFocused_, this.isBadInput_());\n    }\n    if (shouldRemoveLabelFloat) {\n      this.receivedUserInput_ = false;\n    }\n  }\n\n  /**\n   * @return {string} The value of the input Element.\n   */\n  getValue() {\n    return this.getNativeInput_().value;\n  }\n\n  /**\n   * @param {string} value The value to set on the input Element.\n   */\n  setValue(value) {\n    this.getNativeInput_().value = value;\n    const isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.label_) {\n      this.label_.styleShake(isValid, this.isFocused_);\n      this.label_.styleFloat(\n        this.getValue(), this.isFocused_, this.isBadInput_());\n    }\n  }\n\n  /**\n   * @return {boolean} If a custom validity is set, returns that value.\n   *     Otherwise, returns the result of native validity checks.\n   */\n  isValid() {\n    return this.useCustomValidityChecking_\n      ? this.isValid_ : this.isNativeInputValid_();\n  }\n\n  /**\n   * @param {boolean} isValid Sets the validity state of the Text Field.\n   */\n  setValid(isValid) {\n    this.useCustomValidityChecking_ = true;\n    this.isValid_ = isValid;\n    // Retrieve from the getter to ensure correct logic is applied.\n    isValid = this.isValid();\n    this.styleValidity_(isValid);\n    if (this.label_) {\n      this.label_.styleShake(isValid, this.isFocused_);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field is disabled.\n   */\n  isDisabled() {\n    return this.getNativeInput_().disabled;\n  }\n\n  /**\n   * @param {boolean} disabled Sets the text-field disabled or enabled.\n   */\n  setDisabled(disabled) {\n    this.getNativeInput_().disabled = disabled;\n    this.styleDisabled_(disabled);\n  }\n\n  /**\n   * @return {boolean} True if the Text Field is required.\n   */\n  isRequired() {\n    return this.getNativeInput_().required;\n  }\n\n  /**\n   * @param {boolean} isRequired Sets the text-field required or not.\n   */\n  setRequired(isRequired) {\n    this.getNativeInput_().required = isRequired;\n    // Addition of the asterisk is automatic based on CSS, but validity checking\n    // needs to be manually run.\n    this.styleValidity_(this.isValid());\n  }\n\n  /**\n   * @param {string} content Sets the content of the helper text.\n   */\n  setHelperTextContent(content) {\n    if (this.helperText_) {\n      this.helperText_.setContent(content);\n    }\n  }\n\n  /**\n   * @return {boolean} True if the Text Field input fails in converting the\n   *     user-supplied value.\n   * @private\n   */\n  isBadInput_() {\n    return this.getNativeInput_().validity.badInput;\n  }\n\n  /**\n   * @return {boolean} The result of native validity checking\n   *     (ValidityState.valid).\n   */\n  isNativeInputValid_() {\n    return this.getNativeInput_().validity.valid;\n  }\n\n  /**\n   * Styles the component based on the validity state.\n   * @param {boolean} isValid\n   * @private\n   */\n  styleValidity_(isValid) {\n    const {INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isValid) {\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.addClass(INVALID);\n    }\n    if (this.helperText_) {\n      this.helperText_.setValidity(isValid);\n    }\n  }\n\n  /**\n   * Styles the component based on the focused state.\n   * @param {boolean} isFocused\n   * @private\n   */\n  styleFocused_(isFocused) {\n    const {FOCUSED} = MDCTextFieldFoundation.cssClasses;\n    if (isFocused) {\n      this.adapter_.addClass(FOCUSED);\n    } else {\n      this.adapter_.removeClass(FOCUSED);\n    }\n  }\n\n  /**\n   * Styles the component based on the disabled state.\n   * @param {boolean} isDisabled\n   * @private\n   */\n  styleDisabled_(isDisabled) {\n    const {DISABLED, INVALID} = MDCTextFieldFoundation.cssClasses;\n    if (isDisabled) {\n      this.adapter_.addClass(DISABLED);\n      this.adapter_.removeClass(INVALID);\n    } else {\n      this.adapter_.removeClass(DISABLED);\n    }\n    if (this.icon_) {\n      this.icon_.setDisabled(isDisabled);\n    }\n  }\n\n  /**\n   * @return {!Element|!NativeInputType} The native text input from the\n   * host environment, or a dummy if none exists.\n   * @private\n   */\n  getNativeInput_() {\n    return this.adapter_.getNativeInput() ||\n    /** @type {!NativeInputType} */ ({\n      value: '',\n      disabled: false,\n      validity: {\n        badInput: false,\n        valid: true,\n      },\n    });\n  }\n}\n\nexport default MDCTextFieldFoundation;\n","<template>\r\n  <div class=\"mdc-textfield-wrapper\" :style=\"{width:fullwidth?'100%':undefined}\">\r\n\r\n    <div ref=\"root\" :class=\"rootClasses\">\r\n\r\n      <i ref=\"icon\" v-if=\"!!hasLeadingIcon\"\r\n        tabindex=\"0\" \r\n        class=\"mdc-text-field__icon\"  \r\n        :class=\"hasLeadingIcon.classes\">\r\n        <slot name=\"leading-icon\">{{ hasLeadingIcon.content }}</slot>\r\n      </i>\r\n\r\n      <textarea ref=\"input\" v-if=\"multiline\"\r\n        v-on=\"$listeners\"\r\n        v-bind=\"inputAttrs\"\r\n        :class=\"inputClasses\"\r\n        @input=\"updateValue($event.target.value)\"\r\n        :minlength=\"minlength\" :maxlength=\"maxlength\"\r\n        :placeholder=\"inputPlaceHolder\"\r\n        :aria-label=\"inputPlaceHolder\"\r\n        :aria-controls=\"inputAriaControls\"\r\n        :rows=\"rows\" :cols=\"cols\" \r\n        ></textarea>\r\n\r\n      <input ref=\"input\" v-else\r\n        v-on=\"$listeners\" \r\n        v-bind=\"inputAttrs\"\r\n        :class=\"inputClasses\"\r\n        @input=\"updateValue($event.target.value)\"\r\n        :type=\"type\"\r\n        :minlength=\"minlength\" :maxlength=\"maxlength\"\r\n        :placeholder=\"inputPlaceHolder\"\r\n        :aria-label=\"inputPlaceHolder\"\r\n        :aria-controls=\"inputAriaControls\" \r\n        />\r\n\r\n      <label ref=\"label\" :class=\"labelClassesUpgraded\" :for=\"_uid\"  v-if=\"hasLabel\">\r\n        {{ label }}\r\n      </label>\r\n\r\n      <i ref=\"icon\" v-if=\"!!hasTrailingIcon\"\r\n        tabindex=\"0\" \r\n        class=\"mdc-text-field__icon\"  \r\n        :class=\"hasTrailingIcon.classes\">\r\n        <slot name=\"trailing-icon\">{{ hasTrailingIcon.content }}</slot>\r\n      </i>\r\n\r\n      <div ref=\"outline\" class=\"mdc-text-field__outline\" v-if=\"hasOutline\">\r\n        <svg>\r\n          <path class=\"mdc-text-field__outline-path\" :d=\"outlinePathAttr\" />\r\n        </svg>\r\n      </div>\r\n      <div ref=\"outlineIdle\" class=\"mdc-text-field__idle-outline\" v-if=\"hasOutline\"></div>\r\n      <div ref=\"bottom\" :class=\"bottomClasses\" v-if=\"hasBottomLine\"></div>\r\n\r\n    </div>\r\n\r\n    <p ref=\"help\" :id=\"'help-'+_uid\" :class=\"helpClasses\"\r\n      aria-hidden=\"true\" v-if=\"helptext\">\r\n      {{ helptext  }}\r\n    </p>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MDCTextfieldFoundation from '@material/textfield/foundation'\r\nimport MDCLineRippleFoundation from '@material/line-ripple/foundation'\r\nimport MDCTextFieldHelperTextFoundation from '@material/textfield/helper-text/foundation'\r\nimport MDCTextFieldIconFoundation from '@material/textfield/icon/foundation';\r\nimport MDCTextFieldLabelFoundation from '@material/textfield/label/foundation';\r\nimport MDCTextFieldOutlineFoundation from '@material/textfield/outline/foundation';\r\n\r\nimport {\r\n  extractIconProp, \r\n  DispatchFocusMixin, CustomElementMixin} from '../base'\r\nimport {RippleBase} from '../ripple'\r\n\r\nexport default {\r\n  name: 'mdc-textfield',\r\n  mixins: [CustomElementMixin, DispatchFocusMixin],\r\n  model: {\r\n    prop: 'value',\r\n    event: 'model'\r\n  },\r\n  props: {\r\n    value: String,\r\n    type: {\r\n      type: String,\r\n      default: 'text',\r\n      validator: function (value) {\r\n        return ['text', 'email', 'search', 'password', 'tel', 'url']\r\n          .indexOf(value) !== -1\r\n      }\r\n    },\r\n    dense: Boolean,\r\n    label: String,\r\n    helptext: String,\r\n    helptextPersistent: Boolean,\r\n    helptextValidation: Boolean,\r\n    box: Boolean,\r\n    outline: Boolean,\r\n    disabled: Boolean,\r\n    required: Boolean,\r\n    valid: {type: Boolean, default: undefined}, \r\n    fullwidth: Boolean,\r\n    multiline: Boolean,\r\n    leadingIcon: [String, Array, Object],\r\n    trailingIcon: [String, Array, Object],\r\n    size: { type: [Number, String], default: 20 },\r\n    minlength: { type: [Number, String], default: undefined },\r\n    maxlength: { type: [Number, String], default: undefined },\r\n    rows: { type: [Number, String], default: 8 },\r\n    cols: { type: [Number, String], default: 40 },\r\n    \r\n    // other input props  \r\n    name: String,\r\n    readonly: Boolean,\r\n    autocomplete: Boolean,\r\n    autofocus: Boolean,\r\n  },\r\n  data: function () {\r\n    return {\r\n      text: this.value,\r\n      rootClasses: {\r\n        'mdc-textfield': true,\r\n        'mdc-text-field': true,\r\n        'mdc-text-field--upgraded': true,\r\n        'mdc-text-field--disabled': this.disabled,\r\n        'mdc-text-field--dense': this.dense,\r\n        'mdc-text-field--fullwidth': this.fullwidth,\r\n        'mdc-text-field--textarea': this.multiline,\r\n        'mdc-text-field--box': !this.fullwidth && this.box,\r\n        'mdc-text-field--outlined': !this.fullwidth && this.outline,\r\n      },\r\n      inputClasses: {\r\n        'mdc-text-field__input': true\r\n      },\r\n      labelClasses: {\r\n        'mdc-text-field__label': true\r\n      },\r\n      bottomClasses: {\r\n        'mdc-line-ripple': true\r\n      },\r\n      helpClasses: {\r\n        'mdc-text-field-helper-text': true,\r\n        'mdc-text-field-helper-text--persistent': this.helptextPersistent,\r\n        'mdc-text-field-helper-text--validation-msg': this.helptextValidation\r\n      },\r\n      outlinePathAttr: undefined,\r\n    }\r\n  },\r\n  watch:  {\r\n    disabled () {\r\n      this.foundation && this.foundation.setDisabled(this.disabled)\r\n    },\r\n    required () {\r\n      this.foundation && this.foundation.setRequired(this.disabled)\r\n    },\r\n    valid () {\r\n      if (typeof this.valid !== \"undefined\") {\r\n        this.foundation && this.foundation.setValid(this.valid)\r\n      }\r\n    },\r\n    dense () {\r\n        this.$set(this.rootClasses, 'mdc-text-field--dense', this.dense)\r\n    },\r\n    helptextPersistent () {\r\n      this.helperTextFoundation \r\n        && this.helperTextFoundation.setPersistent(this.helptextPersistent)\r\n    },\r\n    helptextValidation () {\r\n      this.helperTextFoundation \r\n        && this.helperTextFoundation.setValidation(this.helptextValidation)\r\n    },\r\n    value (value) {\r\n      if (this.foundation) {\r\n        if (value !== this.foundation.getValue()) {\r\n          this.foundation.setValue(value)\r\n        }\r\n      } \r\n    }\r\n  },\r\n  methods: {\r\n    updateValue (value) {\r\n      this.$emit('model', value)\r\n    },\r\n    focus () {\r\n      this.$refs.input && this.$refs.input.focus() \r\n    },\r\n    blur () {\r\n      this.$refs.input && this.$refs.input.blur() \r\n    }\r\n  },\r\n  computed: {\r\n    inputAttrs () {\r\n      let { name, readonly, autocomplete, autofocus} = this\r\n      return { name, readonly, autocomplete, autofocus};\r\n    },\r\n    inputPlaceHolder () {\r\n      return this.fullwidth ? this.label : undefined\r\n    },\r\n    inputAriaControls () {\r\n      return this.help ? 'help-' + this._uid: undefined\r\n    },\r\n    hasLabel () {\r\n      return !this.fullwidth && this.label\r\n    },\r\n    hasOutline () {\r\n      return !this.fullwidth && this.outline \r\n    },\r\n    hasBottomLine () {\r\n      return !this.hasOutline && !this.multiline\r\n    },\r\n    hasLeadingIcon () {\r\n      if ((this.leadingIcon || this.$slots['leading-icon'])\r\n         && !(this.trailingIcon || this.$slots['trailing-icon'])) {\r\n        return this.leadingIcon ? extractIconProp(this.leadingIcon) : {}\r\n      }\r\n      return false\r\n    },\r\n    hasTrailingIcon () {\r\n      if (this.trailingIcon || this.$slots['trailing-icon']) {\r\n        return this.trailingIcon ? extractIconProp(this.trailingIcon) : {}\r\n      }\r\n      return false\r\n    },\r\n    labelClassesUpgraded () {\r\n      return Object.assign(this.labelClasses, {\r\n        'mdc-text-field__label--float-above': this.value\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n\r\n    if (this.$refs.bottom) {\r\n      this.bottomLineFoundation = new MDCLineRippleFoundation({\r\n        addClass: (className) => {\r\n          this.$set(this.bottomClasses, className, true)\r\n        },\r\n        removeClass: (className) => {\r\n          this.$delete(this.bottomClasses, className)\r\n        },\r\n        hasClass: (className) => {\r\n          this.bottomClasses.classList.contains(className)\r\n        },\r\n        setAttr: (name, value) => {\r\n          this.$refs.bottom.setAttribute(name, value)\r\n        },\r\n        registerEventHandler: (evtType, handler) => {\r\n          this.$refs.bottom.addEventListener(evtType, handler)\r\n        },\r\n        deregisterEventHandler: (evtType, handler) => {\r\n          this.$refs.bottom.removeEventListener(evtType, handler)\r\n        },\r\n      })\r\n      this.bottomLineFoundation.init()\r\n    }\r\n\r\n    if (this.$refs.help) {\r\n      this.helperTextFoundation = new MDCTextFieldHelperTextFoundation({\r\n        addClass: (className) => {\r\n          this.$set(this.helpClasses, className, true)\r\n        },\r\n        removeClass: (className) => {\r\n          this.$delete(this.helpClasses, className)\r\n        },\r\n        hasClass: (className) => {\r\n          return this.$refs.help.classList.contains(className)\r\n        },\r\n        setAttr: (name, value) => {\r\n          this.$refs.help.setAttribute(name, value)\r\n        },\r\n        removeAttr: (name) => {\r\n          this.$refs.help.removeAttribute(name)\r\n        },\r\n        setContent: ( /*content*/) => {\r\n          // help text get's updated from {{helptext}}\r\n          // this.$refs.help.textContent = content;\r\n        }\r\n      })\r\n      this.helperTextFoundation.init()\r\n    }\r\n\r\n    if (this.$refs.icon) {\r\n      if (this.hasLeadingIcon){\r\n        this.$set(this.rootClasses, 'mdc-text-field--with-leading-icon', true)\r\n      } else if (this.hasTrailingIcon) {\r\n        this.$set(this.rootClasses, 'mdc-text-field--with-trailing-icon', true)\r\n      }\r\n\r\n      this.iconFoundation = new MDCTextFieldIconFoundation({\r\n        setAttr: (attr, value) => this.$refs.icon.setAttribute(attr, value),\r\n        registerInteractionHandler: (evtType, handler) => {\r\n          this.$refs.icon.addEventListener(evtType, handler)\r\n        },\r\n        deregisterInteractionHandler: (evtType, handler) => {\r\n          this.$refs.icon.removeEventListener(evtType, handler)\r\n        },\r\n        notifyIconAction: () => this.$emit('icon-action')\r\n      })\r\n      this.iconFoundation.init()\r\n    }    \r\n    \r\n    if (this.$refs.label) {\r\n      this.labelFoundation = new MDCTextFieldLabelFoundation({\r\n        addClass: (className) => {\r\n          this.$set(this.labelClasses, className, true)\r\n        },\r\n        removeClass: (className) => {\r\n          this.$delete(this.labelClasses, className)\r\n        },\r\n        getWidth: () => this.$refs.label.offsetWidth,\r\n      })\r\n      this.labelFoundation.init()\r\n    }    \r\n\r\n    if (this.$refs.outline) {\r\n      this.outlineFoundation = new MDCTextFieldOutlineFoundation({\r\n        getWidth: () => this.$refs.outline.offsetWidth,\r\n        getHeight: () => this.$refs.outline.offsetHeight,\r\n        setOutlinePathAttr: (value) => {\r\n          this.outlinePathAttr = value\r\n        },\r\n        getIdleOutlineStyleValue: (propertyName) => {\r\n          const idleOutlineElement = this.$refs.outlineIdle;\r\n          if (idleOutlineElement) {\r\n            return window.getComputedStyle(idleOutlineElement)\r\n              .getPropertyValue(propertyName);\r\n          }\r\n        },\r\n      })\r\n      this.outlineFoundation.init()\r\n    }    \r\n\r\n    this.foundation = new MDCTextfieldFoundation({\r\n      addClass: (className) => {\r\n        this.$set(this.rootClasses, className, true)\r\n      },\r\n      removeClass: (className) => {\r\n        this.$delete(this.rootClasses, className)\r\n      },\r\n      hasClass: (className) => {\r\n        this.$refs.root.classList.contains(className)\r\n      },\r\n      registerTextFieldInteractionHandler: (evtType, handler) => {\r\n        this.$refs.root.addEventListener(evtType, handler)\r\n      },\r\n      deregisterTextFieldInteractionHandler: (evtType, handler) => {\r\n        this.$refs.root.removeEventListener(evtType, handler)\r\n      },\r\n      isFocused: () => {\r\n        return document.activeElement === this.$refs.input\r\n      },\r\n      isRtl: () => window.getComputedStyle(this.$refs.root).getPropertyValue('direction') === 'rtl',     \r\n      deactivateLineRipple: () => {\r\n        if (this.bottom) {\r\n          this.bottom.deactivate();\r\n        }\r\n      },\r\n      activateLineRipple: () => {\r\n        if (this.bottom) {\r\n          this.bottom.activate();\r\n        }\r\n      },\r\n      setLineRippleTransformOrigin: (normalizedX) => {\r\n        if (this.bottom) {\r\n          this.bottom.setRippleCenter(normalizedX);\r\n        }\r\n      },\r\n      registerInputInteractionHandler: (evtType, handler) => {\r\n        this.$refs.input.addEventListener(evtType, handler)\r\n      },\r\n      deregisterInputInteractionHandler: (evtType, handler) => {\r\n        this.$refs.input.removeEventListener(evtType, handler)\r\n      },\r\n      getNativeInput: () => {\r\n        return this.$refs.input\r\n      },\r\n      \r\n    }, {\r\n      bottomLine: this.bottomLineFoundation,\r\n      helperText: this.helperTextFoundation,\r\n      icon: this.iconFoundation,\r\n      label: this.labelFoundation,\r\n      outline: this.outlineFoundation,\r\n    })\r\n\r\n\r\n    this.foundation.init()\r\n    this.foundation.setValue(this.value)\r\n    this.foundation.setDisabled(this.disabled)\r\n    this.foundation.setRequired(this.required)\r\n    if (typeof this.valid !== \"undefined\") {\r\n      this.foundation.setValid(this.valid)\r\n    }\r\n\r\n    if (this.textbox) {\r\n      this.ripple = new RippleBase(this)\r\n      this.ripple.init()\r\n    }\r\n\r\n  },\r\n  beforeDestroy () {\r\n    this.foundation && this.foundation.destroy()\r\n    this.bottomLineFoundation && this.bottomLineFoundation.destroy()\r\n    this.helperTextFoundation && this.helperTextFoundation.destroy()\r\n    this.iconFoundation && this.iconFoundation.destroy()\r\n    this.labelFoundation && this.labelFoundation.destroy()\r\n    this.outlineFoundation && this.outlineFoundation.destroy()\r\n    this.ripple && this.ripple.destroy()\r\n  }\r\n}\r\n\r\n</script>\r\n","import {BasePlugin} from '../base'\nimport mdcTextField from './mdc-textfield.vue'\n\nexport {mdcTextField}\n\nexport default BasePlugin({\n  mdcTextField\n})\n"],"names":["BasePlugin","components","vm","key","component","name","CustomElement","createElement","context","props","is","tag","data","children","CustomElementMixin","extractIconProp","iconProp","Array","reduce","result","value","babelHelpers.extends","className","split","textContent","DispatchFocusMixin","hasFocus","_active","dispatchFocusEvent","setTimeout","$el","document","activeElement","contains","$emit","addEventListener","onFocusEvent","onBlurEvent","onMouseDown","onMouseUp","removeEventListener","MDCFoundation","adapter","adapter_","MDCLineRippleAdapter","attr","evtType","handler","cssClasses","MDCLineRippleFoundation","defaultAdapter","transitionEndHandler_","evt","handleTransitionEnd","registerEventHandler","deregisterEventHandler","removeClass","LINE_RIPPLE_DEACTIVATING","addClass","LINE_RIPPLE_ACTIVE","xCoordinate","attributeString","setAttr","isDeactivating","hasClass","propertyName","MDCTextFieldHelperTextAdapter","content","strings","MDCTextFieldHelperTextFoundation","setContent","isPersistent","HELPER_TEXT_PERSISTENT","isValidation","HELPER_TEXT_VALIDATION_MSG","removeAttr","ARIA_HIDDEN","inputIsValid","helperTextIsPersistent","helperTextIsValidationMsg","validationMsgNeedsDisplay","ROLE","hide_","MDCTextFieldIconAdapter","MDCTextFieldIconFoundation","interactionHandler_","handleInteraction","forEach","registerInteractionHandler","deregisterInteractionHandler","disabled","type","keyCode","notifyIconAction","MDCTextFieldLabelAdapter","MDCTextFieldLabelFoundation","getWidth","isValid","isFocused","LABEL_SHAKE","isBadInput","LABEL_FLOAT_ABOVE","MDCTextFieldOutlineAdapter","MDCTextFieldOutlineFoundation","labelWidth","isRtl","radiusStyleValue","getIdleOutlineStyleValue","radius","parseFloat","width","height","getHeight","cornerWidth","leadingStrokeLength","Math","abs","paddedLabelWidth","pathMiddle","path","setOutlinePathAttr","MDCTextFieldAdapter","normalizedX","numbers","MDCTextFieldFoundation","foundationMap","helperText_","helperText","icon_","icon","label_","label","outline_","outline","isFocused_","receivedUserInput_","useCustomValidityChecking_","isValid_","inputFocusHandler_","activateFocus","inputBlurHandler_","deactivateFocus","inputInputHandler_","autoCompleteFocus","setPointerXOffset_","setTransformOrigin","textFieldInteractionHandler_","handleTextFieldInteraction","UPGRADED","getValue","styleFloat","isBadInput_","registerInputInteractionHandler","registerTextFieldInteractionHandler","deregisterInputInteractionHandler","deregisterTextFieldInteractionHandler","getNativeInput","isDense","DENSE","labelScale","DENSE_LABEL_SCALE","LABEL_SCALE","updateSvgPath","styleFocused_","activateLineRipple","updateOutline","styleShake","showToScreenReader","targetClientRect","target","getBoundingClientRect","evtCoords","x","clientX","y","clientY","left","setLineRippleTransformOrigin","deactivateLineRipple","input","getNativeInput_","shouldRemoveLabelFloat","styleValidity_","isNativeInputValid_","styleDisabled_","required","isRequired","validity","badInput","valid","INVALID","setValidity","FOCUSED","isDisabled","DISABLED","setDisabled","render","String","indexOf","Boolean","default","undefined","Object","Number","dense","fullwidth","multiline","box","helptextPersistent","helptextValidation","foundation","setRequired","setValid","$set","rootClasses","helperTextFoundation","setPersistent","setValidation","setValue","$refs","focus","blur","readonly","autocomplete","autofocus","help","_uid","hasOutline","leadingIcon","$slots","trailingIcon","labelClasses","bottom","bottomLineFoundation","bottomClasses","$delete","classList","setAttribute","init","helpClasses","removeAttribute","hasLeadingIcon","hasTrailingIcon","iconFoundation","labelFoundation","offsetWidth","outlineFoundation","offsetHeight","outlinePathAttr","idleOutlineElement","outlineIdle","window","getComputedStyle","getPropertyValue","MDCTextfieldFoundation","root","deactivate","activate","setRippleCenter","textbox","ripple","RippleBase","destroy"],"mappings":"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"}