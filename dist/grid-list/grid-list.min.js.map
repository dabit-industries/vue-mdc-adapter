{"version":3,"file":"grid-list.min.js","sources":["../../components/base/dispatch-event-mixin.js","../../node_modules/@material/base/foundation.js","../../node_modules/@material/grid-list/constants.js","../../node_modules/@material/base/component.js","../../node_modules/@material/grid-list/foundation.js","../../components/grid-list/mdc-grid-list.vue","../../node_modules/@material/ripple/constants.js","../../node_modules/@material/ripple/adapter.js","../../node_modules/@material/ripple/util.js","../../node_modules/@material/ripple/foundation.js","../../components/base/base-plugin.js","../../components/ripple/mdc-ripple-base.js","../../components/grid-list/mdc-grid-tile.vue","../../components/base/auto-init.js","../../components/grid-list/entry.js"],"sourcesContent":["export const DispatchEventMixin = {\n  props: {\n    'event': String,\n    'event-target': Object,\n    'event-args': Array,\n  },\n  methods: {\n    dispatchEvent (evt) {\n      this.$emit(evt.type)\n      if (this.event) {\n        let target = this.eventTarget || this.$root\n        let args = this.eventArgs || []\n        target.$emit(this.event, ...args)\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nclass MDCFoundation {\n  /** @return enum{cssClasses} */\n  static get cssClasses() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports every\n    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n    return {};\n  }\n\n  /** @return enum{strings} */\n  static get strings() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n    return {};\n  }\n\n  /** @return enum{numbers} */\n  static get numbers() {\n    // Classes extending MDCFoundation should implement this method to return an object which exports all\n    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n    return {};\n  }\n\n  /** @return {!Object} */\n  static get defaultAdapter() {\n    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n    // validation.\n    return {};\n  }\n\n  /**\n   * @param {A=} adapter\n   */\n  constructor(adapter = {}) {\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  init() {\n    // Subclasses should override this method to perform initialization routines (registering events, etc.)\n  }\n\n  destroy() {\n    // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n  }\n}\n\nexport default MDCFoundation;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const strings = {\n  TILES_SELECTOR: '.mdc-grid-list__tiles',\n  TILE_SELECTOR: '.mdc-grid-tile',\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from './foundation';\n\n/**\n * @template F\n */\nclass MDCComponent {\n  /**\n   * @param {!Element} root\n   * @return {!MDCComponent}\n   */\n  static attachTo(root) {\n    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n    // returns an instantiated component with its root set to that element. Also note that in the cases of\n    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n    // from getDefaultFoundation().\n    return new MDCComponent(root, new MDCFoundation());\n  }\n\n  /**\n   * @param {!Element} root\n   * @param {F=} foundation\n   * @param {...?} args\n   */\n  constructor(root, foundation = undefined, ...args) {\n    /** @protected {!Element} */\n    this.root_ = root;\n    this.initialize(...args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  initialize(/* ...args */) {\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n  }\n\n  /**\n   * @return {!F} foundation\n   */\n  getDefaultFoundation() {\n    // Subclasses must override this method to return a properly configured foundation class for the\n    // component.\n    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' +\n      'foundation class');\n  }\n\n  initialSyncWithDOM() {\n    // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n    // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n  }\n\n  destroy() {\n    // Subclasses may implement this method to release any resources / deregister any listeners they have\n    // attached. An example of this might be deregistering a resize event from the window object.\n    this.foundation_.destroy();\n  }\n\n  /**\n   * Wrapper method to add an event listener to the component's root element. This is most useful when\n   * listening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  listen(evtType, handler) {\n    this.root_.addEventListener(evtType, handler);\n  }\n\n  /**\n   * Wrapper method to remove an event listener to the component's root element. This is most useful when\n   * unlistening for custom events.\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  unlisten(evtType, handler) {\n    this.root_.removeEventListener(evtType, handler);\n  }\n\n  /**\n   * Fires a cross-browser-compatible custom event from the component root of the given type,\n   * with the given data.\n   * @param {string} evtType\n   * @param {!Object} evtData\n   * @param {boolean=} shouldBubble\n   */\n  emit(evtType, evtData, shouldBubble = false) {\n    let evt;\n    if (typeof CustomEvent === 'function') {\n      evt = new CustomEvent(evtType, {\n        detail: evtData,\n        bubbles: shouldBubble,\n      });\n    } else {\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n    }\n\n    this.root_.dispatchEvent(evt);\n  }\n}\n\nexport default MDCComponent;\n","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {MDCFoundation} from '@material/base/index';\nimport {strings} from './constants';\n\nexport default class MDCGridListFoundation extends MDCFoundation {\n  static get strings() {\n    return strings;\n  }\n\n  static get defaultAdapter() {\n    return {\n      getOffsetWidth: () => /* number */ 0,\n      getNumberOfTiles: () => /* number */ 0,\n      getOffsetWidthForTileAtIndex: (/* index: number */) => /* number */ 0,\n      setStyleForTilesElement: (/* property: string, value: string */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n    };\n  }\n  constructor(adapter) {\n    super(Object.assign(MDCGridListFoundation.defaultAdapter, adapter));\n    this.resizeHandler_ = () => this.alignCenter();\n    this.resizeFrame_ = 0;\n  }\n  init() {\n    this.alignCenter();\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n  destroy() {\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n  alignCenter() {\n    if (this.resizeFrame_ !== 0) {\n      cancelAnimationFrame(this.resizeFrame_);\n    }\n    this.resizeFrame_ = requestAnimationFrame(() => {\n      this.alignCenter_();\n      this.resizeFrame_ = 0;\n    });\n  }\n  alignCenter_() {\n    if (this.adapter_.getNumberOfTiles() == 0) {\n      return;\n    }\n    const gridWidth = this.adapter_.getOffsetWidth();\n    const itemWidth = this.adapter_.getOffsetWidthForTileAtIndex(0);\n    const tilesWidth = itemWidth * Math.floor(gridWidth / itemWidth);\n    this.adapter_.setStyleForTilesElement('width', `${tilesWidth}px`);\n  }\n}\n","<template>\n  <div class=\"mdc-grid-list\">\n    <ul class=\"mdc-grid-list__tiles\" :class=\"classes\" :style=styles>\n        <slot></slot>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport MDCGridListFoundation from '@material/grid-list/foundation'\n\nexport default {\n  name: 'mdc-grid-list',\n  props: {\n    'width': [String, Number],\n    'ratio': String,\n    'narrow-gutter': Boolean,\n    'header-caption': Boolean,\n    'icon-align-start': Boolean,\n    'icon-align-end': Boolean,\n    'with-support-text': Boolean,\n    'interactive': Boolean\n  },\n  provide () {\n    return { mdcGrid: this }\n  },\n  computed: {\n    classes () {\n      let classes = {}\n\n      classes['mdc-grid-list--tile-gutter-1'] = this.narrowGutter\n      classes['mdc-grid-list--header-caption'] = this.headerCaption\n      classes[`mdc-grid-list--tile-aspect-${this.ratio}`] = this.ratio\n      classes['mdc-grid-list--with-icon-align-start'] = this.iconAlignStart\n      classes['mdc-grid-list--with-icon-align-end'] = this.iconAlignEnd\n      classes['mdc-grid-list--twoline-caption'] = this.withSupportText\n      classes['mdc-grid-list--non-interactive'] = !this.interactive\n\n      return classes\n    },\n    styles () {\n      var defaultWidth = 200\n      return {\n        '--mdc-grid-list-tile-width': `${this.width || defaultWidth}px`\n      }\n    }\n  },\n  mounted () {\n    this.foundation = new MDCGridListFoundation({\n      getOffsetWidth: () => {\n        return this.$el.offsetWidth\n      },\n      getNumberOfTiles: () => {\n        return this.$el.querySelectorAll(\n          MDCGridListFoundation.strings.TILE_SELECTOR).length\n      },\n      getOffsetWidthForTileAtIndex: (index) => {\n        return this.$el.querySelectorAll(\n          MDCGridListFoundation.strings.TILE_SELECTOR)[index].offsetWidth\n      },\n      setStyleForTilesElement: (property, value) => {\n        this.$el.querySelector(\n          MDCGridListFoundation.strings.TILES_SELECTOR).style[property] = value\n      },\n      registerResizeHandler: (handler) => {\n        window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: (handler) => {\n        window.removeEventListener('resize', handler)\n      }\n    })\n    this.foundation.init()\n  },\n  beforeDestroy () {\n    this.foundation.destroy()\n  }\n}\n</script>\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst cssClasses = {\n  // Ripple is a special case where the \"root\" component is really a \"mixin\" of sorts,\n  // given that it's an 'upgrade' to an existing component. That being said it is the root\n  // CSS class that all other CSS classes derive from.\n  ROOT: 'mdc-ripple-upgraded',\n  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',\n  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',\n  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',\n  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation',\n};\n\nconst strings = {\n  VAR_LEFT: '--mdc-ripple-left',\n  VAR_TOP: '--mdc-ripple-top',\n  VAR_FG_SIZE: '--mdc-ripple-fg-size',\n  VAR_FG_SCALE: '--mdc-ripple-fg-scale',\n  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',\n  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end',\n};\n\nconst numbers = {\n  PADDING: 10,\n  INITIAL_ORIGIN_SCALE: 0.6,\n  DEACTIVATION_TIMEOUT_MS: 225, // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)\n  FG_DEACTIVATION_MS: 150, // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)\n  TAP_DELAY_MS: 300, // Delay between touch and simulated mouse events on touch devices\n};\n\nexport {cssClasses, strings, numbers};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint no-unused-vars: [2, {\"args\": \"none\"}] */\n\n/**\n * Adapter for MDC Ripple. Provides an interface for managing\n * - classes\n * - dom\n * - CSS variables\n * - position\n * - dimensions\n * - scroll position\n * - event handlers\n * - unbounded, active and disabled states\n *\n * Additionally, provides type information for the adapter to the Closure\n * compiler.\n *\n * Implement this adapter for your framework of choice to delegate updates to\n * the component in your framework of choice. See architecture documentation\n * for more details.\n * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md\n *\n * @record\n */\nclass MDCRippleAdapter {\n  /** @return {boolean} */\n  browserSupportsCssVars() {}\n\n  /** @return {boolean} */\n  isUnbounded() {}\n\n  /** @return {boolean} */\n  isSurfaceActive() {}\n\n  /** @return {boolean} */\n  isSurfaceDisabled() {}\n\n  /** @param {string} className */\n  addClass(className) {}\n\n  /** @param {string} className */\n  removeClass(className) {}\n\n  /** @param {!EventTarget} target */\n  containsEventTarget(target) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  registerDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {string} evtType\n   * @param {!Function} handler\n   */\n  deregisterDocumentInteractionHandler(evtType, handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  registerResizeHandler(handler) {}\n\n  /**\n   * @param {!Function} handler\n   */\n  deregisterResizeHandler(handler) {}\n\n  /**\n   * @param {string} varName\n   * @param {?number|string} value\n   */\n  updateCssVariable(varName, value) {}\n\n  /** @return {!ClientRect} */\n  computeBoundingRect() {}\n\n  /** @return {{x: number, y: number}} */\n  getWindowPageOffset() {}\n}\n\nexport default MDCRippleAdapter;\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.\n * @private {boolean|undefined}\n */\nlet supportsCssVariables_;\n\n/**\n * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.\n * @private {boolean|undefined}\n */\nlet supportsPassive_;\n\n/**\n * @param {!Window} windowObj\n * @return {boolean}\n */\nfunction detectEdgePseudoVarBug(windowObj) {\n  // Detect versions of Edge with buggy var() support\n  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/\n  const document = windowObj.document;\n  const node = document.createElement('div');\n  node.className = 'mdc-ripple-surface--test-edge-var-bug';\n  document.body.appendChild(node);\n\n  // The bug exists if ::before style ends up propagating to the parent element.\n  // Additionally, getComputedStyle returns null in iframes with display: \"none\" in Firefox,\n  // but Firefox is known to support CSS custom properties correctly.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  const computedStyle = windowObj.getComputedStyle(node);\n  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';\n  node.remove();\n  return hasPseudoVarBug;\n}\n\n/**\n * @param {!Window} windowObj\n * @param {boolean=} forceRefresh\n * @return {boolean|undefined}\n */\n\nfunction supportsCssVariables(windowObj, forceRefresh = false) {\n  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {\n    return supportsCssVariables_;\n  }\n\n  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';\n  if (!supportsFunctionPresent) {\n    return;\n  }\n\n  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes');\n  // See: https://bugs.webkit.org/show_bug.cgi?id=154669\n  // See: README section on Safari\n  const weAreFeatureDetectingSafari10plus = (\n    windowObj.CSS.supports('(--css-vars: yes)') &&\n    windowObj.CSS.supports('color', '#00000000')\n  );\n\n  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {\n    supportsCssVariables_ = !detectEdgePseudoVarBug(windowObj);\n  } else {\n    supportsCssVariables_ = false;\n  }\n  return supportsCssVariables_;\n}\n\n//\n/**\n * Determine whether the current browser supports passive event listeners, and if so, use them.\n * @param {!Window=} globalObj\n * @param {boolean=} forceRefresh\n * @return {boolean|{passive: boolean}}\n */\nfunction applyPassive(globalObj = window, forceRefresh = false) {\n  if (supportsPassive_ === undefined || forceRefresh) {\n    let isSupported = false;\n    try {\n      globalObj.document.addEventListener('test', null, {get passive() {\n        isSupported = true;\n      }});\n    } catch (e) { }\n\n    supportsPassive_ = isSupported;\n  }\n\n  return supportsPassive_ ? {passive: true} : false;\n}\n\n/**\n * @param {!Object} HTMLElementPrototype\n * @return {!Array<string>}\n */\nfunction getMatchesProperty(HTMLElementPrototype) {\n  return [\n    'webkitMatchesSelector', 'msMatchesSelector', 'matches',\n  ].filter((p) => p in HTMLElementPrototype).pop();\n}\n\n/**\n * @param {!Event} ev\n * @param {!{x: number, y: number}} pageOffset\n * @param {!ClientRect} clientRect\n * @return {!{x: number, y: number}}\n */\nfunction getNormalizedEventCoords(ev, pageOffset, clientRect) {\n  const {x, y} = pageOffset;\n  const documentX = x + clientRect.left;\n  const documentY = y + clientRect.top;\n\n  let normalizedX;\n  let normalizedY;\n  // Determine touch point relative to the ripple container.\n  if (ev.type === 'touchstart') {\n    normalizedX = ev.changedTouches[0].pageX - documentX;\n    normalizedY = ev.changedTouches[0].pageY - documentY;\n  } else {\n    normalizedX = ev.pageX - documentX;\n    normalizedY = ev.pageY - documentY;\n  }\n\n  return {x: normalizedX, y: normalizedY};\n}\n\nexport {supportsCssVariables, applyPassive, getMatchesProperty, getNormalizedEventCoords};\n","/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport MDCFoundation from '@material/base/foundation';\nimport MDCRippleAdapter from './adapter';\nimport {cssClasses, strings, numbers} from './constants';\nimport {getNormalizedEventCoords} from './util';\n\n/**\n * @typedef {!{\n *   isActivated: (boolean|undefined),\n *   hasDeactivationUXRun: (boolean|undefined),\n *   wasActivatedByPointer: (boolean|undefined),\n *   wasElementMadeActive: (boolean|undefined),\n *   activationEvent: Event,\n *   isProgrammatic: (boolean|undefined)\n * }}\n */\nlet ActivationStateType;\n\n/**\n * @typedef {!{\n *   activate: (string|undefined),\n *   deactivate: (string|undefined),\n *   focus: (string|undefined),\n *   blur: (string|undefined)\n * }}\n */\nlet ListenerInfoType;\n\n/**\n * @typedef {!{\n *   activate: function(!Event),\n *   deactivate: function(!Event),\n *   focus: function(),\n *   blur: function()\n * }}\n */\nlet ListenersType;\n\n/**\n * @typedef {!{\n *   x: number,\n *   y: number\n * }}\n */\nlet PointType;\n\n// Activation events registered on the root element of each instance for activation\nconst ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown'];\n\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nconst POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup'];\n\n// Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations\n/** @type {!Array<!EventTarget>} */\nlet activatedTargets = [];\n\n/**\n * @extends {MDCFoundation<!MDCRippleAdapter>}\n */\nclass MDCRippleFoundation extends MDCFoundation {\n  static get cssClasses() {\n    return cssClasses;\n  }\n\n  static get strings() {\n    return strings;\n  }\n\n  static get numbers() {\n    return numbers;\n  }\n\n  static get defaultAdapter() {\n    return {\n      browserSupportsCssVars: () => /* boolean - cached */ {},\n      isUnbounded: () => /* boolean */ {},\n      isSurfaceActive: () => /* boolean */ {},\n      isSurfaceDisabled: () => /* boolean */ {},\n      addClass: (/* className: string */) => {},\n      removeClass: (/* className: string */) => {},\n      containsEventTarget: (/* target: !EventTarget */) => {},\n      registerInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      deregisterDocumentInteractionHandler: (/* evtType: string, handler: EventListener */) => {},\n      registerResizeHandler: (/* handler: EventListener */) => {},\n      deregisterResizeHandler: (/* handler: EventListener */) => {},\n      updateCssVariable: (/* varName: string, value: string */) => {},\n      computeBoundingRect: () => /* ClientRect */ {},\n      getWindowPageOffset: () => /* {x: number, y: number} */ {},\n    };\n  }\n\n  constructor(adapter) {\n    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));\n\n    /** @private {number} */\n    this.layoutFrame_ = 0;\n\n    /** @private {!ClientRect} */\n    this.frame_ = /** @type {!ClientRect} */ ({width: 0, height: 0});\n\n    /** @private {!ActivationStateType} */\n    this.activationState_ = this.defaultActivationState_();\n\n    /** @private {number} */\n    this.initialSize_ = 0;\n\n    /** @private {number} */\n    this.maxRadius_ = 0;\n\n    /** @private {function(!Event)} */\n    this.activateHandler_ = (e) => this.activate_(e);\n\n    /** @private {function(!Event)} */\n    this.deactivateHandler_ = (e) => this.deactivate_(e);\n\n    /** @private {function(?Event=)} */\n    this.focusHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {function(?Event=)} */\n    this.blurHandler_ = () => requestAnimationFrame(\n      () => this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED)\n    );\n\n    /** @private {!Function} */\n    this.resizeHandler_ = () => this.layout();\n\n    /** @private {!{left: number, top:number}} */\n    this.unboundedCoords_ = {\n      left: 0,\n      top: 0,\n    };\n\n    /** @private {number} */\n    this.fgScale_ = 0;\n\n    /** @private {number} */\n    this.activationTimer_ = 0;\n\n    /** @private {number} */\n    this.fgDeactivationRemovalTimer_ = 0;\n\n    /** @private {boolean} */\n    this.activationAnimationHasEnded_ = false;\n\n    /** @private {!Function} */\n    this.activationTimerCallback_ = () => {\n      this.activationAnimationHasEnded_ = true;\n      this.runDeactivationUXLogicIfReady_();\n    };\n\n    /** @private {?Event} */\n    this.previousActivationEvent_ = null;\n  }\n\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   * @return {boolean}\n   * @private\n   */\n  isSupported_() {\n    return this.adapter_.browserSupportsCssVars();\n  }\n\n  /**\n   * @return {!ActivationStateType}\n   */\n  defaultActivationState_() {\n    return {\n      isActivated: false,\n      hasDeactivationUXRun: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false,\n      activationEvent: null,\n      isProgrammatic: false,\n    };\n  }\n\n  init() {\n    if (!this.isSupported_()) {\n      return;\n    }\n    this.registerRootHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.addClass(ROOT);\n      if (this.adapter_.isUnbounded()) {\n        this.adapter_.addClass(UNBOUNDED);\n      }\n      this.layoutInternal_();\n    });\n  }\n\n  destroy() {\n    if (!this.isSupported_()) {\n      return;\n    }\n    this.deregisterRootHandlers_();\n    this.deregisterDeactivationHandlers_();\n\n    const {ROOT, UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    requestAnimationFrame(() => {\n      this.adapter_.removeClass(ROOT);\n      this.adapter_.removeClass(UNBOUNDED);\n      this.removeCssVars_();\n    });\n  }\n\n  /** @private */\n  registerRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.registerInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.registerResizeHandler(this.resizeHandler_);\n  }\n\n  /**\n   * @param {!Event} e\n   * @private\n   */\n  registerDeactivationHandlers_(e) {\n    if (e.type === 'keydown') {\n      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);\n    } else {\n      POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);\n      });\n    }\n  }\n\n  /** @private */\n  deregisterRootHandlers_() {\n    ACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);\n    });\n    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);\n    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);\n    this.adapter_.deregisterResizeHandler(this.resizeHandler_);\n  }\n\n  /** @private */\n  deregisterDeactivationHandlers_() {\n    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);\n    POINTER_DEACTIVATION_EVENT_TYPES.forEach((type) => {\n      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);\n    });\n  }\n\n  /** @private */\n  removeCssVars_() {\n    const {strings} = MDCRippleFoundation;\n    Object.keys(strings).forEach((k) => {\n      if (k.indexOf('VAR_') === 0) {\n        this.adapter_.updateCssVariable(strings[k], null);\n      }\n    });\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  activate_(e) {\n    if (this.adapter_.isSurfaceDisabled()) {\n      return;\n    }\n\n    const activationState = this.activationState_;\n    if (activationState.isActivated) {\n      return;\n    }\n\n    // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n    const previousActivationEvent = this.previousActivationEvent_;\n    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = e === null;\n    activationState.activationEvent = e;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : (\n      e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown'\n    );\n\n    const hasActivatedChild =\n      e && activatedTargets.length > 0 && activatedTargets.some((target) => this.adapter_.containsEventTarget(target));\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState_();\n      return;\n    }\n\n    if (e) {\n      activatedTargets.push(/** @type {!EventTarget} */ (e.target));\n      this.registerDeactivationHandlers_(e);\n    }\n\n    requestAnimationFrame(() => {\n      // This needs to be wrapped in an rAF call b/c web browsers\n      // report active states inconsistently when they're called within\n      // event handling code:\n      // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n      // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n      activationState.wasElementMadeActive = (e && e.type === 'keydown') ? this.adapter_.isSurfaceActive() : true;\n      if (activationState.wasElementMadeActive) {\n        this.animateActivation_();\n      } else {\n        // Reset activation state immediately if element was not made active.\n        this.activationState_ = this.defaultActivationState_();\n      }\n\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n    });\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  activate(event = null) {\n    this.activate_(event);\n  }\n\n  /** @private */\n  animateActivation_() {\n    const {VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END} = MDCRippleFoundation.strings;\n    const {FG_DEACTIVATION, FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {DEACTIVATION_TIMEOUT_MS} = MDCRippleFoundation.numbers;\n\n    let translateStart = '';\n    let translateEnd = '';\n\n    if (!this.adapter_.isUnbounded()) {\n      const {startPoint, endPoint} = this.getFgTranslationCoordinates_();\n      translateStart = `${startPoint.x}px, ${startPoint.y}px`;\n      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;\n    }\n\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n    // Cancel any ongoing activation/deactivation animations\n    clearTimeout(this.activationTimer_);\n    clearTimeout(this.fgDeactivationRemovalTimer_);\n    this.rmBoundedActivationClasses_();\n    this.adapter_.removeClass(FG_DEACTIVATION);\n\n    // Force layout in order to re-trigger the animation.\n    this.adapter_.computeBoundingRect();\n    this.adapter_.addClass(FG_ACTIVATION);\n    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);\n  }\n\n  /**\n   * @private\n   * @return {{startPoint: PointType, endPoint: PointType}}\n   */\n  getFgTranslationCoordinates_() {\n    const {activationEvent, wasActivatedByPointer} = this.activationState_;\n\n    let startPoint;\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(\n        /** @type {!Event} */ (activationEvent),\n        this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect()\n      );\n    } else {\n      startPoint = {\n        x: this.frame_.width / 2,\n        y: this.frame_.height / 2,\n      };\n    }\n    // Center the element around the start point.\n    startPoint = {\n      x: startPoint.x - (this.initialSize_ / 2),\n      y: startPoint.y - (this.initialSize_ / 2),\n    };\n\n    const endPoint = {\n      x: (this.frame_.width / 2) - (this.initialSize_ / 2),\n      y: (this.frame_.height / 2) - (this.initialSize_ / 2),\n    };\n\n    return {startPoint, endPoint};\n  }\n\n  /** @private */\n  runDeactivationUXLogicIfReady_() {\n    // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n    const {FG_DEACTIVATION} = MDCRippleFoundation.cssClasses;\n    const {hasDeactivationUXRun, isActivated} = this.activationState_;\n    const activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded_) {\n      this.rmBoundedActivationClasses_();\n      this.adapter_.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer_ = setTimeout(() => {\n        this.adapter_.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  }\n\n  /** @private */\n  rmBoundedActivationClasses_() {\n    const {FG_ACTIVATION} = MDCRippleFoundation.cssClasses;\n    this.adapter_.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded_ = false;\n    this.adapter_.computeBoundingRect();\n  }\n\n  resetActivationState_() {\n    this.previousActivationEvent_ = this.activationState_.activationEvent;\n    this.activationState_ = this.defaultActivationState_();\n    // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  }\n\n  /**\n   * @param {?Event} e\n   * @private\n   */\n  deactivate_(e) {\n    const activationState = this.activationState_;\n    // This can happen in scenarios such as when you have a keyup event that blurs the element.\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    const state = /** @type {!ActivationStateType} */ (Object.assign({}, activationState));\n\n    if (activationState.isProgrammatic) {\n      const evtObject = null;\n      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));\n      this.resetActivationState_();\n    } else {\n      this.deregisterDeactivationHandlers_();\n      requestAnimationFrame(() => {\n        this.activationState_.hasDeactivationUXRun = true;\n        this.animateDeactivation_(e, state);\n        this.resetActivationState_();\n      });\n    }\n  }\n\n  /**\n   * @param {?Event=} event Optional event containing position information.\n   */\n  deactivate(event = null) {\n    this.deactivate_(event);\n  }\n\n  /**\n   * @param {Event} e\n   * @param {!ActivationStateType} options\n   * @private\n   */\n  animateDeactivation_(e, {wasActivatedByPointer, wasElementMadeActive}) {\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady_();\n    }\n  }\n\n  layout() {\n    if (this.layoutFrame_) {\n      cancelAnimationFrame(this.layoutFrame_);\n    }\n    this.layoutFrame_ = requestAnimationFrame(() => {\n      this.layoutInternal_();\n      this.layoutFrame_ = 0;\n    });\n  }\n\n  /** @private */\n  layoutInternal_() {\n    this.frame_ = this.adapter_.computeBoundingRect();\n    const maxDim = Math.max(this.frame_.height, this.frame_.width);\n\n    // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n    const getBoundedRadius = () => {\n      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius();\n\n    // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;\n    this.fgScale_ = this.maxRadius_ / this.initialSize_;\n\n    this.updateLayoutCssVars_();\n  }\n\n  /** @private */\n  updateLayoutCssVars_() {\n    const {\n      VAR_FG_SIZE, VAR_LEFT, VAR_TOP, VAR_FG_SCALE,\n    } = MDCRippleFoundation.strings;\n\n    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);\n    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);\n\n    if (this.adapter_.isUnbounded()) {\n      this.unboundedCoords_ = {\n        left: Math.round((this.frame_.width / 2) - (this.initialSize_ / 2)),\n        top: Math.round((this.frame_.height / 2) - (this.initialSize_ / 2)),\n      };\n\n      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);\n      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);\n    }\n  }\n\n  /** @param {boolean} unbounded */\n  setUnbounded(unbounded) {\n    const {UNBOUNDED} = MDCRippleFoundation.cssClasses;\n    if (unbounded) {\n      this.adapter_.addClass(UNBOUNDED);\n    } else {\n      this.adapter_.removeClass(UNBOUNDED);\n    }\n  }\n}\n\nexport default MDCRippleFoundation;\n","export function BasePlugin (components) { \n  return {\n    version: '__VERSION__',\n    install: (vm) => {\n      for (let key in components) {\n        let component = components[key]\n          vm.component(component.name,component)\n      }\n    },\n    components\n  } \n}\n\n","import MDCRippleFoundation from '@material/ripple/foundation.js'\nimport {supportsCssVariables, getMatchesProperty, applyPassive} from '@material/ripple/util'\n\nexport class RippleBase extends MDCRippleFoundation {\n\n  static get MATCHES () {\n    /* global HTMLElement */\n    return RippleBase._matches ||\n      ( RippleBase._matches = getMatchesProperty(HTMLElement.prototype))\n  }\n\n  static isSurfaceActive (ref) {\n    return ref[RippleBase.MATCHES](':active')\n  }\n\n  constructor (vm, options) {\n    super(Object.assign({\n      browserSupportsCssVars: () => {\n        return supportsCssVariables(window)\n      },\n      isUnbounded: () => {\n        return false\n      },\n      isSurfaceActive: () => {\n        return vm.$el[RippleBase.MATCHES](':active')\n      },\n      isSurfaceDisabled: () => {\n        return vm.disabled\n      },\n      addClass (className) {\n        vm.$set(vm.classes, className, true)\n      },\n      removeClass (className) {\n        vm.$delete(vm.classes, className)\n      },\n      containsEventTarget: (target) => vm.$el.contains(target),\n      registerInteractionHandler: (evt, handler) => {\n        vm.$el.addEventListener(evt, handler)\n      },\n      deregisterInteractionHandler: (evt, handler) => {\n        vm.$el.removeEventListener(evt, handler)\n      },\n      registerDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.addEventListener(evtType, handler, applyPassive()),\n      deregisterDocumentInteractionHandler: (evtType, handler) =>\n        document.documentElement.removeEventListener(evtType, handler, applyPassive()),\n      registerResizeHandler: (handler) => {\n        return window.addEventListener('resize', handler)\n      },\n      deregisterResizeHandler: (handler) => {\n        return window.removeEventListener('resize', handler)\n      },\n      updateCssVariable: (varName, value) => {\n        vm.$set(vm.styles, varName, value)\n      },\n      computeBoundingRect: () => {\n        return vm.$el.getBoundingClientRect()\n      },\n      getWindowPageOffset: () => {\n        return ({x: window.pageXOffset, y: window.pageYOffset})\n      },\n    }, options))\n  }\n}\n\nexport const RippleMixin = {\n  data () {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  mounted () {\n    this.ripple = new RippleBase(this)\n    this.ripple.init()\n  },\n  beforeDestroy () {\n    this.ripple.destroy()\n  }\n}  ","<template>\n  <li class=\"mdc-grid-tile\" @click=\"onClick\"\n    :class=\"[classes, itemClasses]\" :style=\"styles\"\n    :tabindex=\"isInteractive ? '0' : undefined\"\n    v-on=\"isInteractive ? $listeners : {}\">\n    <div class=\"mdc-grid-tile__primary\" v-if=\"cover\">\n      <div class=\"mdc-grid-tile__primary-content\"\n        :style=\"{ backgroundImage: 'url(' + src + ')' }\">\n      </div>\n    </div>\n    <div class=\"mdc-grid-tile__primary\" v-else>\n        <img class=\"mdc-grid-tile__primary-content\" :src=\"src\" />\n    </div>\n    <span class=\"mdc-grid-tile__secondary\" v-if=\"title || supportText\">\n      <i class=\"mdc-grid-tile__icon material-icons\" v-if=\"icon\">{{ icon }}</i>\n      <span class=\"mdc-grid-tile__title\" v-if=\"title\">{{ title }}</span>\n      <span class=\"mdc-grid-tile__support-text\" v-if=\"supportText\">{{ supportText }}</span>\n    </span>\n  </li>\n</template>\n\n\n<script>\nimport {DispatchEventMixin} from '../base'\nimport {RippleBase} from '../ripple'\n\nexport default {\n  name: 'mdc-grid-tile',\n  inject: ['mdcGrid'],\n  mixins: [DispatchEventMixin],\n  props: {\n    'src': String,\n    'cover': Boolean,\n    'icon': String,\n    'title': String,\n    'support-text': String,\n    'selected': Boolean,\n    'activated': Boolean\n  },\n  data () {\n    return {\n      classes: {},\n      styles: {}\n    }\n  },\n  computed: {\n    itemClasses () {\n      return {\n        'mdc-grid-tile--selected': this.selected,\n        'mdc-grid-tile--activated': this.activated\n      }\n    },\n    isInteractive () {\n      return this.mdcGrid && this.mdcGrid.interactive\n    },\n    hasStartDetail () {\n      return this.startIcon || this.$slots['start-detail']\n    },\n    hasEndDetail () {\n      return this.endIcon || this.$slots['end-detail']\n    }\n  },\n  watch: {\n    isInteractive (value) {\n      if (value) {\n        this.addRipple()\n      } else {\n        this.removeRipple()\n      }\n    }\n  },\n  methods: {\n    onClick (evt) {\n      this.dispatchEvent(evt)\n    },\n    addRipple () {\n      if (!this.ripple) {\n        let ripple = new RippleBase(this)\n        ripple.init()\n        this.ripple = ripple\n      }\n    },\n    removeRipple () {\n      if (this.ripple) {\n        let ripple = this.ripple\n        this.ripple = null\n        ripple.destroy()\n      }\n    }\n  },\n  mounted () {\n    this.isInteractive && this.addRipple()\n    /* eslint-disable no-console */\n    console.log(this)\n    console.log(this.$el.getBoundingClientRect())\n    console.log(this.ripple)\n    /* eslint-enable no-console */\n  },\n  beforeDestroy () {\n    this.removeRipple()\n  }\n}\n</script>\n","export function autoInit (plugin) {\n  // Auto-install\n  let _Vue = null\n  if (typeof window !== 'undefined') {\n    _Vue = window.Vue\n  } else if (typeof global !== 'undefined') {\n    /*global global*/\n    _Vue = global.Vue\n  }\n  if (_Vue) {\n    _Vue.use(plugin)\n  }\n}\n  ","import './styles.scss'\nimport {autoInit} from '../base'\nimport plugin from './index.js'\nexport default plugin\n\nautoInit(plugin)\n"],"names":["DispatchEventMixin","String","Object","Array","evt","$emit","type","this","event","target","eventTarget","$root","args","eventArgs","MDCFoundation","adapter","adapter_","strings","root","foundation","undefined","root_","initialize","foundation_","getDefaultFoundation","init","initialSyncWithDOM","MDCComponent","Error","destroy","evtType","handler","addEventListener","removeEventListener","evtData","shouldBubble","CustomEvent","document","createEvent","initCustomEvent","dispatchEvent","MDCGridListFoundation","babelHelpers.extends","defaultAdapter","resizeHandler_","_this","alignCenter","resizeFrame_","registerResizeHandler","deregisterResizeHandler","requestAnimationFrame","alignCenter_","getNumberOfTiles","gridWidth","getOffsetWidth","itemWidth","getOffsetWidthForTileAtIndex","tilesWidth","Math","floor","setStyleForTilesElement","render","Number","Boolean","mdcGrid","classes","narrowGutter","headerCaption","ratio","iconAlignStart","iconAlignEnd","withSupportText","interactive","width","$el","offsetWidth","querySelectorAll","TILE_SELECTOR","length","index","property","value","querySelector","TILES_SELECTOR","style","cssClasses","className","varName","numbers","supportsCssVariables_","supportsPassive_","applyPassive","globalObj","window","forceRefresh","isSupported","passive","e","components","ACTIVATION_EVENT_TYPES","POINTER_DEACTIVATION_EVENT_TYPES","activatedTargets","MDCRippleFoundation","layoutFrame_","frame_","height","activationState_","defaultActivationState_","initialSize_","maxRadius_","activateHandler_","activate_","deactivateHandler_","deactivate_","focusHandler_","addClass","BG_FOCUSED","blurHandler_","removeClass","layout","unboundedCoords_","fgScale_","activationTimer_","fgDeactivationRemovalTimer_","activationAnimationHasEnded_","activationTimerCallback_","runDeactivationUXLogicIfReady_","previousActivationEvent_","browserSupportsCssVars","isSupported_","registerRootHandlers_","ROOT","UNBOUNDED","_this2","isUnbounded","layoutInternal_","deregisterRootHandlers_","deregisterDeactivationHandlers_","removeCssVars_","forEach","registerInteractionHandler","_this4","registerDocumentInteractionHandler","_this5","deregisterInteractionHandler","_this6","deregisterDocumentInteractionHandler","_this7","keys","k","indexOf","updateCssVariable","isSurfaceDisabled","activationState","isActivated","previousActivationEvent","isProgrammatic","activationEvent","wasActivatedByPointer","some","_this9","containsEventTarget","resetActivationState_","push","registerDeactivationHandlers_","wasElementMadeActive","isSurfaceActive","animateActivation_","VAR_FG_TRANSLATE_START","VAR_FG_TRANSLATE_END","FG_DEACTIVATION","FG_ACTIVATION","DEACTIVATION_TIMEOUT_MS","translateStart","translateEnd","getFgTranslationCoordinates_","startPoint","endPoint","x","y","rmBoundedActivationClasses_","computeBoundingRect","setTimeout","_this10","ev","pageOffset","clientRect","documentX","documentY","normalizedX","normalizedY","getWindowPageOffset","left","top","changedTouches","pageX","pageY","hasDeactivationUXRun","FG_DEACTIVATION_MS","_this12","TAP_DELAY_MS","state","_this13","animateDeactivation_","maxDim","max","sqrt","pow","_this15","PADDING","INITIAL_ORIGIN_SCALE","updateLayoutCssVars_","VAR_FG_SIZE","VAR_LEFT","VAR_TOP","VAR_FG_SCALE","round","unbounded","RippleBase","vm","options","windowObj","CSS","supports","explicitlySupportsCssVars","weAreFeatureDetectingSafari10plus","node","createElement","body","appendChild","computedStyle","getComputedStyle","hasPseudoVarBug","borderTopStyle","remove","detectEdgePseudoVarBug","supportsCssVariables","MATCHES","disabled","$set","$delete","contains","documentElement","styles","getBoundingClientRect","pageXOffset","pageYOffset","ref","_matches","HTMLElementPrototype","HTMLElement","prototype","filter","p","pop","selected","activated","startIcon","$slots","endIcon","addRipple","removeRipple","ripple","isInteractive","log","key","component","name","plugin","_Vue","Vue","global","use"],"mappings":"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"}